type_info:
  documentationLink: https://cloud.google.com/kms/
  kind: deploymentmanager#typeInfo
  name: projects.locations.keyRings.importJobs
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          attestation:
            $ref: '#/schemas/KeyOperationAttestation'
            description: |-
              Output only. Statement that was generated and signed by the key creator
              (for example, an HSM) at key creation time. Use this statement to verify
              attributes of the key as stored on the HSM, independently of Google.
              Only present if the chosen ImportMethod is one with a protection
              level of HSM.
          expireEventTime:
            description: |-
              Output only. The time this ImportJob expired. Only present if
              state is EXPIRED.
            format: google-datetime
            type: string
          expireTime:
            description: |-
              Output only. The time at which this ImportJob is scheduled for
              expiration and can no longer be used to import key material.
            format: google-datetime
            type: string
          importJobId:
            description: |-
              Required. It must be unique within a KeyRing and match the regular
              expression `[a-zA-Z0-9_-]{1,63}`
            location: query
            type: string
          importMethod:
            description: |-
              Required and immutable. The wrapping method to be used for incoming
              key material.
            enum:
            - IMPORT_METHOD_UNSPECIFIED
            - RSA_OAEP_3072_SHA1_AES_256
            - RSA_OAEP_4096_SHA1_AES_256
            enumDescriptions:
            - Not specified.
            - |-
              This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
              scheme defined in the PKCS #11 standard. In summary, this involves
              wrapping the raw key with an ephemeral AES key, and wrapping the
              ephemeral AES key with a 3072 bit RSA key. For more details, see
              [RSA AES key wrap
              mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
            - |-
              This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
              scheme defined in the PKCS #11 standard. In summary, this involves
              wrapping the raw key with an ephemeral AES key, and wrapping the
              ephemeral AES key with a 4096 bit RSA key. For more details, see
              [RSA AES key wrap
              mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
            type: string
          name:
            description: |-
              Output only. The resource name for this ImportJob in the format
              `projects/*/locations/*/keyRings/*/importJobs/*`.
            type: string
          parent:
            description: |-
              Required. The name of the KeyRing associated with the
              ImportJobs.
            location: path
            pattern: ^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$
            required: true
            type: string
          protectionLevel:
            description: |-
              Required and immutable. The protection level of the ImportJob. This
              must match the
              protection_level of the
              version_template on the CryptoKey you
              attempt to import into.
            enum:
            - PROTECTION_LEVEL_UNSPECIFIED
            - SOFTWARE
            - HSM
            enumDescriptions:
            - Not specified.
            - Crypto operations are performed in software.
            - Crypto operations are performed in a Hardware Security Module.
            type: string
          publicKey:
            $ref: '#/schemas/WrappingPublicKey'
            description: |-
              Output only. The public key with which to wrap key material prior to
              import. Only returned if state is
              ACTIVE.
          state:
            description: |-
              Output only. The current state of the ImportJob, indicating if it can
              be used.
            enum:
            - IMPORT_JOB_STATE_UNSPECIFIED
            - PENDING_GENERATION
            - ACTIVE
            - EXPIRED
            enumDescriptions:
            - Not specified.
            - |-
              The wrapping key for this job is still being generated. It may not be
              used. Cloud KMS will automatically mark this job as
              ACTIVE as soon as the wrapping key is generated.
            - |-
              This job may be used in
              CreateCryptoKey and
              CreateCryptoKeyVersion
              requests.
            - This job can no longer be used and may not leave this state once entered.
            type: string
        type: object
      methodName: create
      schemas:
        ImportJob:
          description: |-
            An ImportJob can be used to create CryptoKeys and
            CryptoKeyVersions using pre-existing key material,
            generated outside of Cloud KMS.

            When an ImportJob is created, Cloud KMS will generate a "wrapping key",
            which is a public/private key pair. You use the wrapping key to encrypt (also
            known as wrap) the pre-existing key material to protect it during the import
            process. The nature of the wrapping key depends on the choice of
            import_method. When the wrapping key generation
            is complete, the state will be set to
            ACTIVE and the public_key
            can be fetched. The fetched public key can then be used to wrap your
            pre-existing key material.

            Once the key material is wrapped, it can be imported into a new
            CryptoKeyVersion in an existing CryptoKey by calling
            ImportCryptoKeyVersion.
            Multiple CryptoKeyVersions can be imported with a single
            ImportJob. Cloud KMS uses the private key portion of the wrapping key to
            unwrap the key material. Only Cloud KMS has access to the private key.

            An ImportJob expires 3 days after it is created. Once expired, Cloud KMS
            will no longer be able to import or unwrap any key material that was wrapped
            with the ImportJob's public key.

            For more information, see
            [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).
          id: ImportJob
          properties:
            attestation:
              $ref: '#/schemas/KeyOperationAttestation'
              description: |-
                Output only. Statement that was generated and signed by the key creator
                (for example, an HSM) at key creation time. Use this statement to verify
                attributes of the key as stored on the HSM, independently of Google.
                Only present if the chosen ImportMethod is one with a protection
                level of HSM.
            expireEventTime:
              description: |-
                Output only. The time this ImportJob expired. Only present if
                state is EXPIRED.
              format: google-datetime
              type: string
            expireTime:
              description: |-
                Output only. The time at which this ImportJob is scheduled for
                expiration and can no longer be used to import key material.
              format: google-datetime
              type: string
            importMethod:
              description: |-
                Required and immutable. The wrapping method to be used for incoming
                key material.
              enum:
              - IMPORT_METHOD_UNSPECIFIED
              - RSA_OAEP_3072_SHA1_AES_256
              - RSA_OAEP_4096_SHA1_AES_256
              enumDescriptions:
              - Not specified.
              - |-
                This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
                scheme defined in the PKCS #11 standard. In summary, this involves
                wrapping the raw key with an ephemeral AES key, and wrapping the
                ephemeral AES key with a 3072 bit RSA key. For more details, see
                [RSA AES key wrap
                mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
              - |-
                This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
                scheme defined in the PKCS #11 standard. In summary, this involves
                wrapping the raw key with an ephemeral AES key, and wrapping the
                ephemeral AES key with a 4096 bit RSA key. For more details, see
                [RSA AES key wrap
                mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
              type: string
            name:
              description: |-
                Output only. The resource name for this ImportJob in the format
                `projects/*/locations/*/keyRings/*/importJobs/*`.
              type: string
            protectionLevel:
              description: |-
                Required and immutable. The protection level of the ImportJob. This
                must match the
                protection_level of the
                version_template on the CryptoKey you
                attempt to import into.
              enum:
              - PROTECTION_LEVEL_UNSPECIFIED
              - SOFTWARE
              - HSM
              enumDescriptions:
              - Not specified.
              - Crypto operations are performed in software.
              - Crypto operations are performed in a Hardware Security Module.
              type: string
            publicKey:
              $ref: '#/schemas/WrappingPublicKey'
              description: |-
                Output only. The public key with which to wrap key material prior to
                import. Only returned if state is
                ACTIVE.
            state:
              description: |-
                Output only. The current state of the ImportJob, indicating if it can
                be used.
              enum:
              - IMPORT_JOB_STATE_UNSPECIFIED
              - PENDING_GENERATION
              - ACTIVE
              - EXPIRED
              enumDescriptions:
              - Not specified.
              - |-
                The wrapping key for this job is still being generated. It may not be
                used. Cloud KMS will automatically mark this job as
                ACTIVE as soon as the wrapping key is generated.
              - |-
                This job may be used in
                CreateCryptoKey and
                CreateCryptoKeyVersion
                requests.
              - This job can no longer be used and may not leave this state once entered.
              type: string
          type: object
        KeyOperationAttestation:
          description: |-
            Contains an HSM-generated attestation about a key operation. For more
            information, see [Verifying attestations]
            (https://cloud.google.com/kms/docs/attest-key).
          id: KeyOperationAttestation
          properties:
            content:
              description: |-
                Output only. The attestation data provided by the HSM when the key
                operation was performed.
              format: byte
              type: string
          type: object
        WrappingPublicKey:
          description: |-
            The public key component of the wrapping key. For details of the type of
            key this public key corresponds to, see the ImportMethod.
          id: WrappingPublicKey
          properties:
            pem:
              description: |-
                The public key, encoded in PEM format. For more information, see the [RFC
                7468](https://tools.ietf.org/html/rfc7468) sections for [General
                Considerations](https://tools.ietf.org/html/rfc7468#section-2) and
                [Textual Encoding of Subject Public Key Info]
                (https://tools.ietf.org/html/rfc7468#section-13).
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/ImportJob'
      methodName: get
      schemas:
        ImportJob:
          description: |-
            An ImportJob can be used to create CryptoKeys and
            CryptoKeyVersions using pre-existing key material,
            generated outside of Cloud KMS.

            When an ImportJob is created, Cloud KMS will generate a "wrapping key",
            which is a public/private key pair. You use the wrapping key to encrypt (also
            known as wrap) the pre-existing key material to protect it during the import
            process. The nature of the wrapping key depends on the choice of
            import_method. When the wrapping key generation
            is complete, the state will be set to
            ACTIVE and the public_key
            can be fetched. The fetched public key can then be used to wrap your
            pre-existing key material.

            Once the key material is wrapped, it can be imported into a new
            CryptoKeyVersion in an existing CryptoKey by calling
            ImportCryptoKeyVersion.
            Multiple CryptoKeyVersions can be imported with a single
            ImportJob. Cloud KMS uses the private key portion of the wrapping key to
            unwrap the key material. Only Cloud KMS has access to the private key.

            An ImportJob expires 3 days after it is created. Once expired, Cloud KMS
            will no longer be able to import or unwrap any key material that was wrapped
            with the ImportJob's public key.

            For more information, see
            [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).
          id: ImportJob
          properties:
            attestation:
              $ref: '#/schemas/KeyOperationAttestation'
              description: |-
                Output only. Statement that was generated and signed by the key creator
                (for example, an HSM) at key creation time. Use this statement to verify
                attributes of the key as stored on the HSM, independently of Google.
                Only present if the chosen ImportMethod is one with a protection
                level of HSM.
            createTime:
              description: Output only. The time at which this ImportJob was created.
              format: google-datetime
              type: string
            expireEventTime:
              description: |-
                Output only. The time this ImportJob expired. Only present if
                state is EXPIRED.
              format: google-datetime
              type: string
            expireTime:
              description: |-
                Output only. The time at which this ImportJob is scheduled for
                expiration and can no longer be used to import key material.
              format: google-datetime
              type: string
            generateTime:
              description: Output only. The time this ImportJob's key material was
                generated.
              format: google-datetime
              type: string
            importMethod:
              description: |-
                Required and immutable. The wrapping method to be used for incoming
                key material.
              enum:
              - IMPORT_METHOD_UNSPECIFIED
              - RSA_OAEP_3072_SHA1_AES_256
              - RSA_OAEP_4096_SHA1_AES_256
              enumDescriptions:
              - Not specified.
              - |-
                This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
                scheme defined in the PKCS #11 standard. In summary, this involves
                wrapping the raw key with an ephemeral AES key, and wrapping the
                ephemeral AES key with a 3072 bit RSA key. For more details, see
                [RSA AES key wrap
                mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
              - |-
                This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
                scheme defined in the PKCS #11 standard. In summary, this involves
                wrapping the raw key with an ephemeral AES key, and wrapping the
                ephemeral AES key with a 4096 bit RSA key. For more details, see
                [RSA AES key wrap
                mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
              type: string
            name:
              description: |-
                Output only. The resource name for this ImportJob in the format
                `projects/*/locations/*/keyRings/*/importJobs/*`.
              type: string
            protectionLevel:
              description: |-
                Required and immutable. The protection level of the ImportJob. This
                must match the
                protection_level of the
                version_template on the CryptoKey you
                attempt to import into.
              enum:
              - PROTECTION_LEVEL_UNSPECIFIED
              - SOFTWARE
              - HSM
              enumDescriptions:
              - Not specified.
              - Crypto operations are performed in software.
              - Crypto operations are performed in a Hardware Security Module.
              type: string
            publicKey:
              $ref: '#/schemas/WrappingPublicKey'
              description: |-
                Output only. The public key with which to wrap key material prior to
                import. Only returned if state is
                ACTIVE.
            state:
              description: |-
                Output only. The current state of the ImportJob, indicating if it can
                be used.
              enum:
              - IMPORT_JOB_STATE_UNSPECIFIED
              - PENDING_GENERATION
              - ACTIVE
              - EXPIRED
              enumDescriptions:
              - Not specified.
              - |-
                The wrapping key for this job is still being generated. It may not be
                used. Cloud KMS will automatically mark this job as
                ACTIVE as soon as the wrapping key is generated.
              - |-
                This job may be used in
                CreateCryptoKey and
                CreateCryptoKeyVersion
                requests.
              - This job can no longer be used and may not leave this state once entered.
              type: string
          type: object
        KeyOperationAttestation:
          description: |-
            Contains an HSM-generated attestation about a key operation. For more
            information, see [Verifying attestations]
            (https://cloud.google.com/kms/docs/attest-key).
          id: KeyOperationAttestation
          properties:
            content:
              description: |-
                Output only. The attestation data provided by the HSM when the key
                operation was performed.
              format: byte
              type: string
            format:
              description: Output only. The format of the attestation data.
              enum:
              - ATTESTATION_FORMAT_UNSPECIFIED
              - CAVIUM_V1_COMPRESSED
              - CAVIUM_V2_COMPRESSED
              enumDescriptions:
              - Not specified.
              - |-
                Cavium HSM attestation compressed with gzip. Note that this format is
                defined by Cavium and subject to change at any time.
              - |-
                Cavium HSM attestation V2 compressed with gzip. This is a new format
                introduced in Cavium's version 3.2-08.
              type: string
          type: object
        WrappingPublicKey:
          description: |-
            The public key component of the wrapping key. For details of the type of
            key this public key corresponds to, see the ImportMethod.
          id: WrappingPublicKey
          properties:
            pem:
              description: |-
                The public key, encoded in PEM format. For more information, see the [RFC
                7468](https://tools.ietf.org/html/rfc7468) sections for [General
                Considerations](https://tools.ietf.org/html/rfc7468#section-2) and
                [Textual Encoding of Subject Public Key Info]
                (https://tools.ietf.org/html/rfc7468#section-13).
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/cloudkms-v1/types/projects.locations.keyRings.importJobs?alt=json
  title: Cloud Key Management Service (KMS) API
