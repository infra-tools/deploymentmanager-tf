type_info:
  documentationLink: https://cloud.google.com/pubsub/docs
  kind: deploymentmanager#typeInfo
  name: projects.subscriptions
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          ackDeadlineSeconds:
            description: |-
              The approximate amount of time (on a best-effort basis) Pub/Sub waits for
              the subscriber to acknowledge receipt before resending the message. In the
              interval after the message is delivered and before it is acknowledged, it
              is considered to be <i>outstanding</i>. During that time period, the
              message will not be redelivered (on a best-effort basis).

              For pull subscriptions, this value is used as the initial value for the ack
              deadline. To override this value for a given message, call
              `ModifyAckDeadline` with the corresponding `ack_id` if using
              non-streaming pull or send the `ack_id` in a
              `StreamingModifyAckDeadlineRequest` if using streaming pull.
              The minimum custom deadline you can specify is 10 seconds.
              The maximum custom deadline you can specify is 600 seconds (10 minutes).
              If this parameter is 0, a default value of 10 seconds is used.

              For push delivery, this value is also used to set the request timeout for
              the call to the push endpoint.

              If the subscriber never acknowledges the message, the Pub/Sub
              system will eventually redeliver the message.
            format: int32
            type: integer
          expirationPolicy:
            $ref: '#/schemas/ExpirationPolicy'
            description: |-
              A policy that specifies the conditions for this subscription's expiration.
              A subscription is considered active as long as any connected subscriber is
              successfully consuming messages from the subscription or is issuing
              operations on the subscription. If `expiration_policy` is not set, a
              *default policy* with `ttl` of 31 days will be used. The minimum allowed
              value for `expiration_policy.ttl` is 1 day.
          labels:
            additionalProperties:
              type: string
            description: |-
              See <a href="https://cloud.google.com/pubsub/docs/labels"> Creating and
              managing labels</a>.
            type: object
          messageRetentionDuration:
            description: |-
              How long to retain unacknowledged messages in the subscription's backlog,
              from the moment a message is published.
              If `retain_acked_messages` is true, then this also configures the retention
              of acknowledged messages, and thus configures how far back in time a `Seek`
              can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10
              minutes.
            format: google-duration
            type: string
          name:
            description: |-
              The name of the subscription. It must have the format
              `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
              start with a letter, and contain only letters (`[A-Za-z]`), numbers
              (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
              plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
              in length, and it must not start with `"goog"`.
            location: path
            pattern: ^projects/[^/]+/subscriptions/[^/]+$
            required: true
            type: string
          pushConfig:
            $ref: '#/schemas/PushConfig'
            description: |-
              If push delivery is used with this subscription, this field is
              used to configure it. An empty `pushConfig` signifies that the subscriber
              will pull and ack messages using API methods.
          retainAckedMessages:
            description: |-
              Indicates whether to retain acknowledged messages. If true, then
              messages are not expunged from the subscription's backlog, even if they are
              acknowledged, until they fall out of the `message_retention_duration`
              window. This must be true if you would like to
              <a
              href="https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time">
              Seek to a timestamp</a>.
            type: boolean
          topic:
            description: |-
              The name of the topic from which this subscription is receiving messages.
              Format is `projects/{project}/topics/{topic}`.
              The value of this field will be `_deleted-topic_` if the topic has been
              deleted.
            type: string
        type: object
      methodName: create
      schemas:
        ExpirationPolicy:
          description: |-
            A policy that specifies the conditions for resource expiration (i.e.,
            automatic resource deletion).
          id: ExpirationPolicy
          properties:
            ttl:
              description: |-
                Specifies the "time-to-live" duration for an associated resource. The
                resource expires if it is not active for a period of `ttl`. The definition
                of "activity" depends on the type of the associated resource. The minimum
                and maximum allowed values for `ttl` depend on the type of the associated
                resource, as well. If `ttl` is not set, the associated resource never
                expires.
              format: google-duration
              type: string
          type: object
        OidcToken:
          description: |-
            Contains information needed for generating an
            [OpenID Connect
            token](https://developers.google.com/identity/protocols/OpenIDConnect).
          id: OidcToken
          properties:
            audience:
              description: |-
                Audience to be used when generating OIDC token. The audience claim
                identifies the recipients that the JWT is intended for. The audience
                value is a single case-sensitive string. Having multiple values (array)
                for the audience field is not supported. More info about the OIDC JWT
                token audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3
                Note: if not specified, the Push endpoint URL will be used.
              type: string
            serviceAccountEmail:
              description: |-
                [Service account
                email](https://cloud.google.com/iam/docs/service-accounts)
                to be used for generating the OIDC token. The caller (for
                CreateSubscription, UpdateSubscription, and ModifyPushConfig RPCs) must
                have the iam.serviceAccounts.actAs permission for the service account.
              type: string
          type: object
        PushConfig:
          description: Configuration for a push delivery endpoint.
          id: PushConfig
          properties:
            attributes:
              additionalProperties:
                type: string
              description: |-
                Endpoint configuration attributes that can be used to control different
                aspects of the message delivery.

                The only currently supported attribute is `x-goog-version`, which you can
                use to change the format of the pushed message. This attribute
                indicates the version of the data expected by the endpoint. This
                controls the shape of the pushed message (i.e., its fields and metadata).

                If not present during the `CreateSubscription` call, it will default to
                the version of the Pub/Sub API used to make such call. If not present in a
                `ModifyPushConfig` call, its value will not be changed. `GetSubscription`
                calls will always return a valid version, even if the subscription was
                created without this attribute.

                The only supported values for the `x-goog-version` attribute are:

                * `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.
                * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.

                For example:
                <pre><code>attributes { "x-goog-version": "v1" } </code></pre>
              type: object
            oidcToken:
              $ref: '#/schemas/OidcToken'
              description: |-
                If specified, Pub/Sub will generate and attach an OIDC JWT token as an
                `Authorization` header in the HTTP request for every pushed message.
            pushEndpoint:
              description: |-
                A URL locating the endpoint to which messages should be pushed.
                For example, a Webhook endpoint might use "https://example.com/push".
              type: string
          type: object
        Subscription:
          description: A subscription resource.
          id: Subscription
          properties:
            ackDeadlineSeconds:
              description: |-
                The approximate amount of time (on a best-effort basis) Pub/Sub waits for
                the subscriber to acknowledge receipt before resending the message. In the
                interval after the message is delivered and before it is acknowledged, it
                is considered to be <i>outstanding</i>. During that time period, the
                message will not be redelivered (on a best-effort basis).

                For pull subscriptions, this value is used as the initial value for the ack
                deadline. To override this value for a given message, call
                `ModifyAckDeadline` with the corresponding `ack_id` if using
                non-streaming pull or send the `ack_id` in a
                `StreamingModifyAckDeadlineRequest` if using streaming pull.
                The minimum custom deadline you can specify is 10 seconds.
                The maximum custom deadline you can specify is 600 seconds (10 minutes).
                If this parameter is 0, a default value of 10 seconds is used.

                For push delivery, this value is also used to set the request timeout for
                the call to the push endpoint.

                If the subscriber never acknowledges the message, the Pub/Sub
                system will eventually redeliver the message.
              format: int32
              type: integer
            expirationPolicy:
              $ref: '#/schemas/ExpirationPolicy'
              description: |-
                A policy that specifies the conditions for this subscription's expiration.
                A subscription is considered active as long as any connected subscriber is
                successfully consuming messages from the subscription or is issuing
                operations on the subscription. If `expiration_policy` is not set, a
                *default policy* with `ttl` of 31 days will be used. The minimum allowed
                value for `expiration_policy.ttl` is 1 day.
            labels:
              additionalProperties:
                type: string
              description: |-
                See <a href="https://cloud.google.com/pubsub/docs/labels"> Creating and
                managing labels</a>.
              type: object
            messageRetentionDuration:
              description: |-
                How long to retain unacknowledged messages in the subscription's backlog,
                from the moment a message is published.
                If `retain_acked_messages` is true, then this also configures the retention
                of acknowledged messages, and thus configures how far back in time a `Seek`
                can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10
                minutes.
              format: google-duration
              type: string
            name:
              description: |-
                The name of the subscription. It must have the format
                `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
                start with a letter, and contain only letters (`[A-Za-z]`), numbers
                (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
                plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
                in length, and it must not start with `"goog"`.
              type: string
            pushConfig:
              $ref: '#/schemas/PushConfig'
              description: |-
                If push delivery is used with this subscription, this field is
                used to configure it. An empty `pushConfig` signifies that the subscriber
                will pull and ack messages using API methods.
            retainAckedMessages:
              description: |-
                Indicates whether to retain acknowledged messages. If true, then
                messages are not expunged from the subscription's backlog, even if they are
                acknowledged, until they fall out of the `message_retention_duration`
                window. This must be true if you would like to
                <a
                href="https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time">
                Seek to a timestamp</a>.
              type: boolean
            topic:
              description: |-
                The name of the topic from which this subscription is receiving messages.
                Format is `projects/{project}/topics/{topic}`.
                The value of this field will be `_deleted-topic_` if the topic has been
                deleted.
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Subscription'
      methodName: get
      schemas:
        ExpirationPolicy:
          description: |-
            A policy that specifies the conditions for resource expiration (i.e.,
            automatic resource deletion).
          id: ExpirationPolicy
          properties:
            ttl:
              description: |-
                Specifies the "time-to-live" duration for an associated resource. The
                resource expires if it is not active for a period of `ttl`. The definition
                of "activity" depends on the type of the associated resource. The minimum
                and maximum allowed values for `ttl` depend on the type of the associated
                resource, as well. If `ttl` is not set, the associated resource never
                expires.
              format: google-duration
              type: string
          type: object
        OidcToken:
          description: |-
            Contains information needed for generating an
            [OpenID Connect
            token](https://developers.google.com/identity/protocols/OpenIDConnect).
          id: OidcToken
          properties:
            audience:
              description: |-
                Audience to be used when generating OIDC token. The audience claim
                identifies the recipients that the JWT is intended for. The audience
                value is a single case-sensitive string. Having multiple values (array)
                for the audience field is not supported. More info about the OIDC JWT
                token audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3
                Note: if not specified, the Push endpoint URL will be used.
              type: string
            serviceAccountEmail:
              description: |-
                [Service account
                email](https://cloud.google.com/iam/docs/service-accounts)
                to be used for generating the OIDC token. The caller (for
                CreateSubscription, UpdateSubscription, and ModifyPushConfig RPCs) must
                have the iam.serviceAccounts.actAs permission for the service account.
              type: string
          type: object
        PushConfig:
          description: Configuration for a push delivery endpoint.
          id: PushConfig
          properties:
            attributes:
              additionalProperties:
                type: string
              description: |-
                Endpoint configuration attributes that can be used to control different
                aspects of the message delivery.

                The only currently supported attribute is `x-goog-version`, which you can
                use to change the format of the pushed message. This attribute
                indicates the version of the data expected by the endpoint. This
                controls the shape of the pushed message (i.e., its fields and metadata).

                If not present during the `CreateSubscription` call, it will default to
                the version of the Pub/Sub API used to make such call. If not present in a
                `ModifyPushConfig` call, its value will not be changed. `GetSubscription`
                calls will always return a valid version, even if the subscription was
                created without this attribute.

                The only supported values for the `x-goog-version` attribute are:

                * `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.
                * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.

                For example:
                <pre><code>attributes { "x-goog-version": "v1" } </code></pre>
              type: object
            oidcToken:
              $ref: '#/schemas/OidcToken'
              description: |-
                If specified, Pub/Sub will generate and attach an OIDC JWT token as an
                `Authorization` header in the HTTP request for every pushed message.
            pushEndpoint:
              description: |-
                A URL locating the endpoint to which messages should be pushed.
                For example, a Webhook endpoint might use "https://example.com/push".
              type: string
          type: object
        Subscription:
          description: A subscription resource.
          id: Subscription
          properties:
            ackDeadlineSeconds:
              description: |-
                The approximate amount of time (on a best-effort basis) Pub/Sub waits for
                the subscriber to acknowledge receipt before resending the message. In the
                interval after the message is delivered and before it is acknowledged, it
                is considered to be <i>outstanding</i>. During that time period, the
                message will not be redelivered (on a best-effort basis).

                For pull subscriptions, this value is used as the initial value for the ack
                deadline. To override this value for a given message, call
                `ModifyAckDeadline` with the corresponding `ack_id` if using
                non-streaming pull or send the `ack_id` in a
                `StreamingModifyAckDeadlineRequest` if using streaming pull.
                The minimum custom deadline you can specify is 10 seconds.
                The maximum custom deadline you can specify is 600 seconds (10 minutes).
                If this parameter is 0, a default value of 10 seconds is used.

                For push delivery, this value is also used to set the request timeout for
                the call to the push endpoint.

                If the subscriber never acknowledges the message, the Pub/Sub
                system will eventually redeliver the message.
              format: int32
              type: integer
            expirationPolicy:
              $ref: '#/schemas/ExpirationPolicy'
              description: |-
                A policy that specifies the conditions for this subscription's expiration.
                A subscription is considered active as long as any connected subscriber is
                successfully consuming messages from the subscription or is issuing
                operations on the subscription. If `expiration_policy` is not set, a
                *default policy* with `ttl` of 31 days will be used. The minimum allowed
                value for `expiration_policy.ttl` is 1 day.
            labels:
              additionalProperties:
                type: string
              description: |-
                See <a href="https://cloud.google.com/pubsub/docs/labels"> Creating and
                managing labels</a>.
              type: object
            messageRetentionDuration:
              description: |-
                How long to retain unacknowledged messages in the subscription's backlog,
                from the moment a message is published.
                If `retain_acked_messages` is true, then this also configures the retention
                of acknowledged messages, and thus configures how far back in time a `Seek`
                can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10
                minutes.
              format: google-duration
              type: string
            name:
              description: |-
                The name of the subscription. It must have the format
                `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
                start with a letter, and contain only letters (`[A-Za-z]`), numbers
                (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
                plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
                in length, and it must not start with `"goog"`.
              type: string
            pushConfig:
              $ref: '#/schemas/PushConfig'
              description: |-
                If push delivery is used with this subscription, this field is
                used to configure it. An empty `pushConfig` signifies that the subscriber
                will pull and ack messages using API methods.
            retainAckedMessages:
              description: |-
                Indicates whether to retain acknowledged messages. If true, then
                messages are not expunged from the subscription's backlog, even if they are
                acknowledged, until they fall out of the `message_retention_duration`
                window. This must be true if you would like to
                <a
                href="https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time">
                Seek to a timestamp</a>.
              type: boolean
            topic:
              description: |-
                The name of the topic from which this subscription is receiving messages.
                Format is `projects/{project}/topics/{topic}`.
                The value of this field will be `_deleted-topic_` if the topic has been
                deleted.
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/pubsub-v1/types/projects.subscriptions?alt=json
  title: Cloud Pub/Sub API
