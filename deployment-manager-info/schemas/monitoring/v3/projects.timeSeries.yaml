type_info:
  documentationLink: https://cloud.google.com/monitoring/api/
  kind: deploymentmanager#typeInfo
  name: projects.timeSeries
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          name:
            description: The project on which to execute the request. The format is
              "projects/{project_id_or_number}".
            location: path
            pattern: ^projects/[^/]+$
            required: true
            type: string
          timeSeries:
            description: The new data to be added to a list of time series. Adds at
              most one data point to each of several time series. The new data point
              must be more recent than any other point in its time series. Each TimeSeries
              value must fully specify a unique time series by supplying all label
              values for the metric and the monitored resource.The maximum number
              of TimeSeries objects per Create request is 200.
            items:
              $ref: '#/schemas/TimeSeries'
            type: array
        type: object
      methodName: create
      schemas:
        BucketOptions:
          description: 'BucketOptions describes the bucket boundaries used to create
            a histogram for the distribution. The buckets can be in a linear sequence,
            an exponential sequence, or each bucket can be specified explicitly. BucketOptions
            does not include the number of values in each bucket.A bucket has an inclusive
            lower bound and exclusive upper bound for the values that are counted
            for that bucket. The upper bound of a bucket must be strictly greater
            than the lower bound. The sequence of N buckets for a distribution consists
            of an underflow bucket (number 0), zero or more finite buckets (number
            1 through N - 2) and an overflow bucket (number N - 1). The buckets are
            contiguous: the lower bound of bucket i (i > 0) is the same as the upper
            bound of bucket i - 1. The buckets span the whole range of finite values:
            lower bound of the underflow bucket is -infinity and the upper bound of
            the overflow bucket is +infinity. The finite buckets are so-called because
            both bounds are finite.'
          id: BucketOptions
          properties:
            explicitBuckets:
              $ref: '#/schemas/Explicit'
              description: The explicit buckets.
            exponentialBuckets:
              $ref: '#/schemas/Exponential'
              description: The exponential buckets.
            linearBuckets:
              $ref: '#/schemas/Linear'
              description: The linear bucket.
          type: object
        CreateTimeSeriesRequest:
          description: The CreateTimeSeries request.
          id: CreateTimeSeriesRequest
          properties:
            timeSeries:
              description: The new data to be added to a list of time series. Adds
                at most one data point to each of several time series. The new data
                point must be more recent than any other point in its time series.
                Each TimeSeries value must fully specify a unique time series by supplying
                all label values for the metric and the monitored resource.The maximum
                number of TimeSeries objects per Create request is 200.
              items:
                $ref: '#/schemas/TimeSeries'
              type: array
          type: object
        Distribution:
          description: Distribution contains summary statistics for a population of
            values. It optionally contains a histogram representing the distribution
            of those values across a set of buckets.The summary statistics are the
            count, mean, sum of the squared deviation from the mean, the minimum,
            and the maximum of the set of population of values. The histogram is based
            on a sequence of buckets and gives a count of values that fall into each
            bucket. The boundaries of the buckets are given either explicitly or by
            formulas for buckets of fixed or exponentially increasing widths.Although
            it is not forbidden, it is generally a bad idea to include non-finite
            values (infinities or NaNs) in the population of values, as this will
            render the mean and sum_of_squared_deviation fields meaningless.
          id: Distribution
          properties:
            bucketCounts:
              description: Required in the Stackdriver Monitoring API v3. The values
                for each bucket specified in bucket_options. The sum of the values
                in bucketCounts must equal the value in the count field of the Distribution
                object. The order of the bucket counts follows the numbering schemes
                described for the three bucket types. The underflow bucket has number
                0; the finite buckets, if any, have numbers 1 through N-2; and the
                overflow bucket has number N-1. The size of bucket_counts must not
                be greater than N. If the size is less than N, then the remaining
                buckets are assigned values of zero.
              items:
                format: int64
                type: string
              type: array
            bucketOptions:
              $ref: '#/schemas/BucketOptions'
              description: Required in the Stackdriver Monitoring API v3. Defines
                the histogram bucket boundaries.
            count:
              description: The number of values in the population. Must be non-negative.
                This value must equal the sum of the values in bucket_counts if a
                histogram is provided.
              format: int64
              type: string
            exemplars:
              description: Must be in increasing order of value field.
              items:
                $ref: '#/schemas/Exemplar'
              type: array
            mean:
              description: The arithmetic mean of the values in the population. If
                count is zero then this field must be zero.
              format: double
              type: number
            range:
              $ref: '#/schemas/Range'
              description: If specified, contains the range of the population values.
                The field must not be present if the count is zero. This field is
                presently ignored by the Stackdriver Monitoring API v3.
            sumOfSquaredDeviation:
              description: |-
                The sum of squared deviations from the mean of the values in the population. For values x_i this is:
                Sum[i=1..n]((x_i - mean)^2)
                Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition describes Welford's method for accumulating this sum in one pass.If count is zero then this field must be zero.
              format: double
              type: number
          type: object
        Exemplar:
          description: Exemplars are example points that may be used to annotate aggregated
            distribution values. They are metadata that gives information about a
            particular value added to a Distribution bucket, such as a trace ID that
            was active when a value was added. They may contain further information,
            such as a example values and timestamps, origin, etc.
          id: Exemplar
          properties:
            attachments:
              description: 'Contextual information about the example value. Examples
                are:Trace: type.googleapis.com/google.monitoring.v3.SpanContextLiteral
                string: type.googleapis.com/google.protobuf.StringValueLabels dropped
                during aggregation:  type.googleapis.com/google.monitoring.v3.DroppedLabelsThere
                may be only a single attachment of any given message type in a single
                exemplar, and this is enforced by the system.'
              items:
                additionalProperties:
                  description: Properties of the object. Contains field @type with
                    type URL.
                  type: any
                type: object
              type: array
            timestamp:
              description: The observation (sampling) time of the above value.
              format: google-datetime
              type: string
            value:
              description: Value of the exemplar point. This value determines to which
                bucket the exemplar belongs.
              format: double
              type: number
          type: object
        Explicit:
          description: 'Specifies a set of buckets with arbitrary widths.There are
            size(bounds) + 1 (= N) buckets. Bucket i has the following boundaries:Upper
            bound (0 <= i < N-1): boundsi  Lower bound (1 <= i < N); boundsi - 1The
            bounds field must contain at least one element. If bounds has only one
            element, then there are no finite buckets, and that single element is
            the common boundary of the overflow and underflow buckets.'
          id: Explicit
          properties:
            bounds:
              description: The values must be monotonically increasing.
              items:
                format: double
                type: number
              type: array
          type: object
        Exponential:
          description: 'Specifies an exponential sequence of buckets that have a width
            that is proportional to the value of the lower bound. Each bucket represents
            a constant relative uncertainty on a specific value in the bucket.There
            are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper
            bound (0 <= i < N-1): scale * (growth_factor ^ i).  Lower bound (1 <=
            i < N): scale * (growth_factor ^ (i - 1)).'
          id: Exponential
          properties:
            growthFactor:
              description: Must be greater than 1.
              format: double
              type: number
            numFiniteBuckets:
              description: Must be greater than 0.
              format: int32
              type: integer
            scale:
              description: Must be greater than 0.
              format: double
              type: number
          type: object
        Linear:
          description: 'Specifies a linear sequence of buckets that all have the same
            width (except overflow and underflow). Each bucket represents a constant
            absolute uncertainty on the specific value in the bucket.There are num_finite_buckets
            + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0
            <= i < N-1): offset + (width * i).  Lower bound (1 <= i < N): offset +
            (width * (i - 1)).'
          id: Linear
          properties:
            numFiniteBuckets:
              description: Must be greater than 0.
              format: int32
              type: integer
            offset:
              description: Lower bound of the first bucket.
              format: double
              type: number
            width:
              description: Must be greater than 0.
              format: double
              type: number
          type: object
        Metric:
          description: A specific metric, identified by specifying values for all
            of the labels of a MetricDescriptor.
          id: Metric
          properties:
            labels:
              additionalProperties:
                type: string
              description: The set of label values that uniquely identify this metric.
                All labels listed in the MetricDescriptor must be assigned values.
              type: object
            type:
              description: An existing metric type, see google.api.MetricDescriptor.
                For example, custom.googleapis.com/invoice/paid/amount.
              type: string
          type: object
        MonitoredResource:
          description: |
            An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for "gce_instance" has labels "instance_id" and "zone":
            { "type": "gce_instance",
              "labels": { "instance_id": "12345678901234",
                          "zone": "us-central1-a" }}
          id: MonitoredResource
          properties:
            labels:
              additionalProperties:
                type: string
              description: Required. Values for all of the labels listed in the associated
                monitored resource descriptor. For example, Compute Engine VM instances
                use the labels "project_id", "instance_id", and "zone".
              type: object
            type:
              description: Required. The monitored resource type. This field must
                match the type field of a MonitoredResourceDescriptor object. For
                example, the type of a Compute Engine VM instance is gce_instance.
                For a list of types, see Monitoring resource types and Logging resource
                types.
              type: string
          type: object
        MonitoredResourceMetadata:
          description: Auxiliary metadata for a MonitoredResource object. MonitoredResource
            objects contain the minimum set of information to uniquely identify a
            monitored resource instance. There is some other useful auxiliary metadata.
            Monitoring and Logging use an ingestion pipeline to extract metadata for
            cloud resources of all types, and store the metadata in this message.
          id: MonitoredResourceMetadata
          properties:
            systemLabels:
              additionalProperties:
                description: Properties of the object.
                type: any
              description: |
                Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by Google, including "machine_image", "vpc", "subnet_id", "security_group", "name", etc. System label values can be only strings, Boolean values, or a list of strings. For example:
                { "name": "my-test-instance",
                  "security_group": ["a", "b", "c"],
                  "spot_instance": false }
              type: object
          type: object
        Point:
          description: A single data point in a time series.
          id: Point
          properties:
            interval:
              $ref: '#/schemas/TimeInterval'
              description: The time interval to which the data point applies. For
                GAUGE metrics, only the end time of the interval is used. For DELTA
                metrics, the start and end time should specify a non-zero interval,
                with subsequent points specifying contiguous and non-overlapping intervals.
                For CUMULATIVE metrics, the start and end time should specify a non-zero
                interval, with subsequent points specifying the same start time and
                increasing end times, until an event resets the cumulative value to
                zero and sets a new start time for the following points.
            value:
              $ref: '#/schemas/TypedValue'
              description: The value of the data point.
          type: object
        Range:
          description: The range of the population values.
          id: Range
          properties:
            max:
              description: The maximum of the population values.
              format: double
              type: number
            min:
              description: The minimum of the population values.
              format: double
              type: number
          type: object
        TimeInterval:
          description: |-
            A closed time interval. It extends from the start time to the end time, and includes both: [startTime, endTime]. Valid time intervals depend on the MetricKind of the metric value. In no case can the end time be earlier than the start time.
            For a GAUGE metric, the startTime value is technically optional; if  no value is specified, the start time defaults to the value of the  end time, and the interval represents a single point in time. Such an  interval is valid only for GAUGE metrics, which are point-in-time  measurements.
            For DELTA and CUMULATIVE metrics, the start time must be later than  the end time.
            In all cases, the start time of the next interval must be  at least a microsecond after the end time of the previous interval.  Because the interval is closed, if the start time of a new interval  is the same as the end time of the previous interval, data written  at the new start time could overwrite data written at the previous  end time.
          id: TimeInterval
          properties:
            endTime:
              description: Required. The end of the time interval.
              format: google-datetime
              type: string
            startTime:
              description: Optional. The beginning of the time interval. The default
                value for the start time is the end time. The start time must not
                be later than the end time.
              format: google-datetime
              type: string
          type: object
        TimeSeries:
          description: A collection of data points that describes the time-varying
            values of a metric. A time series is identified by a combination of a
            fully-specified monitored resource and a fully-specified metric. This
            type is used for both listing and creating time series.
          id: TimeSeries
          properties:
            metric:
              $ref: '#/schemas/Metric'
              description: The associated metric. A fully-specified metric used to
                identify the time series.
            metricKind:
              description: The metric kind of the time series. When listing time series,
                this metric kind might be different from the metric kind of the associated
                metric if this time series is an alignment or reduction of other time
                series.When creating a time series, this field is optional. If present,
                it must be the same as the metric kind of the associated metric. If
                the associated metric's descriptor must be auto-created, then this
                field specifies the metric kind of the new descriptor and must be
                either GAUGE (the default) or CUMULATIVE.
              enum:
              - METRIC_KIND_UNSPECIFIED
              - GAUGE
              - DELTA
              - CUMULATIVE
              enumDescriptions:
              - Do not use this default value.
              - An instantaneous measurement of a value.
              - The change in a value during a time interval.
              - A value accumulated over a time interval. Cumulative measurements
                in a time series should have the same start time and increasing end
                times, until an event resets the cumulative value to zero and sets
                a new start time for the following points.
              type: string
            points:
              description: The data points of this time series. When listing time
                series, points are returned in reverse time order.When creating a
                time series, this field must contain exactly one point and the point's
                type must be the same as the value type of the associated metric.
                If the associated metric's descriptor must be auto-created, then the
                value type of the descriptor is determined by the point's type, which
                must be BOOL, INT64, DOUBLE, or DISTRIBUTION.
              items:
                $ref: '#/schemas/Point'
              type: array
            resource:
              $ref: '#/schemas/MonitoredResource'
              description: The associated monitored resource. Custom metrics can use
                only certain monitored resource types in their time series data.
            valueType:
              description: The value type of the time series. When listing time series,
                this value type might be different from the value type of the associated
                metric if this time series is an alignment or reduction of other time
                series.When creating a time series, this field is optional. If present,
                it must be the same as the type of the data in the points field.
              enum:
              - VALUE_TYPE_UNSPECIFIED
              - BOOL
              - INT64
              - DOUBLE
              - STRING
              - DISTRIBUTION
              - MONEY
              enumDescriptions:
              - Do not use this default value.
              - The value is a boolean. This value type can be used only if the metric
                kind is GAUGE.
              - The value is a signed 64-bit integer.
              - The value is a double precision floating point number.
              - The value is a text string. This value type can be used only if the
                metric kind is GAUGE.
              - The value is a Distribution.
              - The value is money.
              type: string
          type: object
        TypedValue:
          description: A single strongly-typed value.
          id: TypedValue
          properties:
            boolValue:
              description: 'A Boolean value: true or false.'
              type: boolean
            distributionValue:
              $ref: '#/schemas/Distribution'
              description: A distribution value.
            doubleValue:
              description: A 64-bit double-precision floating-point number. Its magnitude
                is approximately &plusmn;10<sup>&plusmn;300</sup> and it has 16 significant
                digits of precision.
              format: double
              type: number
            int64Value:
              description: A 64-bit integer. Its range is approximately &plusmn;9.2x10<sup>18</sup>.
              format: int64
              type: string
            stringValue:
              description: A variable-length string value.
              type: string
          type: object
    output: '{}'
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/monitoring-v3/types/projects.timeSeries?alt=json
  title: Stackdriver Monitoring API
