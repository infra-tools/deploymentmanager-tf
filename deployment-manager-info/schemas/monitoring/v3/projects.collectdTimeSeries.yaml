type_info:
  documentationLink: https://cloud.google.com/monitoring/api/
  kind: deploymentmanager#typeInfo
  name: projects.collectdTimeSeries
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          collectdPayloads:
            description: The collectd payloads representing the time series data.
              You must not include more than a single point for each time series,
              so no two payloads can have the same values for all of the fields plugin,
              plugin_instance, type, and type_instance.
            items:
              $ref: '#/schemas/CollectdPayload'
            type: array
          collectdVersion:
            description: 'The version of collectd that collected the data. Example:
              "5.3.0-192.el6".'
            type: string
          name:
            description: The project in which to create the time series. The format
              is "projects/PROJECT_ID_OR_NUMBER".
            location: path
            pattern: ^projects/[^/]+$
            required: true
            type: string
          resource:
            $ref: '#/schemas/MonitoredResource'
            description: The monitored resource associated with the time series.
        type: object
      methodName: create
      schemas:
        BucketOptions:
          description: 'BucketOptions describes the bucket boundaries used to create
            a histogram for the distribution. The buckets can be in a linear sequence,
            an exponential sequence, or each bucket can be specified explicitly. BucketOptions
            does not include the number of values in each bucket.A bucket has an inclusive
            lower bound and exclusive upper bound for the values that are counted
            for that bucket. The upper bound of a bucket must be strictly greater
            than the lower bound. The sequence of N buckets for a distribution consists
            of an underflow bucket (number 0), zero or more finite buckets (number
            1 through N - 2) and an overflow bucket (number N - 1). The buckets are
            contiguous: the lower bound of bucket i (i > 0) is the same as the upper
            bound of bucket i - 1. The buckets span the whole range of finite values:
            lower bound of the underflow bucket is -infinity and the upper bound of
            the overflow bucket is +infinity. The finite buckets are so-called because
            both bounds are finite.'
          id: BucketOptions
          properties:
            explicitBuckets:
              $ref: '#/schemas/Explicit'
              description: The explicit buckets.
            exponentialBuckets:
              $ref: '#/schemas/Exponential'
              description: The exponential buckets.
            linearBuckets:
              $ref: '#/schemas/Linear'
              description: The linear bucket.
          type: object
        CollectdPayload:
          description: A collection of data points sent from a collectd-based plugin.
            See the collectd documentation for more information.
          id: CollectdPayload
          properties:
            endTime:
              description: The end time of the interval.
              format: google-datetime
              type: string
            metadata:
              additionalProperties:
                $ref: '#/schemas/TypedValue'
              description: 'The measurement metadata. Example: "process_id" -> 12345'
              type: object
            plugin:
              description: 'The name of the plugin. Example: "disk".'
              type: string
            pluginInstance:
              description: 'The instance name of the plugin Example: "hdcl".'
              type: string
            startTime:
              description: The start time of the interval.
              format: google-datetime
              type: string
            type:
              description: 'The measurement type. Example: "memory".'
              type: string
            typeInstance:
              description: 'The measurement type instance. Example: "used".'
              type: string
            values:
              description: The measured values during this time interval. Each value
                must have a different dataSourceName.
              items:
                $ref: '#/schemas/CollectdValue'
              type: array
          type: object
        CollectdValue:
          description: A single data point from a collectd-based plugin.
          id: CollectdValue
          properties:
            dataSourceName:
              description: 'The data source for the collectd value. For example there
                are two data sources for network measurements: "rx" and "tx".'
              type: string
            dataSourceType:
              description: The type of measurement.
              enum:
              - UNSPECIFIED_DATA_SOURCE_TYPE
              - GAUGE
              - COUNTER
              - DERIVE
              - ABSOLUTE
              enumDescriptions:
              - An unspecified data source type. This corresponds to google.api.MetricDescriptor.MetricKind.METRIC_KIND_UNSPECIFIED.
              - An instantaneous measurement of a varying quantity. This corresponds
                to google.api.MetricDescriptor.MetricKind.GAUGE.
              - A cumulative value over time. This corresponds to google.api.MetricDescriptor.MetricKind.CUMULATIVE.
              - A rate of change of the measurement.
              - An amount of change since the last measurement interval. This corresponds
                to google.api.MetricDescriptor.MetricKind.DELTA.
              type: string
            value:
              $ref: '#/schemas/TypedValue'
              description: The measurement value.
          type: object
        CreateCollectdTimeSeriesRequest:
          description: The CreateCollectdTimeSeries request.
          id: CreateCollectdTimeSeriesRequest
          properties:
            collectdPayloads:
              description: The collectd payloads representing the time series data.
                You must not include more than a single point for each time series,
                so no two payloads can have the same values for all of the fields
                plugin, plugin_instance, type, and type_instance.
              items:
                $ref: '#/schemas/CollectdPayload'
              type: array
            collectdVersion:
              description: 'The version of collectd that collected the data. Example:
                "5.3.0-192.el6".'
              type: string
            resource:
              $ref: '#/schemas/MonitoredResource'
              description: The monitored resource associated with the time series.
          type: object
        Distribution:
          description: Distribution contains summary statistics for a population of
            values. It optionally contains a histogram representing the distribution
            of those values across a set of buckets.The summary statistics are the
            count, mean, sum of the squared deviation from the mean, the minimum,
            and the maximum of the set of population of values. The histogram is based
            on a sequence of buckets and gives a count of values that fall into each
            bucket. The boundaries of the buckets are given either explicitly or by
            formulas for buckets of fixed or exponentially increasing widths.Although
            it is not forbidden, it is generally a bad idea to include non-finite
            values (infinities or NaNs) in the population of values, as this will
            render the mean and sum_of_squared_deviation fields meaningless.
          id: Distribution
          properties:
            bucketCounts:
              description: Required in the Stackdriver Monitoring API v3. The values
                for each bucket specified in bucket_options. The sum of the values
                in bucketCounts must equal the value in the count field of the Distribution
                object. The order of the bucket counts follows the numbering schemes
                described for the three bucket types. The underflow bucket has number
                0; the finite buckets, if any, have numbers 1 through N-2; and the
                overflow bucket has number N-1. The size of bucket_counts must not
                be greater than N. If the size is less than N, then the remaining
                buckets are assigned values of zero.
              items:
                format: int64
                type: string
              type: array
            bucketOptions:
              $ref: '#/schemas/BucketOptions'
              description: Required in the Stackdriver Monitoring API v3. Defines
                the histogram bucket boundaries.
            count:
              description: The number of values in the population. Must be non-negative.
                This value must equal the sum of the values in bucket_counts if a
                histogram is provided.
              format: int64
              type: string
            exemplars:
              description: Must be in increasing order of value field.
              items:
                $ref: '#/schemas/Exemplar'
              type: array
            mean:
              description: The arithmetic mean of the values in the population. If
                count is zero then this field must be zero.
              format: double
              type: number
            range:
              $ref: '#/schemas/Range'
              description: If specified, contains the range of the population values.
                The field must not be present if the count is zero. This field is
                presently ignored by the Stackdriver Monitoring API v3.
            sumOfSquaredDeviation:
              description: |-
                The sum of squared deviations from the mean of the values in the population. For values x_i this is:
                Sum[i=1..n]((x_i - mean)^2)
                Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition describes Welford's method for accumulating this sum in one pass.If count is zero then this field must be zero.
              format: double
              type: number
          type: object
        Exemplar:
          description: Exemplars are example points that may be used to annotate aggregated
            distribution values. They are metadata that gives information about a
            particular value added to a Distribution bucket, such as a trace ID that
            was active when a value was added. They may contain further information,
            such as a example values and timestamps, origin, etc.
          id: Exemplar
          properties:
            attachments:
              description: 'Contextual information about the example value. Examples
                are:Trace: type.googleapis.com/google.monitoring.v3.SpanContextLiteral
                string: type.googleapis.com/google.protobuf.StringValueLabels dropped
                during aggregation:  type.googleapis.com/google.monitoring.v3.DroppedLabelsThere
                may be only a single attachment of any given message type in a single
                exemplar, and this is enforced by the system.'
              items:
                additionalProperties:
                  description: Properties of the object. Contains field @type with
                    type URL.
                  type: any
                type: object
              type: array
            timestamp:
              description: The observation (sampling) time of the above value.
              format: google-datetime
              type: string
            value:
              description: Value of the exemplar point. This value determines to which
                bucket the exemplar belongs.
              format: double
              type: number
          type: object
        Explicit:
          description: 'Specifies a set of buckets with arbitrary widths.There are
            size(bounds) + 1 (= N) buckets. Bucket i has the following boundaries:Upper
            bound (0 <= i < N-1): boundsi  Lower bound (1 <= i < N); boundsi - 1The
            bounds field must contain at least one element. If bounds has only one
            element, then there are no finite buckets, and that single element is
            the common boundary of the overflow and underflow buckets.'
          id: Explicit
          properties:
            bounds:
              description: The values must be monotonically increasing.
              items:
                format: double
                type: number
              type: array
          type: object
        Exponential:
          description: 'Specifies an exponential sequence of buckets that have a width
            that is proportional to the value of the lower bound. Each bucket represents
            a constant relative uncertainty on a specific value in the bucket.There
            are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper
            bound (0 <= i < N-1): scale * (growth_factor ^ i).  Lower bound (1 <=
            i < N): scale * (growth_factor ^ (i - 1)).'
          id: Exponential
          properties:
            growthFactor:
              description: Must be greater than 1.
              format: double
              type: number
            numFiniteBuckets:
              description: Must be greater than 0.
              format: int32
              type: integer
            scale:
              description: Must be greater than 0.
              format: double
              type: number
          type: object
        Linear:
          description: 'Specifies a linear sequence of buckets that all have the same
            width (except overflow and underflow). Each bucket represents a constant
            absolute uncertainty on the specific value in the bucket.There are num_finite_buckets
            + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0
            <= i < N-1): offset + (width * i).  Lower bound (1 <= i < N): offset +
            (width * (i - 1)).'
          id: Linear
          properties:
            numFiniteBuckets:
              description: Must be greater than 0.
              format: int32
              type: integer
            offset:
              description: Lower bound of the first bucket.
              format: double
              type: number
            width:
              description: Must be greater than 0.
              format: double
              type: number
          type: object
        MonitoredResource:
          description: |
            An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for "gce_instance" has labels "instance_id" and "zone":
            { "type": "gce_instance",
              "labels": { "instance_id": "12345678901234",
                          "zone": "us-central1-a" }}
          id: MonitoredResource
          properties:
            labels:
              additionalProperties:
                type: string
              description: Required. Values for all of the labels listed in the associated
                monitored resource descriptor. For example, Compute Engine VM instances
                use the labels "project_id", "instance_id", and "zone".
              type: object
            type:
              description: Required. The monitored resource type. This field must
                match the type field of a MonitoredResourceDescriptor object. For
                example, the type of a Compute Engine VM instance is gce_instance.
                For a list of types, see Monitoring resource types and Logging resource
                types.
              type: string
          type: object
        Range:
          description: The range of the population values.
          id: Range
          properties:
            max:
              description: The maximum of the population values.
              format: double
              type: number
            min:
              description: The minimum of the population values.
              format: double
              type: number
          type: object
        TypedValue:
          description: A single strongly-typed value.
          id: TypedValue
          properties:
            boolValue:
              description: 'A Boolean value: true or false.'
              type: boolean
            distributionValue:
              $ref: '#/schemas/Distribution'
              description: A distribution value.
            doubleValue:
              description: A 64-bit double-precision floating-point number. Its magnitude
                is approximately &plusmn;10<sup>&plusmn;300</sup> and it has 16 significant
                digits of precision.
              format: double
              type: number
            int64Value:
              description: A 64-bit integer. Its range is approximately &plusmn;9.2x10<sup>18</sup>.
              format: int64
              type: string
            stringValue:
              description: A variable-length string value.
              type: string
          type: object
    output: '{}'
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/monitoring-v3/types/projects.collectdTimeSeries?alt=json
  title: Stackdriver Monitoring API
