type_info:
  documentationLink: https://cloud.google.com/deployment-manager/
  kind: deploymentmanager#typeInfo
  name: deployments
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        properties:
          createPolicy:
            default: CREATE_OR_ACQUIRE
            description: Sets the policy to use for creating new resources.
            enum:
            - ACQUIRE
            - CREATE
            - CREATE_OR_ACQUIRE
            enumDescriptions:
            - ''
            - ''
            - ''
            location: query
            type: string
          credential:
            $ref: '#/schemas/Credential'
            description: User provided default credential for the deployment.
          description:
            description: An optional user-provided description of the deployment.
            type: string
          fingerprint:
            description: |-
              Provides a fingerprint to use in requests to modify a deployment, such as update(), stop(), and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update(), stop(), and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time.

              The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment.
            format: byte
            type: string
          id:
            format: uint64
            type: string
          labels:
            description: 'Map of labels; provided by the client when the resource
              is created or updated. Specifically: Label keys must be between 1 and
              63 characters long and must conform to the following regular expression:
              [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between 0 and 63 characters
              long and must conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?'
            items:
              $ref: '#/schemas/DeploymentLabelEntry'
            type: array
          name:
            description: Name of the resource; provided by the client when the resource
              is created. The name must be 1-63 characters long, and comply with RFC1035.
              Specifically, the name must be 1-63 characters long and match the regular
              expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character
              must be a lowercase letter, and all following characters must be a dash,
              lowercase letter, or digit, except the last character, which cannot
              be a dash.
            type: string
          preview:
            description: If set to true, creates a deployment and creates "shell"
              resources but does not actually instantiate these resources. This allows
              you to preview what your deployment looks like. After previewing a deployment,
              you can deploy your resources by making a request with the update()
              method or you can use the cancelPreview() method to cancel the preview
              altogether. Note that the deployment will still exist after you cancel
              the preview and you must separately delete this deployment if you want
              to remove it.
            location: query
            type: boolean
          target:
            $ref: '#/schemas/TargetConfiguration'
            description: '[Input Only] The parameters that define your deployment,
              including the deployment configuration and relevant templates.'
        type: object
      methodName: insert
      schemas:
        BasicAuth:
          description: Basic Auth used as a credential.
          id: BasicAuth
          properties:
            password:
              type: string
            user:
              type: string
          type: object
        ConfigFile:
          description: ''
          id: ConfigFile
          properties:
            content:
              description: The contents of the file.
              type: string
          type: object
        Credential:
          description: The credential used by Deployment Manager and TypeProvider.
            Only one of the options is permitted.
          id: Credential
          properties:
            basicAuth:
              $ref: '#/schemas/BasicAuth'
              description: Basic Auth Credential, only used by TypeProvider.
            serviceAccount:
              $ref: '#/schemas/ServiceAccount'
              description: Service Account Credential, only used by Deployment.
            useProjectDefault:
              description: Specify to use the project default credential, only supported
                by Deployment.
              type: boolean
          type: object
        Deployment:
          description: ''
          id: Deployment
          properties:
            credential:
              $ref: '#/schemas/Credential'
              description: User provided default credential for the deployment.
            description:
              description: An optional user-provided description of the deployment.
              type: string
            fingerprint:
              description: |-
                Provides a fingerprint to use in requests to modify a deployment, such as update(), stop(), and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update(), stop(), and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time.

                The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment.
              format: byte
              type: string
            id:
              format: uint64
              type: string
            labels:
              description: 'Map of labels; provided by the client when the resource
                is created or updated. Specifically: Label keys must be between 1
                and 63 characters long and must conform to the following regular expression:
                [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between 0 and 63 characters
                long and must conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?'
              items:
                $ref: '#/schemas/DeploymentLabelEntry'
              type: array
            name:
              description: Name of the resource; provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              type: string
            target:
              $ref: '#/schemas/TargetConfiguration'
              description: '[Input Only] The parameters that define your deployment,
                including the deployment configuration and relevant templates.'
          type: object
        DeploymentLabelEntry:
          id: DeploymentLabelEntry
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        DeploymentOutputsEntry:
          id: DeploymentOutputsEntry
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        DeploymentUpdate:
          description: ''
          id: DeploymentUpdate
          properties: {}
          type: object
        DeploymentUpdateLabelEntry:
          id: DeploymentUpdateLabelEntry
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        ImportFile:
          description: ''
          id: ImportFile
          properties:
            content:
              description: The contents of the file.
              type: string
            name:
              description: The name of the file.
              type: string
          type: object
        Operation:
          description: An Operation resource, used to manage asynchronous API requests.
            (== resource_for v1.globalOperations ==) (== resource_for beta.globalOperations
            ==) (== resource_for v1.regionOperations ==) (== resource_for beta.regionOperations
            ==) (== resource_for v1.zoneOperations ==) (== resource_for beta.zoneOperations
            ==)
          id: Operation
          properties:
            creationTimestamp:
              description: '[Deprecated] This field is deprecated.'
              type: string
          type: object
        ServiceAccount:
          description: Service Account used as a credential.
          id: ServiceAccount
          properties:
            email:
              description: The IAM service account email address like test@myproject.iam.gserviceaccount.com
              type: string
          type: object
        TargetConfiguration:
          description: ''
          id: TargetConfiguration
          properties:
            config:
              $ref: '#/schemas/ConfigFile'
              description: The configuration to use for this deployment.
            imports:
              description: Specifies any files to import for this configuration. This
                can be used to import templates or other files. For example, you might
                import a text file in order to use the file in a template.
              items:
                $ref: '#/schemas/ImportFile'
              type: array
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Deployment'
      methodName: get
      schemas:
        BasicAuth:
          description: Basic Auth used as a credential.
          id: BasicAuth
          properties:
            password:
              type: string
            user:
              type: string
          type: object
        ConfigFile:
          description: ''
          id: ConfigFile
          properties:
            content:
              description: The contents of the file.
              type: string
          type: object
        Credential:
          description: The credential used by Deployment Manager and TypeProvider.
            Only one of the options is permitted.
          id: Credential
          properties:
            basicAuth:
              $ref: '#/schemas/BasicAuth'
              description: Basic Auth Credential, only used by TypeProvider.
            serviceAccount:
              $ref: '#/schemas/ServiceAccount'
              description: Service Account Credential, only used by Deployment.
            useProjectDefault:
              description: Specify to use the project default credential, only supported
                by Deployment.
              type: boolean
          type: object
        Deployment:
          description: ''
          id: Deployment
          properties:
            credential:
              $ref: '#/schemas/Credential'
              description: User provided default credential for the deployment.
            description:
              description: An optional user-provided description of the deployment.
              type: string
            fingerprint:
              description: |-
                Provides a fingerprint to use in requests to modify a deployment, such as update(), stop(), and cancelPreview() requests. A fingerprint is a randomly generated value that must be provided with update(), stop(), and cancelPreview() requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time.

                The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment.
              format: byte
              type: string
            id:
              format: uint64
              type: string
            insertTime:
              description: Output only. Creation timestamp in RFC3339 text format.
              type: string
            labels:
              description: 'Map of labels; provided by the client when the resource
                is created or updated. Specifically: Label keys must be between 1
                and 63 characters long and must conform to the following regular expression:
                [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between 0 and 63 characters
                long and must conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?'
              items:
                $ref: '#/schemas/DeploymentLabelEntry'
              type: array
            manifest:
              description: Output only. URL of the manifest representing the last
                manifest that was successfully deployed.
              type: string
            name:
              description: Name of the resource; provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              type: string
            operation:
              $ref: '#/schemas/Operation'
              description: Output only. The Operation that most recently ran, or is
                currently running, on this deployment.
            outputs:
              description: Output only. Map of outputs from the last manifest that
                deployed successfully.
              items:
                $ref: '#/schemas/DeploymentOutputsEntry'
              type: array
            selfLink:
              description: Output only. Server defined URL for the resource.
              type: string
            target:
              $ref: '#/schemas/TargetConfiguration'
              description: '[Input Only] The parameters that define your deployment,
                including the deployment configuration and relevant templates.'
            update:
              $ref: '#/schemas/DeploymentUpdate'
              description: Output only. If Deployment Manager is currently updating
                or previewing an update to this deployment, the updated configuration
                appears here.
            updateTime:
              description: Output only. Update timestamp in RFC3339 text format.
              type: string
          type: object
        DeploymentLabelEntry:
          id: DeploymentLabelEntry
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        DeploymentOutputsEntry:
          id: DeploymentOutputsEntry
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        DeploymentUpdate:
          description: ''
          id: DeploymentUpdate
          properties:
            credential:
              $ref: '#/schemas/Credential'
              description: Output only. The user-provided default credential to use
                when deploying this preview.
            description:
              description: Output only. An optional user-provided description of the
                deployment after the current update has been applied.
              type: string
            labels:
              description: 'Output only. Map of labels; provided by the client when
                the resource is created or updated. Specifically: Label keys must
                be between 1 and 63 characters long and must conform to the following
                regular expression: [a-z]([-a-z0-9]*[a-z0-9])? Label values must be
                between 0 and 63 characters long and must conform to the regular expression
                ([a-z]([-a-z0-9]*[a-z0-9])?)?'
              items:
                $ref: '#/schemas/DeploymentUpdateLabelEntry'
              type: array
            manifest:
              description: Output only. URL of the manifest representing the update
                configuration of this deployment.
              type: string
          type: object
        DeploymentUpdateLabelEntry:
          id: DeploymentUpdateLabelEntry
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        ImportFile:
          description: ''
          id: ImportFile
          properties:
            content:
              description: The contents of the file.
              type: string
            name:
              description: The name of the file.
              type: string
          type: object
        Operation:
          description: An Operation resource, used to manage asynchronous API requests.
            (== resource_for v1.globalOperations ==) (== resource_for beta.globalOperations
            ==) (== resource_for v1.regionOperations ==) (== resource_for beta.regionOperations
            ==) (== resource_for v1.zoneOperations ==) (== resource_for beta.zoneOperations
            ==)
          id: Operation
          properties:
            clientOperationId:
              description: '[Output Only] The value of `requestId` if you provided
                it in the request. Not present otherwise.'
              type: string
            creationTimestamp:
              description: '[Deprecated] This field is deprecated.'
              type: string
            description:
              description: '[Output Only] A textual description of the operation,
                which is set when the operation is created.'
              type: string
            endTime:
              description: '[Output Only] The time that this operation was completed.
                This value is in RFC3339 text format.'
              type: string
            error:
              description: '[Output Only] If errors are generated during processing
                of the operation, this field will be populated.'
              properties:
                errors:
                  description: '[Output Only] The array of errors encountered while
                    processing this operation.'
                  items:
                    properties:
                      code:
                        description: '[Output Only] The error type identifier for
                          this error.'
                        type: string
                      location:
                        description: '[Output Only] Indicates the field in the request
                          that caused the error. This property is optional.'
                        type: string
                      message:
                        description: '[Output Only] An optional, human-readable error
                          message.'
                        type: string
                    type: object
                  type: array
              type: object
            httpErrorMessage:
              description: '[Output Only] If the operation fails, this field contains
                the HTTP error message that was returned, such as NOT FOUND.'
              type: string
            httpErrorStatusCode:
              description: '[Output Only] If the operation fails, this field contains
                the HTTP error status code that was returned. For example, a 404 means
                the resource was not found.'
              format: int32
              type: integer
            id:
              description: '[Output Only] The unique identifier for the resource.
                This identifier is defined by the server.'
              format: uint64
              type: string
            insertTime:
              description: '[Output Only] The time that this operation was requested.
                This value is in RFC3339 text format.'
              type: string
            kind:
              default: deploymentmanager#operation
              description: '[Output Only] Type of the resource. Always compute#operation
                for Operation resources.'
              type: string
            name:
              description: '[Output Only] Name of the resource.'
              type: string
            operationType:
              description: '[Output Only] The type of operation, such as insert, update,
                or delete, and so on.'
              type: string
            progress:
              description: '[Output Only] An optional progress indicator that ranges
                from 0 to 100. There is no requirement that this be linear or support
                any granularity of operations. This should not be used to guess when
                the operation will be complete. This number should monotonically increase
                as the operation progresses.'
              format: int32
              type: integer
            region:
              description: '[Output Only] The URL of the region where the operation
                resides. Only available when performing regional operations. You must
                specify this field as part of the HTTP request URL. It is not settable
                as a field in the request body.'
              type: string
            selfLink:
              description: '[Output Only] Server-defined URL for the resource.'
              type: string
            startTime:
              description: '[Output Only] The time that this operation was started
                by the server. This value is in RFC3339 text format.'
              type: string
            status:
              description: '[Output Only] The status of the operation, which can be
                one of the following: PENDING, RUNNING, or DONE.'
              type: string
            statusMessage:
              description: '[Output Only] An optional textual description of the current
                status of the operation.'
              type: string
            targetId:
              description: '[Output Only] The unique target ID, which identifies a
                specific incarnation of the target resource.'
              format: uint64
              type: string
            targetLink:
              description: '[Output Only] The URL of the resource that the operation
                modifies. For operations related to creating a snapshot, this points
                to the persistent disk that the snapshot was created from.'
              type: string
            user:
              description: '[Output Only] User who requested the operation, for example:
                user@example.com.'
              type: string
            warnings:
              description: '[Output Only] If warning messages are generated during
                processing of the operation, this field will be populated.'
              items:
                properties:
                  code:
                    description: '[Output Only] A warning code, if applicable. For
                      example, Compute Engine returns NO_RESULTS_ON_PAGE if there
                      are no results in the response.'
                    type: string
                  data:
                    description: |-
                      [Output Only] Metadata about this warning in key: value format. For example:
                      "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                    items:
                      properties:
                        key:
                          description: '[Output Only] A key that provides more detail
                            on the warning being returned. For example, for warnings
                            where there are no results in a list request for a particular
                            zone, this key might be scope and the key value might
                            be the zone name. Other examples might be a key indicating
                            a deprecated resource and a suggested replacement, or
                            a warning about invalid network settings (for example,
                            if an instance attempts to perform IP forwarding but is
                            not enabled for IP forwarding).'
                          type: string
                        value:
                          description: '[Output Only] A warning data value corresponding
                            to the key.'
                          type: string
                      type: object
                    type: array
                  message:
                    description: '[Output Only] A human-readable description of the
                      warning code.'
                    type: string
                type: object
              type: array
            zone:
              description: '[Output Only] The URL of the zone where the operation
                resides. Only available when performing per-zone operations. You must
                specify this field as part of the HTTP request URL. It is not settable
                as a field in the request body.'
              type: string
          type: object
        ServiceAccount:
          description: Service Account used as a credential.
          id: ServiceAccount
          properties:
            email:
              description: The IAM service account email address like test@myproject.iam.gserviceaccount.com
              type: string
          type: object
        TargetConfiguration:
          description: ''
          id: TargetConfiguration
          properties:
            config:
              $ref: '#/schemas/ConfigFile'
              description: The configuration to use for this deployment.
            imports:
              description: Specifies any files to import for this configuration. This
                can be used to import templates or other files. For example, you might
                import a text file in order to use the file in a template.
              items:
                $ref: '#/schemas/ImportFile'
              type: array
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/deploymentmanager-alpha/types/deployments?alt=json
  title: Google Cloud Deployment Manager Alpha API
