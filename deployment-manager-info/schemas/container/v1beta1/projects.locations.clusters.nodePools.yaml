type_info:
  documentationLink: https://cloud.google.com/container-engine/
  kind: deploymentmanager#typeInfo
  name: projects.locations.clusters.nodePools
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          clusterId:
            description: |-
              Deprecated. The name of the cluster.
              This field has been deprecated and replaced by the parent field.
            type: string
          nodePool:
            $ref: '#/schemas/NodePool'
            description: The node pool to create.
          parent:
            description: |-
              The parent (project, location, cluster id) where the node pool will be
              created. Specified in the format
              'projects/*/locations/*/clusters/*'.
            location: path
            pattern: ^projects/[^/]+/locations/[^/]+/clusters/[^/]+$
            required: true
            type: string
          zone:
            description: |-
              Deprecated. The name of the Google Compute Engine
              [zone](/compute/docs/zones#available) in which the cluster
              resides.
              This field has been deprecated and replaced by the parent field.
            type: string
        type: object
      methodName: create
      schemas:
        AcceleratorConfig:
          description: AcceleratorConfig represents a Hardware Accelerator request.
          id: AcceleratorConfig
          properties:
            acceleratorCount:
              description: The number of the accelerator cards exposed to an instance.
              format: int64
              type: string
            acceleratorType:
              description: |-
                The accelerator type resource name. List of supported accelerators
                [here](/compute/docs/gpus/#Introduction)
              type: string
          type: object
        AutoUpgradeOptions:
          description: |-
            AutoUpgradeOptions defines the set of options for the user to control how
            the Auto Upgrades will proceed.
          id: AutoUpgradeOptions
          properties:
            autoUpgradeStartTime:
              description: |-
                [Output only] This field is set when upgrades are about to commence
                with the approximate start time for the upgrades, in
                [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
              type: string
            description:
              description: |-
                [Output only] This field is set when upgrades are about to commence
                with the description of the upgrade.
              type: string
          type: object
        CreateNodePoolRequest:
          description: CreateNodePoolRequest creates a node pool for a cluster.
          id: CreateNodePoolRequest
          properties:
            clusterId:
              description: |-
                Deprecated. The name of the cluster.
                This field has been deprecated and replaced by the parent field.
              type: string
            nodePool:
              $ref: '#/schemas/NodePool'
              description: The node pool to create.
            parent:
              description: |-
                The parent (project, location, cluster id) where the node pool will be
                created. Specified in the format
                'projects/*/locations/*/clusters/*'.
              type: string
            projectId:
              description: |-
                Deprecated. The Google Developers Console [project ID or project
                number](https://developers.google.com/console/help/new/#projectnumber).
                This field has been deprecated and replaced by the parent field.
              type: string
            zone:
              description: |-
                Deprecated. The name of the Google Compute Engine
                [zone](/compute/docs/zones#available) in which the cluster
                resides.
                This field has been deprecated and replaced by the parent field.
              type: string
          type: object
        MaxPodsConstraint:
          description: Constraints applied to pods.
          id: MaxPodsConstraint
          properties:
            maxPodsPerNode:
              description: Constraint enforced on the max num of pods per node.
              format: int64
              type: string
          type: object
        NodeConfig:
          description: Parameters that describe the nodes in a cluster.
          id: NodeConfig
          properties:
            accelerators:
              description: |-
                A list of hardware accelerators to be attached to each node.
                See https://cloud.google.com/compute/docs/gpus for more information about
                support for GPUs.
              items:
                $ref: '#/schemas/AcceleratorConfig'
              type: array
            diskSizeGb:
              description: |-
                Size of the disk attached to each node, specified in GB.
                The smallest allowed disk size is 10GB.

                If unspecified, the default disk size is 100GB.
              format: int32
              type: integer
            diskType:
              description: |-
                Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd')

                If unspecified, the default disk type is 'pd-standard'
              type: string
            imageType:
              description: |-
                The image type to use for this node. Note that for a given image type,
                the latest version of it will be used.
              type: string
            labels:
              additionalProperties:
                type: string
              description: |-
                The map of Kubernetes labels (key/value pairs) to be applied to each node.
                These will added in addition to any default label(s) that
                Kubernetes may apply to the node.
                In case of conflict in label keys, the applied set may differ depending on
                the Kubernetes version -- it's best to assume the behavior is undefined
                and conflicts should be avoided.
                For more information, including usage and the valid values, see:
                https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
              type: object
            localSsdCount:
              description: |-
                The number of local SSD disks to be attached to the node.

                The limit for this value is dependant upon the maximum number of
                disks available on a machine per zone. See:
                https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits
                for more information.
              format: int32
              type: integer
            machineType:
              description: |-
                The name of a Google Compute Engine [machine
                type](/compute/docs/machine-types) (e.g.
                `n1-standard-1`).

                If unspecified, the default machine type is
                `n1-standard-1`.
              type: string
            metadata:
              additionalProperties:
                type: string
              description: |-
                The metadata key/value pairs assigned to instances in the cluster.

                Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
                in length. These are reflected as part of a URL in the metadata server.
                Additionally, to avoid ambiguity, keys must not conflict with any other
                metadata keys for the project or be one of the reserved keys:
                 "cluster-location"
                 "cluster-name"
                 "cluster-uid"
                 "configure-sh"
                 "containerd-configure-sh"
                 "enable-oslogin"
                 "gci-ensure-gke-docker"
                 "gci-update-strategy"
                 "instance-template"
                 "kube-env"
                 "startup-script"
                 "user-data"
                 "disable-address-manager"
                 "windows-startup-script-ps1"
                 "common-psm1"
                 "k8s-node-setup-psm1"
                 "install-ssh-psm1"
                 "user-profile-psm1"
                 "serial-port-logging-enable"
                Values are free-form strings, and only have meaning as interpreted by
                the image running in the instance. The only restriction placed on them is
                that each value's size must be less than or equal to 32 KB.

                The total size of all keys and values must be less than 512 KB.
              type: object
            minCpuPlatform:
              description: |-
                Minimum CPU platform to be used by this instance. The instance may be
                scheduled on the specified or newer CPU platform. Applicable values are the
                friendly names of CPU platforms, such as
                <code>minCpuPlatform: &quot;Intel Haswell&quot;</code> or
                <code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>. For more
                information, read [how to specify min CPU
                platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
              type: string
            oauthScopes:
              description: |-
                The set of Google API scopes to be made available on all of the
                node VMs under the "default" service account.

                The following scopes are recommended, but not required, and by default are
                not included:

                * `https://www.googleapis.com/auth/compute` is required for mounting
                persistent storage on your nodes.
                * `https://www.googleapis.com/auth/devstorage.read_only` is required for
                communicating with **gcr.io**
                (the [Google Container Registry](/container-registry/)).

                If unspecified, no scopes are added, unless Cloud Logging or Cloud
                Monitoring are enabled, in which case their required scopes will be added.
              items:
                type: string
              type: array
            preemptible:
              description: |-
                Whether the nodes are created as preemptible VM instances. See:
                https://cloud.google.com/compute/docs/instances/preemptible for more
                inforamtion about preemptible VM instances.
              type: boolean
            sandboxConfig:
              $ref: '#/schemas/SandboxConfig'
              description: Sandbox configuration for this node.
            serviceAccount:
              description: |-
                The Google Cloud Platform Service Account to be used by the node VMs. If
                no Service Account is specified, the "default" service account is used.
              type: string
            shieldedInstanceConfig:
              $ref: '#/schemas/ShieldedInstanceConfig'
              description: Shielded Instance options.
            tags:
              description: |-
                The list of instance tags applied to all nodes. Tags are used to identify
                valid sources or targets for network firewalls and are specified by
                the client during cluster or node pool creation. Each tag within the list
                must comply with RFC1035.
              items:
                type: string
              type: array
            taints:
              description: |-
                List of kubernetes taints to be applied to each node.

                For more information, including usage and the valid values, see:
                https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
              items:
                $ref: '#/schemas/NodeTaint'
              type: array
            workloadMetadataConfig:
              $ref: '#/schemas/WorkloadMetadataConfig'
              description: The workload metadata configuration for this node.
          type: object
        NodeManagement:
          description: |-
            NodeManagement defines the set of node management services turned on for the
            node pool.
          id: NodeManagement
          properties:
            autoRepair:
              description: Whether the nodes will be automatically repaired.
              type: boolean
            autoUpgrade:
              description: Whether the nodes will be automatically upgraded.
              type: boolean
            upgradeOptions:
              $ref: '#/schemas/AutoUpgradeOptions'
              description: Specifies the Auto Upgrade knobs for the node pool.
          type: object
        NodePool:
          description: |-
            NodePool contains the name and configuration for a cluster's node pool.
            Node pools are a set of nodes (i.e. VM's), with a common configuration and
            specification, under the control of the cluster master. They may have a set
            of Kubernetes labels applied to them, which may be used to reference them
            during pod scheduling. They may also be resized up or down, to accommodate
            the workload.
          id: NodePool
          properties:
            autoscaling:
              $ref: '#/schemas/NodePoolAutoscaling'
              description: |-
                Autoscaler configuration for this NodePool. Autoscaler is enabled
                only if a valid configuration is present.
            conditions:
              description: Which conditions caused the current node pool state.
              items:
                $ref: '#/schemas/StatusCondition'
              type: array
            config:
              $ref: '#/schemas/NodeConfig'
              description: The node configuration of the pool.
            initialNodeCount:
              description: |-
                The initial node count for the pool. You must ensure that your
                Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
                is sufficient for this number of instances. You must also have available
                firewall and routes quota.
              format: int32
              type: integer
            instanceGroupUrls:
              description: |-
                [Output only] The resource URLs of the [managed instance
                groups](/compute/docs/instance-groups/creating-groups-of-managed-instances)
                associated with this node pool.
              items:
                type: string
              type: array
            locations:
              description: |-
                The list of Google Compute Engine [zones](/compute/docs/zones#available)
                in which the NodePool's nodes should be located.
              items:
                type: string
              type: array
            management:
              $ref: '#/schemas/NodeManagement'
              description: NodeManagement configuration for this NodePool.
            maxPodsConstraint:
              $ref: '#/schemas/MaxPodsConstraint'
              description: |-
                The constraint on the maximum number of pods that can be run
                simultaneously on a node in the node pool.
            name:
              description: The name of the node pool.
              type: string
            statusMessage:
              description: |-
                [Output only] Additional information about the current status of this
                node pool instance, if available.
              type: string
            version:
              description: The version of the Kubernetes of this node.
              type: string
          type: object
        NodePoolAutoscaling:
          description: |-
            NodePoolAutoscaling contains information required by cluster autoscaler to
            adjust the size of the node pool to the current cluster usage.
          id: NodePoolAutoscaling
          properties:
            autoprovisioned:
              description: Can this node pool be deleted automatically.
              type: boolean
            enabled:
              description: Is autoscaling enabled for this node pool.
              type: boolean
            maxNodeCount:
              description: |-
                Maximum number of nodes in the NodePool. Must be >= min_node_count. There
                has to enough quota to scale up the cluster.
              format: int32
              type: integer
            minNodeCount:
              description: |-
                Minimum number of nodes in the NodePool. Must be >= 1 and <=
                max_node_count.
              format: int32
              type: integer
          type: object
        NodeTaint:
          description: |-
            Kubernetes taint is comprised of three fields: key, value, and effect. Effect
            can only be one of three types:  NoSchedule, PreferNoSchedule or NoExecute.

            For more information, including usage and the valid values, see:
            https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
          id: NodeTaint
          properties:
            effect:
              description: Effect for taint.
              enum:
              - EFFECT_UNSPECIFIED
              - NO_SCHEDULE
              - PREFER_NO_SCHEDULE
              - NO_EXECUTE
              enumDescriptions:
              - Not set
              - NoSchedule
              - PreferNoSchedule
              - NoExecute
              type: string
            key:
              description: Key for taint.
              type: string
            value:
              description: Value for taint.
              type: string
          type: object
        SandboxConfig:
          description: SandboxConfig contains configurations of the sandbox to use
            for the node.
          id: SandboxConfig
          properties:
            sandboxType:
              description: Type of the sandbox to use for the node (e.g. 'gvisor')
              type: string
          type: object
        ShieldedInstanceConfig:
          description: A set of Shielded Instance options.
          id: ShieldedInstanceConfig
          properties:
            enableIntegrityMonitoring:
              description: |-
                Defines whether the instance has integrity monitoring enabled.

                Enables monitoring and attestation of the boot integrity of the instance.
                The attestation is performed against the integrity policy baseline. This
                baseline is initially derived from the implicitly trusted boot image when
                the instance is created.
              type: boolean
            enableSecureBoot:
              description: |-
                Defines whether the instance has Secure Boot enabled.

                Secure Boot helps ensure that the system only runs authentic software by
                verifying the digital signature of all boot components, and halting the
                boot process if signature verification fails.
              type: boolean
          type: object
        StatusCondition:
          description: |-
            StatusCondition describes why a cluster or a node pool has a certain status
            (e.g., ERROR or DEGRADED).
          id: StatusCondition
          properties:
            code:
              description: Machine-friendly representation of the condition
              enum:
              - UNKNOWN
              - GCE_STOCKOUT
              - GKE_SERVICE_ACCOUNT_DELETED
              - GCE_QUOTA_EXCEEDED
              - SET_BY_OPERATOR
              enumDescriptions:
              - UNKNOWN indicates a generic condition.
              - GCE_STOCKOUT indicates a Google Compute Engine stockout.
              - |-
                GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot
                service account.
              - Google Compute Engine quota was exceeded.
              - |-
                Cluster state was manually changed by an SRE due to a system logic error.
                More codes TBA
              type: string
            message:
              description: Human-friendly representation of the condition
              type: string
          type: object
        WorkloadMetadataConfig:
          description: |-
            WorkloadMetadataConfig defines the metadata configuration to expose to
            workloads on the node pool.
          id: WorkloadMetadataConfig
          properties:
            nodeMetadata:
              description: |-
                NodeMetadata is the configuration for how to expose metadata to the
                workloads running on the node.
              enum:
              - UNSPECIFIED
              - SECURE
              - EXPOSE
              - GKE_METADATA_SERVER
              enumDescriptions:
              - Not set.
              - |-
                Prevent workloads not in hostNetwork from accessing certain VM metadata,
                specifically kube-env, which contains Kubelet credentials, and the
                instance identity token.

                Metadata concealment is a temporary security solution available while the
                bootstrapping process for cluster nodes is being redesigned with
                significant security improvements.  This feature is scheduled to be
                deprecated in the future and later removed.
              - Expose all VM metadata to pods.
              - |-
                Run the GKE Metadata Server on this node. The GKE Metadata Server exposes
                a metadata API to workloads that is compatible with the V1 Compute
                Metadata APIs exposed by the Compute Engine and App Engine Metadata
                Servers. This feature can only be enabled if Workload Identity is enabled
                at the cluster level.
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/NodePool'
      methodName: get
      schemas:
        AcceleratorConfig:
          description: AcceleratorConfig represents a Hardware Accelerator request.
          id: AcceleratorConfig
          properties:
            acceleratorCount:
              description: The number of the accelerator cards exposed to an instance.
              format: int64
              type: string
            acceleratorType:
              description: |-
                The accelerator type resource name. List of supported accelerators
                [here](/compute/docs/gpus/#Introduction)
              type: string
          type: object
        AutoUpgradeOptions:
          description: |-
            AutoUpgradeOptions defines the set of options for the user to control how
            the Auto Upgrades will proceed.
          id: AutoUpgradeOptions
          properties:
            autoUpgradeStartTime:
              description: |-
                [Output only] This field is set when upgrades are about to commence
                with the approximate start time for the upgrades, in
                [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
              type: string
            description:
              description: |-
                [Output only] This field is set when upgrades are about to commence
                with the description of the upgrade.
              type: string
          type: object
        MaxPodsConstraint:
          description: Constraints applied to pods.
          id: MaxPodsConstraint
          properties:
            maxPodsPerNode:
              description: Constraint enforced on the max num of pods per node.
              format: int64
              type: string
          type: object
        NodeConfig:
          description: Parameters that describe the nodes in a cluster.
          id: NodeConfig
          properties:
            accelerators:
              description: |-
                A list of hardware accelerators to be attached to each node.
                See https://cloud.google.com/compute/docs/gpus for more information about
                support for GPUs.
              items:
                $ref: '#/schemas/AcceleratorConfig'
              type: array
            diskSizeGb:
              description: |-
                Size of the disk attached to each node, specified in GB.
                The smallest allowed disk size is 10GB.

                If unspecified, the default disk size is 100GB.
              format: int32
              type: integer
            diskType:
              description: |-
                Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd')

                If unspecified, the default disk type is 'pd-standard'
              type: string
            imageType:
              description: |-
                The image type to use for this node. Note that for a given image type,
                the latest version of it will be used.
              type: string
            labels:
              additionalProperties:
                type: string
              description: |-
                The map of Kubernetes labels (key/value pairs) to be applied to each node.
                These will added in addition to any default label(s) that
                Kubernetes may apply to the node.
                In case of conflict in label keys, the applied set may differ depending on
                the Kubernetes version -- it's best to assume the behavior is undefined
                and conflicts should be avoided.
                For more information, including usage and the valid values, see:
                https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
              type: object
            localSsdCount:
              description: |-
                The number of local SSD disks to be attached to the node.

                The limit for this value is dependant upon the maximum number of
                disks available on a machine per zone. See:
                https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits
                for more information.
              format: int32
              type: integer
            machineType:
              description: |-
                The name of a Google Compute Engine [machine
                type](/compute/docs/machine-types) (e.g.
                `n1-standard-1`).

                If unspecified, the default machine type is
                `n1-standard-1`.
              type: string
            metadata:
              additionalProperties:
                type: string
              description: |-
                The metadata key/value pairs assigned to instances in the cluster.

                Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
                in length. These are reflected as part of a URL in the metadata server.
                Additionally, to avoid ambiguity, keys must not conflict with any other
                metadata keys for the project or be one of the reserved keys:
                 "cluster-location"
                 "cluster-name"
                 "cluster-uid"
                 "configure-sh"
                 "containerd-configure-sh"
                 "enable-oslogin"
                 "gci-ensure-gke-docker"
                 "gci-update-strategy"
                 "instance-template"
                 "kube-env"
                 "startup-script"
                 "user-data"
                 "disable-address-manager"
                 "windows-startup-script-ps1"
                 "common-psm1"
                 "k8s-node-setup-psm1"
                 "install-ssh-psm1"
                 "user-profile-psm1"
                 "serial-port-logging-enable"
                Values are free-form strings, and only have meaning as interpreted by
                the image running in the instance. The only restriction placed on them is
                that each value's size must be less than or equal to 32 KB.

                The total size of all keys and values must be less than 512 KB.
              type: object
            minCpuPlatform:
              description: |-
                Minimum CPU platform to be used by this instance. The instance may be
                scheduled on the specified or newer CPU platform. Applicable values are the
                friendly names of CPU platforms, such as
                <code>minCpuPlatform: &quot;Intel Haswell&quot;</code> or
                <code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>. For more
                information, read [how to specify min CPU
                platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
              type: string
            oauthScopes:
              description: |-
                The set of Google API scopes to be made available on all of the
                node VMs under the "default" service account.

                The following scopes are recommended, but not required, and by default are
                not included:

                * `https://www.googleapis.com/auth/compute` is required for mounting
                persistent storage on your nodes.
                * `https://www.googleapis.com/auth/devstorage.read_only` is required for
                communicating with **gcr.io**
                (the [Google Container Registry](/container-registry/)).

                If unspecified, no scopes are added, unless Cloud Logging or Cloud
                Monitoring are enabled, in which case their required scopes will be added.
              items:
                type: string
              type: array
            preemptible:
              description: |-
                Whether the nodes are created as preemptible VM instances. See:
                https://cloud.google.com/compute/docs/instances/preemptible for more
                inforamtion about preemptible VM instances.
              type: boolean
            sandboxConfig:
              $ref: '#/schemas/SandboxConfig'
              description: Sandbox configuration for this node.
            serviceAccount:
              description: |-
                The Google Cloud Platform Service Account to be used by the node VMs. If
                no Service Account is specified, the "default" service account is used.
              type: string
            shieldedInstanceConfig:
              $ref: '#/schemas/ShieldedInstanceConfig'
              description: Shielded Instance options.
            tags:
              description: |-
                The list of instance tags applied to all nodes. Tags are used to identify
                valid sources or targets for network firewalls and are specified by
                the client during cluster or node pool creation. Each tag within the list
                must comply with RFC1035.
              items:
                type: string
              type: array
            taints:
              description: |-
                List of kubernetes taints to be applied to each node.

                For more information, including usage and the valid values, see:
                https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
              items:
                $ref: '#/schemas/NodeTaint'
              type: array
            workloadMetadataConfig:
              $ref: '#/schemas/WorkloadMetadataConfig'
              description: The workload metadata configuration for this node.
          type: object
        NodeManagement:
          description: |-
            NodeManagement defines the set of node management services turned on for the
            node pool.
          id: NodeManagement
          properties:
            autoRepair:
              description: Whether the nodes will be automatically repaired.
              type: boolean
            autoUpgrade:
              description: Whether the nodes will be automatically upgraded.
              type: boolean
            upgradeOptions:
              $ref: '#/schemas/AutoUpgradeOptions'
              description: Specifies the Auto Upgrade knobs for the node pool.
          type: object
        NodePool:
          description: |-
            NodePool contains the name and configuration for a cluster's node pool.
            Node pools are a set of nodes (i.e. VM's), with a common configuration and
            specification, under the control of the cluster master. They may have a set
            of Kubernetes labels applied to them, which may be used to reference them
            during pod scheduling. They may also be resized up or down, to accommodate
            the workload.
          id: NodePool
          properties:
            autoscaling:
              $ref: '#/schemas/NodePoolAutoscaling'
              description: |-
                Autoscaler configuration for this NodePool. Autoscaler is enabled
                only if a valid configuration is present.
            conditions:
              description: Which conditions caused the current node pool state.
              items:
                $ref: '#/schemas/StatusCondition'
              type: array
            config:
              $ref: '#/schemas/NodeConfig'
              description: The node configuration of the pool.
            initialNodeCount:
              description: |-
                The initial node count for the pool. You must ensure that your
                Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
                is sufficient for this number of instances. You must also have available
                firewall and routes quota.
              format: int32
              type: integer
            instanceGroupUrls:
              description: |-
                [Output only] The resource URLs of the [managed instance
                groups](/compute/docs/instance-groups/creating-groups-of-managed-instances)
                associated with this node pool.
              items:
                type: string
              type: array
            locations:
              description: |-
                The list of Google Compute Engine [zones](/compute/docs/zones#available)
                in which the NodePool's nodes should be located.
              items:
                type: string
              type: array
            management:
              $ref: '#/schemas/NodeManagement'
              description: NodeManagement configuration for this NodePool.
            maxPodsConstraint:
              $ref: '#/schemas/MaxPodsConstraint'
              description: |-
                The constraint on the maximum number of pods that can be run
                simultaneously on a node in the node pool.
            name:
              description: The name of the node pool.
              type: string
            podIpv4CidrSize:
              description: '[Output only] The pod CIDR block size per node in this
                node pool.'
              format: int32
              type: integer
            selfLink:
              description: '[Output only] Server-defined URL for the resource.'
              type: string
            status:
              description: '[Output only] The status of the nodes in this pool instance.'
              enum:
              - STATUS_UNSPECIFIED
              - PROVISIONING
              - RUNNING
              - RUNNING_WITH_ERROR
              - RECONCILING
              - STOPPING
              - ERROR
              enumDescriptions:
              - Not set.
              - The PROVISIONING state indicates the node pool is being created.
              - |-
                The RUNNING state indicates the node pool has been created
                and is fully usable.
              - |-
                The RUNNING_WITH_ERROR state indicates the node pool has been created
                and is partially usable. Some error state has occurred and some
                functionality may be impaired. Customer may need to reissue a request
                or trigger a new update.
              - |-
                The RECONCILING state indicates that some work is actively being done on
                the node pool, such as upgrading node software. Details can
                be found in the `statusMessage` field.
              - The STOPPING state indicates the node pool is being deleted.
              - |-
                The ERROR state indicates the node pool may be unusable. Details
                can be found in the `statusMessage` field.
              type: string
            statusMessage:
              description: |-
                [Output only] Additional information about the current status of this
                node pool instance, if available.
              type: string
            version:
              description: The version of the Kubernetes of this node.
              type: string
          type: object
        NodePoolAutoscaling:
          description: |-
            NodePoolAutoscaling contains information required by cluster autoscaler to
            adjust the size of the node pool to the current cluster usage.
          id: NodePoolAutoscaling
          properties:
            autoprovisioned:
              description: Can this node pool be deleted automatically.
              type: boolean
            enabled:
              description: Is autoscaling enabled for this node pool.
              type: boolean
            maxNodeCount:
              description: |-
                Maximum number of nodes in the NodePool. Must be >= min_node_count. There
                has to enough quota to scale up the cluster.
              format: int32
              type: integer
            minNodeCount:
              description: |-
                Minimum number of nodes in the NodePool. Must be >= 1 and <=
                max_node_count.
              format: int32
              type: integer
          type: object
        NodeTaint:
          description: |-
            Kubernetes taint is comprised of three fields: key, value, and effect. Effect
            can only be one of three types:  NoSchedule, PreferNoSchedule or NoExecute.

            For more information, including usage and the valid values, see:
            https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
          id: NodeTaint
          properties:
            effect:
              description: Effect for taint.
              enum:
              - EFFECT_UNSPECIFIED
              - NO_SCHEDULE
              - PREFER_NO_SCHEDULE
              - NO_EXECUTE
              enumDescriptions:
              - Not set
              - NoSchedule
              - PreferNoSchedule
              - NoExecute
              type: string
            key:
              description: Key for taint.
              type: string
            value:
              description: Value for taint.
              type: string
          type: object
        SandboxConfig:
          description: SandboxConfig contains configurations of the sandbox to use
            for the node.
          id: SandboxConfig
          properties:
            sandboxType:
              description: Type of the sandbox to use for the node (e.g. 'gvisor')
              type: string
          type: object
        ShieldedInstanceConfig:
          description: A set of Shielded Instance options.
          id: ShieldedInstanceConfig
          properties:
            enableIntegrityMonitoring:
              description: |-
                Defines whether the instance has integrity monitoring enabled.

                Enables monitoring and attestation of the boot integrity of the instance.
                The attestation is performed against the integrity policy baseline. This
                baseline is initially derived from the implicitly trusted boot image when
                the instance is created.
              type: boolean
            enableSecureBoot:
              description: |-
                Defines whether the instance has Secure Boot enabled.

                Secure Boot helps ensure that the system only runs authentic software by
                verifying the digital signature of all boot components, and halting the
                boot process if signature verification fails.
              type: boolean
          type: object
        StatusCondition:
          description: |-
            StatusCondition describes why a cluster or a node pool has a certain status
            (e.g., ERROR or DEGRADED).
          id: StatusCondition
          properties:
            code:
              description: Machine-friendly representation of the condition
              enum:
              - UNKNOWN
              - GCE_STOCKOUT
              - GKE_SERVICE_ACCOUNT_DELETED
              - GCE_QUOTA_EXCEEDED
              - SET_BY_OPERATOR
              enumDescriptions:
              - UNKNOWN indicates a generic condition.
              - GCE_STOCKOUT indicates a Google Compute Engine stockout.
              - |-
                GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot
                service account.
              - Google Compute Engine quota was exceeded.
              - |-
                Cluster state was manually changed by an SRE due to a system logic error.
                More codes TBA
              type: string
            message:
              description: Human-friendly representation of the condition
              type: string
          type: object
        WorkloadMetadataConfig:
          description: |-
            WorkloadMetadataConfig defines the metadata configuration to expose to
            workloads on the node pool.
          id: WorkloadMetadataConfig
          properties:
            nodeMetadata:
              description: |-
                NodeMetadata is the configuration for how to expose metadata to the
                workloads running on the node.
              enum:
              - UNSPECIFIED
              - SECURE
              - EXPOSE
              - GKE_METADATA_SERVER
              enumDescriptions:
              - Not set.
              - |-
                Prevent workloads not in hostNetwork from accessing certain VM metadata,
                specifically kube-env, which contains Kubelet credentials, and the
                instance identity token.

                Metadata concealment is a temporary security solution available while the
                bootstrapping process for cluster nodes is being redesigned with
                significant security improvements.  This feature is scheduled to be
                deprecated in the future and later removed.
              - Expose all VM metadata to pods.
              - |-
                Run the GKE Metadata Server on this node. The GKE Metadata Server exposes
                a metadata API to workloads that is compatible with the V1 Compute
                Metadata APIs exposed by the Compute Engine and App Engine Metadata
                Servers. This feature can only be enabled if Workload Identity is enabled
                at the cluster level.
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/container-v1beta1/types/projects.locations.clusters.nodePools?alt=json
  title: Kubernetes Engine API
