type_info:
  documentationLink: https://cloud.google.com/container-engine/
  kind: deploymentmanager#typeInfo
  name: projects.zones.clusters
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          cluster:
            $ref: '#/schemas/Cluster'
            description: |-
              A [cluster
              resource](/container-engine/reference/rest/v1/projects.zones.clusters)
          parent:
            description: |-
              The parent (project and location) where the cluster will be created.
              Specified in the format 'projects/*/locations/*'.
            type: string
          zone:
            description: |-
              Deprecated. The name of the Google Compute Engine
              [zone](/compute/docs/zones#available) in which the cluster
              resides.
              This field has been deprecated and replaced by the parent field.
            location: path
            required: true
            type: string
        type: object
      methodName: create
      schemas:
        AcceleratorConfig:
          description: AcceleratorConfig represents a Hardware Accelerator request.
          id: AcceleratorConfig
          properties:
            acceleratorCount:
              description: The number of the accelerator cards exposed to an instance.
              format: int64
              type: string
            acceleratorType:
              description: |-
                The accelerator type resource name. List of supported accelerators
                [here](/compute/docs/gpus/#Introduction)
              type: string
          type: object
        AddonsConfig:
          description: |-
            Configuration for the addons that can be automatically spun up in the
            cluster, enabling additional functionality.
          id: AddonsConfig
          properties:
            horizontalPodAutoscaling:
              $ref: '#/schemas/HorizontalPodAutoscaling'
              description: |-
                Configuration for the horizontal pod autoscaling feature, which
                increases or decreases the number of replica pods a replication controller
                has based on the resource usage of the existing pods.
            httpLoadBalancing:
              $ref: '#/schemas/HttpLoadBalancing'
              description: |-
                Configuration for the HTTP (L7) load balancing controller addon, which
                makes it easy to set up HTTP load balancers for services in a cluster.
            kubernetesDashboard:
              $ref: '#/schemas/KubernetesDashboard'
              description: |-
                Configuration for the Kubernetes Dashboard.
                This addon is deprecated, and will be disabled in 1.15. It is recommended
                to use the Cloud Console to manage and monitor your Kubernetes clusters,
                workloads and applications. For more information, see:
                https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
            networkPolicyConfig:
              $ref: '#/schemas/NetworkPolicyConfig'
              description: |-
                Configuration for NetworkPolicy. This only tracks whether the addon
                is enabled or not on the Master, it does not track whether network policy
                is enabled for the nodes.
          type: object
        AutoUpgradeOptions:
          description: |-
            AutoUpgradeOptions defines the set of options for the user to control how
            the Auto Upgrades will proceed.
          id: AutoUpgradeOptions
          properties:
            autoUpgradeStartTime:
              description: |-
                [Output only] This field is set when upgrades are about to commence
                with the approximate start time for the upgrades, in
                [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
              type: string
            description:
              description: |-
                [Output only] This field is set when upgrades are about to commence
                with the description of the upgrade.
              type: string
          type: object
        BigQueryDestination:
          description: Parameters for using BigQuery as the destination of resource
            usage export.
          id: BigQueryDestination
          properties:
            datasetId:
              description: The ID of a BigQuery Dataset.
              type: string
          type: object
        CidrBlock:
          description: CidrBlock contains an optional name and one CIDR block.
          id: CidrBlock
          properties:
            cidrBlock:
              description: cidr_block must be specified in CIDR notation.
              type: string
            displayName:
              description: display_name is an optional field for users to identify
                CIDR blocks.
              type: string
          type: object
        ClientCertificateConfig:
          description: Configuration for client certificates on the cluster.
          id: ClientCertificateConfig
          properties:
            issueClientCertificate:
              description: Issue a client certificate.
              type: boolean
          type: object
        Cluster:
          description: A Google Kubernetes Engine cluster.
          id: Cluster
          properties:
            addonsConfig:
              $ref: '#/schemas/AddonsConfig'
              description: Configurations for the various addons available to run
                in the cluster.
            clusterIpv4Cidr:
              description: |-
                The IP address range of the container pods in this cluster, in
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`). Leave blank to have
                one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
              type: string
            conditions:
              description: Which conditions caused the current cluster state.
              items:
                $ref: '#/schemas/StatusCondition'
              type: array
            createTime:
              description: |-
                [Output only] The time the cluster was created, in
                [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
              type: string
            currentNodeCount:
              description: |-
                [Output only]  The number of nodes currently in the cluster. Deprecated.
                Call Kubernetes API directly to retrieve node information.
              format: int32
              type: integer
            currentNodeVersion:
              description: |-
                [Output only] Deprecated, use
                [NodePools.version](/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters.nodePools)
                instead. The current version of the node software components. If they are
                currently at multiple versions because they're in the process of being
                upgraded, this reflects the minimum version of all nodes.
              type: string
            defaultMaxPodsConstraint:
              $ref: '#/schemas/MaxPodsConstraint'
              description: |-
                The default constraint on the maximum number of pods that can be run
                simultaneously on a node in the node pool of this cluster. Only honored
                if cluster created with IP Alias support.
            description:
              description: An optional description of this cluster.
              type: string
            enableKubernetesAlpha:
              description: |-
                Kubernetes alpha features are enabled on this cluster. This includes alpha
                API groups (e.g. v1alpha1) and features that may not be production ready in
                the kubernetes version of the master and nodes.
                The cluster has no SLA for uptime and master/node upgrades are disabled.
                Alpha enabled clusters are automatically deleted thirty days after
                creation.
              type: boolean
            enableTpu:
              description: Enable the ability to use Cloud TPUs in this cluster.
              type: boolean
            endpoint:
              description: |-
                [Output only] The IP address of this cluster's master endpoint.
                The endpoint can be accessed from the internet at
                `https://username:password@endpoint/`.

                See the `masterAuth` property of this resource for username and
                password information.
              type: string
            expireTime:
              description: |-
                [Output only] The time the cluster will be automatically
                deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
              type: string
            initialClusterVersion:
              description: |-
                The initial Kubernetes version for this cluster.  Valid versions are those
                found in validMasterVersions returned by getServerConfig.  The version can
                be upgraded over time; such upgrades are reflected in
                currentMasterVersion and currentNodeVersion.

                Users may specify either explicit versions offered by
                Kubernetes Engine or version aliases, which have the following behavior:

                - "latest": picks the highest valid Kubernetes version
                - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
                - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
                - "1.X.Y-gke.N": picks an explicit Kubernetes version
                - "","-": picks the default Kubernetes version
              type: string
            initialNodeCount:
              description: |-
                The number of nodes to create in this cluster. You must ensure that your
                Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
                is sufficient for this number of instances. You must also have available
                firewall and routes quota.
                For requests, this field should only be used in lieu of a
                "node_pool" object, since this configuration (along with the
                "node_config") will be used to create a "NodePool" object with an
                auto-generated name. Do not use this and a node_pool at the same time.

                This field is deprecated, use node_pool.initial_node_count instead.
              format: int32
              type: integer
            instanceGroupUrls:
              description: Deprecated. Use node_pools.instance_group_urls.
              items:
                type: string
              type: array
            ipAllocationPolicy:
              $ref: '#/schemas/IPAllocationPolicy'
              description: Configuration for cluster IP allocation.
            labelFingerprint:
              description: The fingerprint of the set of labels for this cluster.
              type: string
            legacyAbac:
              $ref: '#/schemas/LegacyAbac'
              description: Configuration for the legacy ABAC authorization mode.
            location:
              description: |-
                [Output only] The name of the Google Compute Engine
                [zone](/compute/docs/regions-zones/regions-zones#available) or
                [region](/compute/docs/regions-zones/regions-zones#available) in which
                the cluster resides.
              type: string
            locations:
              description: |-
                The list of Google Compute Engine
                [zones](/compute/docs/zones#available) in which the cluster's nodes
                should be located.
              items:
                type: string
              type: array
            loggingService:
              description: |-
                The logging service the cluster should use to write logs.
                Currently available options:

                * "logging.googleapis.com/kubernetes" - the Google Cloud Logging
                service with Kubernetes-native resource model in Stackdriver
                * `logging.googleapis.com` - the Google Cloud Logging service.
                * `none` - no logs will be exported from the cluster.
                * if left as an empty string,`logging.googleapis.com` will be used.
              type: string
            maintenancePolicy:
              $ref: '#/schemas/MaintenancePolicy'
              description: Configure the maintenance policy for this cluster.
            masterAuth:
              $ref: '#/schemas/MasterAuth'
              description: |-
                The authentication information for accessing the master endpoint.
                If unspecified, the defaults are used:
                For clusters before v1.12, if master_auth is unspecified, `username` will
                be set to "admin", a random password will be generated, and a client
                certificate will be issued.
            masterAuthorizedNetworksConfig:
              $ref: '#/schemas/MasterAuthorizedNetworksConfig'
              description: The configuration options for master authorized networks
                feature.
            monitoringService:
              description: |-
                The monitoring service the cluster should use to write metrics.
                Currently available options:

                * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
                * `none` - no metrics will be exported from the cluster.
                * if left as an empty string, `monitoring.googleapis.com` will be used.
              type: string
            name:
              description: |-
                The name of this cluster. The name must be unique within this project
                and zone, and can be up to 40 characters with the following restrictions:

                * Lowercase letters, numbers, and hyphens only.
                * Must start with a letter.
                * Must end with a number or a letter.
              type: string
            network:
              description: |-
                The name of the Google Compute Engine
                [network](/compute/docs/networks-and-firewalls#networks) to which the
                cluster is connected. If left unspecified, the `default` network
                will be used.
              type: string
            networkConfig:
              $ref: '#/schemas/NetworkConfig'
              description: Configuration for cluster networking.
            networkPolicy:
              $ref: '#/schemas/NetworkPolicy'
              description: Configuration options for the NetworkPolicy feature.
            nodeConfig:
              $ref: '#/schemas/NodeConfig'
              description: |-
                Parameters used in creating the cluster's nodes.
                For requests, this field should only be used in lieu of a
                "node_pool" object, since this configuration (along with the
                "initial_node_count") will be used to create a "NodePool" object with an
                auto-generated name. Do not use this and a node_pool at the same time.
                For responses, this field will be populated with the node configuration of
                the first node pool. (For configuration of each node pool, see
                `node_pool.config`)

                If unspecified, the defaults are used.
                This field is deprecated, use node_pool.config instead.
            nodeIpv4CidrSize:
              description: |-
                [Output only] The size of the address space on each node for hosting
                containers. This is provisioned from within the `container_ipv4_cidr`
                range. This field will only be set when cluster is in route-based network
                mode.
              format: int32
              type: integer
            nodePools:
              description: |-
                The node pools associated with this cluster.
                This field should not be set if "node_config" or "initial_node_count" are
                specified.
              items:
                $ref: '#/schemas/NodePool'
              type: array
            privateClusterConfig:
              $ref: '#/schemas/PrivateClusterConfig'
              description: Configuration for private cluster.
            resourceLabels:
              additionalProperties:
                type: string
              description: |-
                The resource labels for the cluster to use to annotate any related
                Google Compute Engine resources.
              type: object
            resourceUsageExportConfig:
              $ref: '#/schemas/ResourceUsageExportConfig'
              description: |-
                Configuration for exporting resource usages. Resource usage export is
                disabled when this config is unspecified.
            servicesIpv4Cidr:
              description: |-
                [Output only] The IP address range of the Kubernetes services in
                this cluster, in
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `1.2.3.4/29`). Service addresses are
                typically put in the last `/16` from the container CIDR.
              type: string
            statusMessage:
              description: |-
                [Output only] Additional information about the current status of this
                cluster, if available.
              type: string
            subnetwork:
              description: |-
                The name of the Google Compute Engine
                [subnetwork](/compute/docs/subnetworks) to which the
                cluster is connected.
              type: string
            tpuIpv4CidrBlock:
              description: |-
                [Output only] The IP address range of the Cloud TPUs in this cluster, in
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `1.2.3.4/29`).
              type: string
            zone:
              description: |-
                [Output only] The name of the Google Compute Engine
                [zone](/compute/docs/zones#available) in which the cluster
                resides.
                This field is deprecated, use location instead.
              type: string
          type: object
        ConsumptionMeteringConfig:
          description: Parameters for controlling consumption metering.
          id: ConsumptionMeteringConfig
          properties:
            enabled:
              description: |-
                Whether to enable consumption metering for this cluster. If enabled, a
                second BigQuery table will be created to hold resource consumption
                records.
              type: boolean
          type: object
        CreateClusterRequest:
          description: CreateClusterRequest creates a cluster.
          id: CreateClusterRequest
          properties:
            cluster:
              $ref: '#/schemas/Cluster'
              description: |-
                A [cluster
                resource](/container-engine/reference/rest/v1/projects.zones.clusters)
            parent:
              description: |-
                The parent (project and location) where the cluster will be created.
                Specified in the format 'projects/*/locations/*'.
              type: string
            projectId:
              description: |-
                Deprecated. The Google Developers Console [project ID or project
                number](https://support.google.com/cloud/answer/6158840).
                This field has been deprecated and replaced by the parent field.
              type: string
            zone:
              description: |-
                Deprecated. The name of the Google Compute Engine
                [zone](/compute/docs/zones#available) in which the cluster
                resides.
                This field has been deprecated and replaced by the parent field.
              type: string
          type: object
        DailyMaintenanceWindow:
          description: Time window specified for daily maintenance operations.
          id: DailyMaintenanceWindow
          properties:
            duration:
              description: |-
                [Output only] Duration of the time window, automatically chosen to be
                smallest possible in the given scenario.
                Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                format "PTnHnMnS".
              type: string
            startTime:
              description: |-
                Time within the maintenance window to start the maintenance operations.
                Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                format "HH:MM", where HH : [00-23] and MM : [00-59] GMT.
              type: string
          type: object
        HorizontalPodAutoscaling:
          description: |-
            Configuration options for the horizontal pod autoscaling feature, which
            increases or decreases the number of replica pods a replication controller
            has based on the resource usage of the existing pods.
          id: HorizontalPodAutoscaling
          properties:
            disabled:
              description: |-
                Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
                When enabled, it ensures that a Heapster pod is running in the cluster,
                which is also used by the Cloud Monitoring service.
              type: boolean
          type: object
        HttpLoadBalancing:
          description: |-
            Configuration options for the HTTP (L7) load balancing controller addon,
            which makes it easy to set up HTTP load balancers for services in a cluster.
          id: HttpLoadBalancing
          properties:
            disabled:
              description: |-
                Whether the HTTP Load Balancing controller is enabled in the cluster.
                When enabled, it runs a small pod in the cluster that manages the load
                balancers.
              type: boolean
          type: object
        IPAllocationPolicy:
          description: Configuration for controlling how IPs are allocated in the
            cluster.
          id: IPAllocationPolicy
          properties:
            clusterIpv4Cidr:
              description: This field is deprecated, use cluster_ipv4_cidr_block.
              type: string
            clusterIpv4CidrBlock:
              description: |-
                The IP address range for the cluster pod IPs. If this field is set, then
                `cluster.cluster_ipv4_cidr` must be left blank.

                This field is only applicable when `use_ip_aliases` is true.

                Set to blank to have a range chosen with the default size.

                Set to /netmask (e.g. `/14`) to have a range chosen with a specific
                netmask.

                Set to a
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
                `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
                to use.
              type: string
            clusterSecondaryRangeName:
              description: |-
                The name of the secondary range to be used for the cluster CIDR
                block.  The secondary range will be used for pod IP
                addresses. This must be an existing secondary range associated
                with the cluster subnetwork.

                This field is only applicable with use_ip_aliases is true and
                create_subnetwork is false.
              type: string
            createSubnetwork:
              description: |-
                Whether a new subnetwork will be created automatically for the cluster.

                This field is only applicable when `use_ip_aliases` is true.
              type: boolean
            nodeIpv4Cidr:
              description: This field is deprecated, use node_ipv4_cidr_block.
              type: string
            nodeIpv4CidrBlock:
              description: |-
                The IP address range of the instance IPs in this cluster.

                This is applicable only if `create_subnetwork` is true.

                Set to blank to have a range chosen with the default size.

                Set to /netmask (e.g. `/14`) to have a range chosen with a specific
                netmask.

                Set to a
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
                `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
                to use.
              type: string
            servicesIpv4Cidr:
              description: This field is deprecated, use services_ipv4_cidr_block.
              type: string
            servicesIpv4CidrBlock:
              description: |-
                The IP address range of the services IPs in this cluster. If blank, a range
                will be automatically chosen with the default size.

                This field is only applicable when `use_ip_aliases` is true.

                Set to blank to have a range chosen with the default size.

                Set to /netmask (e.g. `/14`) to have a range chosen with a specific
                netmask.

                Set to a
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
                `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
                to use.
              type: string
            servicesSecondaryRangeName:
              description: |-
                The name of the secondary range to be used as for the services
                CIDR block.  The secondary range will be used for service
                ClusterIPs. This must be an existing secondary range associated
                with the cluster subnetwork.

                This field is only applicable with use_ip_aliases is true and
                create_subnetwork is false.
              type: string
            subnetworkName:
              description: |-
                A custom subnetwork name to be used if `create_subnetwork` is true.  If
                this field is empty, then an automatic name will be chosen for the new
                subnetwork.
              type: string
            tpuIpv4CidrBlock:
              description: |-
                The IP address range of the Cloud TPUs in this cluster. If unspecified, a
                range will be automatically chosen with the default size.

                This field is only applicable when `use_ip_aliases` is true.

                If unspecified, the range will use the default size.

                Set to /netmask (e.g. `/14`) to have a range chosen with a specific
                netmask.

                Set to a
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
                `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
                to use.
              type: string
            useIpAliases:
              description: Whether alias IPs will be used for pod IPs in the cluster.
              type: boolean
          type: object
        KubernetesDashboard:
          description: Configuration for the Kubernetes Dashboard.
          id: KubernetesDashboard
          properties:
            disabled:
              description: Whether the Kubernetes Dashboard is enabled for this cluster.
              type: boolean
          type: object
        LegacyAbac:
          description: |-
            Configuration for the legacy Attribute Based Access Control authorization
            mode.
          id: LegacyAbac
          properties:
            enabled:
              description: |-
                Whether the ABAC authorizer is enabled for this cluster. When enabled,
                identities in the system, including service accounts, nodes, and
                controllers, will have statically granted permissions beyond those
                provided by the RBAC configuration or IAM.
              type: boolean
          type: object
        MaintenancePolicy:
          description: MaintenancePolicy defines the maintenance policy to be used
            for the cluster.
          id: MaintenancePolicy
          properties:
            window:
              $ref: '#/schemas/MaintenanceWindow'
              description: Specifies the maintenance window in which maintenance may
                be performed.
          type: object
        MaintenanceWindow:
          description: MaintenanceWindow defines the maintenance window to be used
            for the cluster.
          id: MaintenanceWindow
          properties:
            dailyMaintenanceWindow:
              $ref: '#/schemas/DailyMaintenanceWindow'
              description: DailyMaintenanceWindow specifies a daily maintenance operation
                window.
          type: object
        MasterAuth:
          description: |-
            The authentication information for accessing the master endpoint.
            Authentication can be done using HTTP basic auth or using client
            certificates.
          id: MasterAuth
          properties:
            clientCertificate:
              description: |-
                [Output only] Base64-encoded public certificate used by clients to
                authenticate to the cluster endpoint.
              type: string
            clientCertificateConfig:
              $ref: '#/schemas/ClientCertificateConfig'
              description: |-
                Configuration for client certificate authentication on the cluster. For
                clusters before v1.12, if no configuration is specified, a client
                certificate is issued.
            clientKey:
              description: |-
                [Output only] Base64-encoded private key used by clients to authenticate
                to the cluster endpoint.
              type: string
            clusterCaCertificate:
              description: |-
                [Output only] Base64-encoded public certificate that is the root of
                trust for the cluster.
              type: string
            password:
              description: |-
                The password to use for HTTP basic authentication to the master endpoint.
                Because the master endpoint is open to the Internet, you should create a
                strong password.  If a password is provided for cluster creation, username
                must be non-empty.
              type: string
            username:
              description: |-
                The username to use for HTTP basic authentication to the master endpoint.
                For clusters v1.6.0 and later, basic authentication can be disabled by
                leaving username unspecified (or setting it to the empty string).
              type: string
          type: object
        MasterAuthorizedNetworksConfig:
          description: |-
            Configuration options for the master authorized networks feature. Enabled
            master authorized networks will disallow all external traffic to access
            Kubernetes master through HTTPS except traffic from the given CIDR blocks,
            Google Compute Engine Public IPs and Google Prod IPs.
          id: MasterAuthorizedNetworksConfig
          properties:
            cidrBlocks:
              description: |-
                cidr_blocks define up to 50 external networks that could access
                Kubernetes master through HTTPS.
              items:
                $ref: '#/schemas/CidrBlock'
              type: array
            enabled:
              description: Whether or not master authorized networks is enabled.
              type: boolean
          type: object
        MaxPodsConstraint:
          description: Constraints applied to pods.
          id: MaxPodsConstraint
          properties:
            maxPodsPerNode:
              description: Constraint enforced on the max num of pods per node.
              format: int64
              type: string
          type: object
        NetworkConfig:
          description: NetworkConfig reports the relative names of network & subnetwork.
          id: NetworkConfig
          properties:
            network:
              description: |-
                Output only. The relative name of the Google Compute Engine
                network(/compute/docs/networks-and-firewalls#networks) to which
                the cluster is connected.
                Example: projects/my-project/global/networks/my-network
              type: string
            subnetwork:
              description: |-
                Output only. The relative name of the Google Compute Engine
                [subnetwork](/compute/docs/vpc) to which the cluster is connected.
                Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
              type: string
          type: object
        NetworkPolicy:
          description: |-
            Configuration options for the NetworkPolicy feature.
            https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
          id: NetworkPolicy
          properties:
            enabled:
              description: Whether network policy is enabled on the cluster.
              type: boolean
            provider:
              description: The selected network policy provider.
              enum:
              - PROVIDER_UNSPECIFIED
              - CALICO
              enumDescriptions:
              - Not set
              - Tigera (Calico Felix).
              type: string
          type: object
        NetworkPolicyConfig:
          description: |-
            Configuration for NetworkPolicy. This only tracks whether the addon
            is enabled or not on the Master, it does not track whether network policy
            is enabled for the nodes.
          id: NetworkPolicyConfig
          properties:
            disabled:
              description: Whether NetworkPolicy is enabled for this cluster.
              type: boolean
          type: object
        NodeConfig:
          description: Parameters that describe the nodes in a cluster.
          id: NodeConfig
          properties:
            accelerators:
              description: |-
                A list of hardware accelerators to be attached to each node.
                See https://cloud.google.com/compute/docs/gpus for more information about
                support for GPUs.
              items:
                $ref: '#/schemas/AcceleratorConfig'
              type: array
            diskSizeGb:
              description: |-
                Size of the disk attached to each node, specified in GB.
                The smallest allowed disk size is 10GB.

                If unspecified, the default disk size is 100GB.
              format: int32
              type: integer
            diskType:
              description: |-
                Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd')

                If unspecified, the default disk type is 'pd-standard'
              type: string
            imageType:
              description: |-
                The image type to use for this node. Note that for a given image type,
                the latest version of it will be used.
              type: string
            labels:
              additionalProperties:
                type: string
              description: |-
                The map of Kubernetes labels (key/value pairs) to be applied to each node.
                These will added in addition to any default label(s) that
                Kubernetes may apply to the node.
                In case of conflict in label keys, the applied set may differ depending on
                the Kubernetes version -- it's best to assume the behavior is undefined
                and conflicts should be avoided.
                For more information, including usage and the valid values, see:
                https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
              type: object
            localSsdCount:
              description: |-
                The number of local SSD disks to be attached to the node.

                The limit for this value is dependant upon the maximum number of
                disks available on a machine per zone. See:
                https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits
                for more information.
              format: int32
              type: integer
            machineType:
              description: |-
                The name of a Google Compute Engine [machine
                type](/compute/docs/machine-types) (e.g.
                `n1-standard-1`).

                If unspecified, the default machine type is
                `n1-standard-1`.
              type: string
            metadata:
              additionalProperties:
                type: string
              description: |-
                The metadata key/value pairs assigned to instances in the cluster.

                Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
                in length. These are reflected as part of a URL in the metadata server.
                Additionally, to avoid ambiguity, keys must not conflict with any other
                metadata keys for the project or be one of the reserved keys:
                 "cluster-location"
                 "cluster-name"
                 "cluster-uid"
                 "configure-sh"
                 "containerd-configure-sh"
                 "enable-os-login"
                 "gci-update-strategy"
                 "gci-ensure-gke-docker"
                 "instance-template"
                 "kube-env"
                 "startup-script"
                 "user-data"
                 "disable-address-manager"
                 "windows-startup-script-ps1"
                 "common-psm1"
                 "k8s-node-setup-psm1"
                 "install-ssh-psm1"
                 "user-profile-psm1"
                 "serial-port-logging-enable"

                Values are free-form strings, and only have meaning as interpreted by
                the image running in the instance. The only restriction placed on them is
                that each value's size must be less than or equal to 32 KB.

                The total size of all keys and values must be less than 512 KB.
              type: object
            minCpuPlatform:
              description: |-
                Minimum CPU platform to be used by this instance. The instance may be
                scheduled on the specified or newer CPU platform. Applicable values are the
                friendly names of CPU platforms, such as
                <code>minCpuPlatform: &quot;Intel Haswell&quot;</code> or
                <code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>. For more
                information, read [how to specify min CPU
                platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
              type: string
            oauthScopes:
              description: |-
                The set of Google API scopes to be made available on all of the
                node VMs under the "default" service account.

                The following scopes are recommended, but not required, and by default are
                not included:

                * `https://www.googleapis.com/auth/compute` is required for mounting
                persistent storage on your nodes.
                * `https://www.googleapis.com/auth/devstorage.read_only` is required for
                communicating with **gcr.io**
                (the [Google Container Registry](/container-registry/)).

                If unspecified, no scopes are added, unless Cloud Logging or Cloud
                Monitoring are enabled, in which case their required scopes will be added.
              items:
                type: string
              type: array
            preemptible:
              description: |-
                Whether the nodes are created as preemptible VM instances. See:
                https://cloud.google.com/compute/docs/instances/preemptible for more
                information about preemptible VM instances.
              type: boolean
            serviceAccount:
              description: |-
                The Google Cloud Platform Service Account to be used by the node VMs. If
                no Service Account is specified, the "default" service account is used.
              type: string
            tags:
              description: |-
                The list of instance tags applied to all nodes. Tags are used to identify
                valid sources or targets for network firewalls and are specified by
                the client during cluster or node pool creation. Each tag within the list
                must comply with RFC1035.
              items:
                type: string
              type: array
            taints:
              description: |-
                List of kubernetes taints to be applied to each node.

                For more information, including usage and the valid values, see:
                https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
              items:
                $ref: '#/schemas/NodeTaint'
              type: array
          type: object
        NodeManagement:
          description: |-
            NodeManagement defines the set of node management services turned on for the
            node pool.
          id: NodeManagement
          properties:
            autoRepair:
              description: |-
                A flag that specifies whether the node auto-repair is enabled for the node
                pool. If enabled, the nodes in this node pool will be monitored and, if
                they fail health checks too many times, an automatic repair action will be
                triggered.
              type: boolean
            autoUpgrade:
              description: |-
                A flag that specifies whether node auto-upgrade is enabled for the node
                pool. If enabled, node auto-upgrade helps keep the nodes in your node pool
                up to date with the latest release version of Kubernetes.
              type: boolean
            upgradeOptions:
              $ref: '#/schemas/AutoUpgradeOptions'
              description: Specifies the Auto Upgrade knobs for the node pool.
          type: object
        NodePool:
          description: |-
            NodePool contains the name and configuration for a cluster's node pool.
            Node pools are a set of nodes (i.e. VM's), with a common configuration and
            specification, under the control of the cluster master. They may have a set
            of Kubernetes labels applied to them, which may be used to reference them
            during pod scheduling. They may also be resized up or down, to accommodate
            the workload.
          id: NodePool
          properties:
            autoscaling:
              $ref: '#/schemas/NodePoolAutoscaling'
              description: |-
                Autoscaler configuration for this NodePool. Autoscaler is enabled
                only if a valid configuration is present.
            conditions:
              description: Which conditions caused the current node pool state.
              items:
                $ref: '#/schemas/StatusCondition'
              type: array
            config:
              $ref: '#/schemas/NodeConfig'
              description: The node configuration of the pool.
            initialNodeCount:
              description: |-
                The initial node count for the pool. You must ensure that your
                Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
                is sufficient for this number of instances. You must also have available
                firewall and routes quota.
              format: int32
              type: integer
            instanceGroupUrls:
              description: |-
                [Output only] The resource URLs of the [managed instance
                groups](/compute/docs/instance-groups/creating-groups-of-managed-instances)
                associated with this node pool.
              items:
                type: string
              type: array
            management:
              $ref: '#/schemas/NodeManagement'
              description: NodeManagement configuration for this NodePool.
            maxPodsConstraint:
              $ref: '#/schemas/MaxPodsConstraint'
              description: |-
                The constraint on the maximum number of pods that can be run
                simultaneously on a node in the node pool.
            name:
              description: The name of the node pool.
              type: string
            statusMessage:
              description: |-
                [Output only] Additional information about the current status of this
                node pool instance, if available.
              type: string
            version:
              description: The version of the Kubernetes of this node.
              type: string
          type: object
        NodePoolAutoscaling:
          description: |-
            NodePoolAutoscaling contains information required by cluster autoscaler to
            adjust the size of the node pool to the current cluster usage.
          id: NodePoolAutoscaling
          properties:
            enabled:
              description: Is autoscaling enabled for this node pool.
              type: boolean
            maxNodeCount:
              description: |-
                Maximum number of nodes in the NodePool. Must be >= min_node_count. There
                has to enough quota to scale up the cluster.
              format: int32
              type: integer
            minNodeCount:
              description: |-
                Minimum number of nodes in the NodePool. Must be >= 1 and <=
                max_node_count.
              format: int32
              type: integer
          type: object
        NodeTaint:
          description: |-
            Kubernetes taint is comprised of three fields: key, value, and effect. Effect
            can only be one of three types:  NoSchedule, PreferNoSchedule or NoExecute.

            For more information, including usage and the valid values, see:
            https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
          id: NodeTaint
          properties:
            effect:
              description: Effect for taint.
              enum:
              - EFFECT_UNSPECIFIED
              - NO_SCHEDULE
              - PREFER_NO_SCHEDULE
              - NO_EXECUTE
              enumDescriptions:
              - Not set
              - NoSchedule
              - PreferNoSchedule
              - NoExecute
              type: string
            key:
              description: Key for taint.
              type: string
            value:
              description: Value for taint.
              type: string
          type: object
        PrivateClusterConfig:
          description: Configuration options for private clusters.
          id: PrivateClusterConfig
          properties:
            enablePrivateEndpoint:
              description: Whether the master's internal IP address is used as the
                cluster endpoint.
              type: boolean
            enablePrivateNodes:
              description: |-
                Whether nodes have internal IP addresses only. If enabled, all nodes are
                given only RFC 1918 private addresses and communicate with the master via
                private networking.
              type: boolean
            masterIpv4CidrBlock:
              description: |-
                The IP range in CIDR notation to use for the hosted master network. This
                range will be used for assigning internal IP addresses to the master or
                set of masters, as well as the ILB VIP. This range must not overlap with
                any other ranges in use within the cluster's network.
              type: string
          type: object
        ResourceUsageExportConfig:
          description: Configuration for exporting cluster resource usages.
          id: ResourceUsageExportConfig
          properties:
            bigqueryDestination:
              $ref: '#/schemas/BigQueryDestination'
              description: Configuration to use BigQuery as usage export destination.
            consumptionMeteringConfig:
              $ref: '#/schemas/ConsumptionMeteringConfig'
              description: Configuration to enable resource consumption metering.
            enableNetworkEgressMetering:
              description: |-
                Whether to enable network egress metering for this cluster. If enabled, a
                daemonset will be created in the cluster to meter network egress traffic.
              type: boolean
          type: object
        StatusCondition:
          description: |-
            StatusCondition describes why a cluster or a node pool has a certain status
            (e.g., ERROR or DEGRADED).
          id: StatusCondition
          properties:
            code:
              description: Machine-friendly representation of the condition
              enum:
              - UNKNOWN
              - GCE_STOCKOUT
              - GKE_SERVICE_ACCOUNT_DELETED
              - GCE_QUOTA_EXCEEDED
              - SET_BY_OPERATOR
              enumDescriptions:
              - UNKNOWN indicates a generic condition.
              - GCE_STOCKOUT indicates a Google Compute Engine stockout.
              - |-
                GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot
                service account.
              - Google Compute Engine quota was exceeded.
              - |-
                Cluster state was manually changed by an SRE due to a system logic error.
                More codes TBA
              type: string
            message:
              description: Human-friendly representation of the condition
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Cluster'
      methodName: get
      schemas:
        AcceleratorConfig:
          description: AcceleratorConfig represents a Hardware Accelerator request.
          id: AcceleratorConfig
          properties:
            acceleratorCount:
              description: The number of the accelerator cards exposed to an instance.
              format: int64
              type: string
            acceleratorType:
              description: |-
                The accelerator type resource name. List of supported accelerators
                [here](/compute/docs/gpus/#Introduction)
              type: string
          type: object
        AddonsConfig:
          description: |-
            Configuration for the addons that can be automatically spun up in the
            cluster, enabling additional functionality.
          id: AddonsConfig
          properties:
            horizontalPodAutoscaling:
              $ref: '#/schemas/HorizontalPodAutoscaling'
              description: |-
                Configuration for the horizontal pod autoscaling feature, which
                increases or decreases the number of replica pods a replication controller
                has based on the resource usage of the existing pods.
            httpLoadBalancing:
              $ref: '#/schemas/HttpLoadBalancing'
              description: |-
                Configuration for the HTTP (L7) load balancing controller addon, which
                makes it easy to set up HTTP load balancers for services in a cluster.
            kubernetesDashboard:
              $ref: '#/schemas/KubernetesDashboard'
              description: |-
                Configuration for the Kubernetes Dashboard.
                This addon is deprecated, and will be disabled in 1.15. It is recommended
                to use the Cloud Console to manage and monitor your Kubernetes clusters,
                workloads and applications. For more information, see:
                https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
            networkPolicyConfig:
              $ref: '#/schemas/NetworkPolicyConfig'
              description: |-
                Configuration for NetworkPolicy. This only tracks whether the addon
                is enabled or not on the Master, it does not track whether network policy
                is enabled for the nodes.
          type: object
        AutoUpgradeOptions:
          description: |-
            AutoUpgradeOptions defines the set of options for the user to control how
            the Auto Upgrades will proceed.
          id: AutoUpgradeOptions
          properties:
            autoUpgradeStartTime:
              description: |-
                [Output only] This field is set when upgrades are about to commence
                with the approximate start time for the upgrades, in
                [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
              type: string
            description:
              description: |-
                [Output only] This field is set when upgrades are about to commence
                with the description of the upgrade.
              type: string
          type: object
        BigQueryDestination:
          description: Parameters for using BigQuery as the destination of resource
            usage export.
          id: BigQueryDestination
          properties:
            datasetId:
              description: The ID of a BigQuery Dataset.
              type: string
          type: object
        CidrBlock:
          description: CidrBlock contains an optional name and one CIDR block.
          id: CidrBlock
          properties:
            cidrBlock:
              description: cidr_block must be specified in CIDR notation.
              type: string
            displayName:
              description: display_name is an optional field for users to identify
                CIDR blocks.
              type: string
          type: object
        ClientCertificateConfig:
          description: Configuration for client certificates on the cluster.
          id: ClientCertificateConfig
          properties:
            issueClientCertificate:
              description: Issue a client certificate.
              type: boolean
          type: object
        Cluster:
          description: A Google Kubernetes Engine cluster.
          id: Cluster
          properties:
            addonsConfig:
              $ref: '#/schemas/AddonsConfig'
              description: Configurations for the various addons available to run
                in the cluster.
            clusterIpv4Cidr:
              description: |-
                The IP address range of the container pods in this cluster, in
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`). Leave blank to have
                one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
              type: string
            conditions:
              description: Which conditions caused the current cluster state.
              items:
                $ref: '#/schemas/StatusCondition'
              type: array
            createTime:
              description: |-
                [Output only] The time the cluster was created, in
                [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
              type: string
            currentMasterVersion:
              description: '[Output only] The current software version of the master
                endpoint.'
              type: string
            currentNodeCount:
              description: |-
                [Output only]  The number of nodes currently in the cluster. Deprecated.
                Call Kubernetes API directly to retrieve node information.
              format: int32
              type: integer
            currentNodeVersion:
              description: |-
                [Output only] Deprecated, use
                [NodePools.version](/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters.nodePools)
                instead. The current version of the node software components. If they are
                currently at multiple versions because they're in the process of being
                upgraded, this reflects the minimum version of all nodes.
              type: string
            defaultMaxPodsConstraint:
              $ref: '#/schemas/MaxPodsConstraint'
              description: |-
                The default constraint on the maximum number of pods that can be run
                simultaneously on a node in the node pool of this cluster. Only honored
                if cluster created with IP Alias support.
            description:
              description: An optional description of this cluster.
              type: string
            enableKubernetesAlpha:
              description: |-
                Kubernetes alpha features are enabled on this cluster. This includes alpha
                API groups (e.g. v1alpha1) and features that may not be production ready in
                the kubernetes version of the master and nodes.
                The cluster has no SLA for uptime and master/node upgrades are disabled.
                Alpha enabled clusters are automatically deleted thirty days after
                creation.
              type: boolean
            enableTpu:
              description: Enable the ability to use Cloud TPUs in this cluster.
              type: boolean
            endpoint:
              description: |-
                [Output only] The IP address of this cluster's master endpoint.
                The endpoint can be accessed from the internet at
                `https://username:password@endpoint/`.

                See the `masterAuth` property of this resource for username and
                password information.
              type: string
            expireTime:
              description: |-
                [Output only] The time the cluster will be automatically
                deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
              type: string
            initialClusterVersion:
              description: |-
                The initial Kubernetes version for this cluster.  Valid versions are those
                found in validMasterVersions returned by getServerConfig.  The version can
                be upgraded over time; such upgrades are reflected in
                currentMasterVersion and currentNodeVersion.

                Users may specify either explicit versions offered by
                Kubernetes Engine or version aliases, which have the following behavior:

                - "latest": picks the highest valid Kubernetes version
                - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
                - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
                - "1.X.Y-gke.N": picks an explicit Kubernetes version
                - "","-": picks the default Kubernetes version
              type: string
            initialNodeCount:
              description: |-
                The number of nodes to create in this cluster. You must ensure that your
                Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
                is sufficient for this number of instances. You must also have available
                firewall and routes quota.
                For requests, this field should only be used in lieu of a
                "node_pool" object, since this configuration (along with the
                "node_config") will be used to create a "NodePool" object with an
                auto-generated name. Do not use this and a node_pool at the same time.

                This field is deprecated, use node_pool.initial_node_count instead.
              format: int32
              type: integer
            instanceGroupUrls:
              description: Deprecated. Use node_pools.instance_group_urls.
              items:
                type: string
              type: array
            ipAllocationPolicy:
              $ref: '#/schemas/IPAllocationPolicy'
              description: Configuration for cluster IP allocation.
            labelFingerprint:
              description: The fingerprint of the set of labels for this cluster.
              type: string
            legacyAbac:
              $ref: '#/schemas/LegacyAbac'
              description: Configuration for the legacy ABAC authorization mode.
            location:
              description: |-
                [Output only] The name of the Google Compute Engine
                [zone](/compute/docs/regions-zones/regions-zones#available) or
                [region](/compute/docs/regions-zones/regions-zones#available) in which
                the cluster resides.
              type: string
            locations:
              description: |-
                The list of Google Compute Engine
                [zones](/compute/docs/zones#available) in which the cluster's nodes
                should be located.
              items:
                type: string
              type: array
            loggingService:
              description: |-
                The logging service the cluster should use to write logs.
                Currently available options:

                * "logging.googleapis.com/kubernetes" - the Google Cloud Logging
                service with Kubernetes-native resource model in Stackdriver
                * `logging.googleapis.com` - the Google Cloud Logging service.
                * `none` - no logs will be exported from the cluster.
                * if left as an empty string,`logging.googleapis.com` will be used.
              type: string
            maintenancePolicy:
              $ref: '#/schemas/MaintenancePolicy'
              description: Configure the maintenance policy for this cluster.
            masterAuth:
              $ref: '#/schemas/MasterAuth'
              description: |-
                The authentication information for accessing the master endpoint.
                If unspecified, the defaults are used:
                For clusters before v1.12, if master_auth is unspecified, `username` will
                be set to "admin", a random password will be generated, and a client
                certificate will be issued.
            masterAuthorizedNetworksConfig:
              $ref: '#/schemas/MasterAuthorizedNetworksConfig'
              description: The configuration options for master authorized networks
                feature.
            monitoringService:
              description: |-
                The monitoring service the cluster should use to write metrics.
                Currently available options:

                * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
                * `none` - no metrics will be exported from the cluster.
                * if left as an empty string, `monitoring.googleapis.com` will be used.
              type: string
            name:
              description: |-
                The name of this cluster. The name must be unique within this project
                and zone, and can be up to 40 characters with the following restrictions:

                * Lowercase letters, numbers, and hyphens only.
                * Must start with a letter.
                * Must end with a number or a letter.
              type: string
            network:
              description: |-
                The name of the Google Compute Engine
                [network](/compute/docs/networks-and-firewalls#networks) to which the
                cluster is connected. If left unspecified, the `default` network
                will be used.
              type: string
            networkConfig:
              $ref: '#/schemas/NetworkConfig'
              description: Configuration for cluster networking.
            networkPolicy:
              $ref: '#/schemas/NetworkPolicy'
              description: Configuration options for the NetworkPolicy feature.
            nodeConfig:
              $ref: '#/schemas/NodeConfig'
              description: |-
                Parameters used in creating the cluster's nodes.
                For requests, this field should only be used in lieu of a
                "node_pool" object, since this configuration (along with the
                "initial_node_count") will be used to create a "NodePool" object with an
                auto-generated name. Do not use this and a node_pool at the same time.
                For responses, this field will be populated with the node configuration of
                the first node pool. (For configuration of each node pool, see
                `node_pool.config`)

                If unspecified, the defaults are used.
                This field is deprecated, use node_pool.config instead.
            nodeIpv4CidrSize:
              description: |-
                [Output only] The size of the address space on each node for hosting
                containers. This is provisioned from within the `container_ipv4_cidr`
                range. This field will only be set when cluster is in route-based network
                mode.
              format: int32
              type: integer
            nodePools:
              description: |-
                The node pools associated with this cluster.
                This field should not be set if "node_config" or "initial_node_count" are
                specified.
              items:
                $ref: '#/schemas/NodePool'
              type: array
            privateClusterConfig:
              $ref: '#/schemas/PrivateClusterConfig'
              description: Configuration for private cluster.
            resourceLabels:
              additionalProperties:
                type: string
              description: |-
                The resource labels for the cluster to use to annotate any related
                Google Compute Engine resources.
              type: object
            resourceUsageExportConfig:
              $ref: '#/schemas/ResourceUsageExportConfig'
              description: |-
                Configuration for exporting resource usages. Resource usage export is
                disabled when this config is unspecified.
            selfLink:
              description: '[Output only] Server-defined URL for the resource.'
              type: string
            servicesIpv4Cidr:
              description: |-
                [Output only] The IP address range of the Kubernetes services in
                this cluster, in
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `1.2.3.4/29`). Service addresses are
                typically put in the last `/16` from the container CIDR.
              type: string
            status:
              description: '[Output only] The current status of this cluster.'
              enum:
              - STATUS_UNSPECIFIED
              - PROVISIONING
              - RUNNING
              - RECONCILING
              - STOPPING
              - ERROR
              - DEGRADED
              enumDescriptions:
              - Not set.
              - The PROVISIONING state indicates the cluster is being created.
              - |-
                The RUNNING state indicates the cluster has been created and is fully
                usable.
              - |-
                The RECONCILING state indicates that some work is actively being done on
                the cluster, such as upgrading the master or node software. Details can
                be found in the `statusMessage` field.
              - The STOPPING state indicates the cluster is being deleted.
              - |-
                The ERROR state indicates the cluster may be unusable. Details
                can be found in the `statusMessage` field.
              - |-
                The DEGRADED state indicates the cluster requires user action to restore
                full functionality. Details can be found in the `statusMessage` field.
              type: string
            statusMessage:
              description: |-
                [Output only] Additional information about the current status of this
                cluster, if available.
              type: string
            subnetwork:
              description: |-
                The name of the Google Compute Engine
                [subnetwork](/compute/docs/subnetworks) to which the
                cluster is connected.
              type: string
            tpuIpv4CidrBlock:
              description: |-
                [Output only] The IP address range of the Cloud TPUs in this cluster, in
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `1.2.3.4/29`).
              type: string
            zone:
              description: |-
                [Output only] The name of the Google Compute Engine
                [zone](/compute/docs/zones#available) in which the cluster
                resides.
                This field is deprecated, use location instead.
              type: string
          type: object
        ConsumptionMeteringConfig:
          description: Parameters for controlling consumption metering.
          id: ConsumptionMeteringConfig
          properties:
            enabled:
              description: |-
                Whether to enable consumption metering for this cluster. If enabled, a
                second BigQuery table will be created to hold resource consumption
                records.
              type: boolean
          type: object
        DailyMaintenanceWindow:
          description: Time window specified for daily maintenance operations.
          id: DailyMaintenanceWindow
          properties:
            duration:
              description: |-
                [Output only] Duration of the time window, automatically chosen to be
                smallest possible in the given scenario.
                Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                format "PTnHnMnS".
              type: string
            startTime:
              description: |-
                Time within the maintenance window to start the maintenance operations.
                Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                format "HH:MM", where HH : [00-23] and MM : [00-59] GMT.
              type: string
          type: object
        HorizontalPodAutoscaling:
          description: |-
            Configuration options for the horizontal pod autoscaling feature, which
            increases or decreases the number of replica pods a replication controller
            has based on the resource usage of the existing pods.
          id: HorizontalPodAutoscaling
          properties:
            disabled:
              description: |-
                Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
                When enabled, it ensures that a Heapster pod is running in the cluster,
                which is also used by the Cloud Monitoring service.
              type: boolean
          type: object
        HttpLoadBalancing:
          description: |-
            Configuration options for the HTTP (L7) load balancing controller addon,
            which makes it easy to set up HTTP load balancers for services in a cluster.
          id: HttpLoadBalancing
          properties:
            disabled:
              description: |-
                Whether the HTTP Load Balancing controller is enabled in the cluster.
                When enabled, it runs a small pod in the cluster that manages the load
                balancers.
              type: boolean
          type: object
        IPAllocationPolicy:
          description: Configuration for controlling how IPs are allocated in the
            cluster.
          id: IPAllocationPolicy
          properties:
            clusterIpv4Cidr:
              description: This field is deprecated, use cluster_ipv4_cidr_block.
              type: string
            clusterIpv4CidrBlock:
              description: |-
                The IP address range for the cluster pod IPs. If this field is set, then
                `cluster.cluster_ipv4_cidr` must be left blank.

                This field is only applicable when `use_ip_aliases` is true.

                Set to blank to have a range chosen with the default size.

                Set to /netmask (e.g. `/14`) to have a range chosen with a specific
                netmask.

                Set to a
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
                `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
                to use.
              type: string
            clusterSecondaryRangeName:
              description: |-
                The name of the secondary range to be used for the cluster CIDR
                block.  The secondary range will be used for pod IP
                addresses. This must be an existing secondary range associated
                with the cluster subnetwork.

                This field is only applicable with use_ip_aliases is true and
                create_subnetwork is false.
              type: string
            createSubnetwork:
              description: |-
                Whether a new subnetwork will be created automatically for the cluster.

                This field is only applicable when `use_ip_aliases` is true.
              type: boolean
            nodeIpv4Cidr:
              description: This field is deprecated, use node_ipv4_cidr_block.
              type: string
            nodeIpv4CidrBlock:
              description: |-
                The IP address range of the instance IPs in this cluster.

                This is applicable only if `create_subnetwork` is true.

                Set to blank to have a range chosen with the default size.

                Set to /netmask (e.g. `/14`) to have a range chosen with a specific
                netmask.

                Set to a
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
                `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
                to use.
              type: string
            servicesIpv4Cidr:
              description: This field is deprecated, use services_ipv4_cidr_block.
              type: string
            servicesIpv4CidrBlock:
              description: |-
                The IP address range of the services IPs in this cluster. If blank, a range
                will be automatically chosen with the default size.

                This field is only applicable when `use_ip_aliases` is true.

                Set to blank to have a range chosen with the default size.

                Set to /netmask (e.g. `/14`) to have a range chosen with a specific
                netmask.

                Set to a
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
                `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
                to use.
              type: string
            servicesSecondaryRangeName:
              description: |-
                The name of the secondary range to be used as for the services
                CIDR block.  The secondary range will be used for service
                ClusterIPs. This must be an existing secondary range associated
                with the cluster subnetwork.

                This field is only applicable with use_ip_aliases is true and
                create_subnetwork is false.
              type: string
            subnetworkName:
              description: |-
                A custom subnetwork name to be used if `create_subnetwork` is true.  If
                this field is empty, then an automatic name will be chosen for the new
                subnetwork.
              type: string
            tpuIpv4CidrBlock:
              description: |-
                The IP address range of the Cloud TPUs in this cluster. If unspecified, a
                range will be automatically chosen with the default size.

                This field is only applicable when `use_ip_aliases` is true.

                If unspecified, the range will use the default size.

                Set to /netmask (e.g. `/14`) to have a range chosen with a specific
                netmask.

                Set to a
                [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
                `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
                to use.
              type: string
            useIpAliases:
              description: Whether alias IPs will be used for pod IPs in the cluster.
              type: boolean
          type: object
        KubernetesDashboard:
          description: Configuration for the Kubernetes Dashboard.
          id: KubernetesDashboard
          properties:
            disabled:
              description: Whether the Kubernetes Dashboard is enabled for this cluster.
              type: boolean
          type: object
        LegacyAbac:
          description: |-
            Configuration for the legacy Attribute Based Access Control authorization
            mode.
          id: LegacyAbac
          properties:
            enabled:
              description: |-
                Whether the ABAC authorizer is enabled for this cluster. When enabled,
                identities in the system, including service accounts, nodes, and
                controllers, will have statically granted permissions beyond those
                provided by the RBAC configuration or IAM.
              type: boolean
          type: object
        MaintenancePolicy:
          description: MaintenancePolicy defines the maintenance policy to be used
            for the cluster.
          id: MaintenancePolicy
          properties:
            window:
              $ref: '#/schemas/MaintenanceWindow'
              description: Specifies the maintenance window in which maintenance may
                be performed.
          type: object
        MaintenanceWindow:
          description: MaintenanceWindow defines the maintenance window to be used
            for the cluster.
          id: MaintenanceWindow
          properties:
            dailyMaintenanceWindow:
              $ref: '#/schemas/DailyMaintenanceWindow'
              description: DailyMaintenanceWindow specifies a daily maintenance operation
                window.
          type: object
        MasterAuth:
          description: |-
            The authentication information for accessing the master endpoint.
            Authentication can be done using HTTP basic auth or using client
            certificates.
          id: MasterAuth
          properties:
            clientCertificate:
              description: |-
                [Output only] Base64-encoded public certificate used by clients to
                authenticate to the cluster endpoint.
              type: string
            clientCertificateConfig:
              $ref: '#/schemas/ClientCertificateConfig'
              description: |-
                Configuration for client certificate authentication on the cluster. For
                clusters before v1.12, if no configuration is specified, a client
                certificate is issued.
            clientKey:
              description: |-
                [Output only] Base64-encoded private key used by clients to authenticate
                to the cluster endpoint.
              type: string
            clusterCaCertificate:
              description: |-
                [Output only] Base64-encoded public certificate that is the root of
                trust for the cluster.
              type: string
            password:
              description: |-
                The password to use for HTTP basic authentication to the master endpoint.
                Because the master endpoint is open to the Internet, you should create a
                strong password.  If a password is provided for cluster creation, username
                must be non-empty.
              type: string
            username:
              description: |-
                The username to use for HTTP basic authentication to the master endpoint.
                For clusters v1.6.0 and later, basic authentication can be disabled by
                leaving username unspecified (or setting it to the empty string).
              type: string
          type: object
        MasterAuthorizedNetworksConfig:
          description: |-
            Configuration options for the master authorized networks feature. Enabled
            master authorized networks will disallow all external traffic to access
            Kubernetes master through HTTPS except traffic from the given CIDR blocks,
            Google Compute Engine Public IPs and Google Prod IPs.
          id: MasterAuthorizedNetworksConfig
          properties:
            cidrBlocks:
              description: |-
                cidr_blocks define up to 50 external networks that could access
                Kubernetes master through HTTPS.
              items:
                $ref: '#/schemas/CidrBlock'
              type: array
            enabled:
              description: Whether or not master authorized networks is enabled.
              type: boolean
          type: object
        MaxPodsConstraint:
          description: Constraints applied to pods.
          id: MaxPodsConstraint
          properties:
            maxPodsPerNode:
              description: Constraint enforced on the max num of pods per node.
              format: int64
              type: string
          type: object
        NetworkConfig:
          description: NetworkConfig reports the relative names of network & subnetwork.
          id: NetworkConfig
          properties:
            network:
              description: |-
                Output only. The relative name of the Google Compute Engine
                network(/compute/docs/networks-and-firewalls#networks) to which
                the cluster is connected.
                Example: projects/my-project/global/networks/my-network
              type: string
            subnetwork:
              description: |-
                Output only. The relative name of the Google Compute Engine
                [subnetwork](/compute/docs/vpc) to which the cluster is connected.
                Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
              type: string
          type: object
        NetworkPolicy:
          description: |-
            Configuration options for the NetworkPolicy feature.
            https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
          id: NetworkPolicy
          properties:
            enabled:
              description: Whether network policy is enabled on the cluster.
              type: boolean
            provider:
              description: The selected network policy provider.
              enum:
              - PROVIDER_UNSPECIFIED
              - CALICO
              enumDescriptions:
              - Not set
              - Tigera (Calico Felix).
              type: string
          type: object
        NetworkPolicyConfig:
          description: |-
            Configuration for NetworkPolicy. This only tracks whether the addon
            is enabled or not on the Master, it does not track whether network policy
            is enabled for the nodes.
          id: NetworkPolicyConfig
          properties:
            disabled:
              description: Whether NetworkPolicy is enabled for this cluster.
              type: boolean
          type: object
        NodeConfig:
          description: Parameters that describe the nodes in a cluster.
          id: NodeConfig
          properties:
            accelerators:
              description: |-
                A list of hardware accelerators to be attached to each node.
                See https://cloud.google.com/compute/docs/gpus for more information about
                support for GPUs.
              items:
                $ref: '#/schemas/AcceleratorConfig'
              type: array
            diskSizeGb:
              description: |-
                Size of the disk attached to each node, specified in GB.
                The smallest allowed disk size is 10GB.

                If unspecified, the default disk size is 100GB.
              format: int32
              type: integer
            diskType:
              description: |-
                Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd')

                If unspecified, the default disk type is 'pd-standard'
              type: string
            imageType:
              description: |-
                The image type to use for this node. Note that for a given image type,
                the latest version of it will be used.
              type: string
            labels:
              additionalProperties:
                type: string
              description: |-
                The map of Kubernetes labels (key/value pairs) to be applied to each node.
                These will added in addition to any default label(s) that
                Kubernetes may apply to the node.
                In case of conflict in label keys, the applied set may differ depending on
                the Kubernetes version -- it's best to assume the behavior is undefined
                and conflicts should be avoided.
                For more information, including usage and the valid values, see:
                https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
              type: object
            localSsdCount:
              description: |-
                The number of local SSD disks to be attached to the node.

                The limit for this value is dependant upon the maximum number of
                disks available on a machine per zone. See:
                https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits
                for more information.
              format: int32
              type: integer
            machineType:
              description: |-
                The name of a Google Compute Engine [machine
                type](/compute/docs/machine-types) (e.g.
                `n1-standard-1`).

                If unspecified, the default machine type is
                `n1-standard-1`.
              type: string
            metadata:
              additionalProperties:
                type: string
              description: |-
                The metadata key/value pairs assigned to instances in the cluster.

                Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
                in length. These are reflected as part of a URL in the metadata server.
                Additionally, to avoid ambiguity, keys must not conflict with any other
                metadata keys for the project or be one of the reserved keys:
                 "cluster-location"
                 "cluster-name"
                 "cluster-uid"
                 "configure-sh"
                 "containerd-configure-sh"
                 "enable-os-login"
                 "gci-update-strategy"
                 "gci-ensure-gke-docker"
                 "instance-template"
                 "kube-env"
                 "startup-script"
                 "user-data"
                 "disable-address-manager"
                 "windows-startup-script-ps1"
                 "common-psm1"
                 "k8s-node-setup-psm1"
                 "install-ssh-psm1"
                 "user-profile-psm1"
                 "serial-port-logging-enable"

                Values are free-form strings, and only have meaning as interpreted by
                the image running in the instance. The only restriction placed on them is
                that each value's size must be less than or equal to 32 KB.

                The total size of all keys and values must be less than 512 KB.
              type: object
            minCpuPlatform:
              description: |-
                Minimum CPU platform to be used by this instance. The instance may be
                scheduled on the specified or newer CPU platform. Applicable values are the
                friendly names of CPU platforms, such as
                <code>minCpuPlatform: &quot;Intel Haswell&quot;</code> or
                <code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>. For more
                information, read [how to specify min CPU
                platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
              type: string
            oauthScopes:
              description: |-
                The set of Google API scopes to be made available on all of the
                node VMs under the "default" service account.

                The following scopes are recommended, but not required, and by default are
                not included:

                * `https://www.googleapis.com/auth/compute` is required for mounting
                persistent storage on your nodes.
                * `https://www.googleapis.com/auth/devstorage.read_only` is required for
                communicating with **gcr.io**
                (the [Google Container Registry](/container-registry/)).

                If unspecified, no scopes are added, unless Cloud Logging or Cloud
                Monitoring are enabled, in which case their required scopes will be added.
              items:
                type: string
              type: array
            preemptible:
              description: |-
                Whether the nodes are created as preemptible VM instances. See:
                https://cloud.google.com/compute/docs/instances/preemptible for more
                information about preemptible VM instances.
              type: boolean
            serviceAccount:
              description: |-
                The Google Cloud Platform Service Account to be used by the node VMs. If
                no Service Account is specified, the "default" service account is used.
              type: string
            tags:
              description: |-
                The list of instance tags applied to all nodes. Tags are used to identify
                valid sources or targets for network firewalls and are specified by
                the client during cluster or node pool creation. Each tag within the list
                must comply with RFC1035.
              items:
                type: string
              type: array
            taints:
              description: |-
                List of kubernetes taints to be applied to each node.

                For more information, including usage and the valid values, see:
                https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
              items:
                $ref: '#/schemas/NodeTaint'
              type: array
          type: object
        NodeManagement:
          description: |-
            NodeManagement defines the set of node management services turned on for the
            node pool.
          id: NodeManagement
          properties:
            autoRepair:
              description: |-
                A flag that specifies whether the node auto-repair is enabled for the node
                pool. If enabled, the nodes in this node pool will be monitored and, if
                they fail health checks too many times, an automatic repair action will be
                triggered.
              type: boolean
            autoUpgrade:
              description: |-
                A flag that specifies whether node auto-upgrade is enabled for the node
                pool. If enabled, node auto-upgrade helps keep the nodes in your node pool
                up to date with the latest release version of Kubernetes.
              type: boolean
            upgradeOptions:
              $ref: '#/schemas/AutoUpgradeOptions'
              description: Specifies the Auto Upgrade knobs for the node pool.
          type: object
        NodePool:
          description: |-
            NodePool contains the name and configuration for a cluster's node pool.
            Node pools are a set of nodes (i.e. VM's), with a common configuration and
            specification, under the control of the cluster master. They may have a set
            of Kubernetes labels applied to them, which may be used to reference them
            during pod scheduling. They may also be resized up or down, to accommodate
            the workload.
          id: NodePool
          properties:
            autoscaling:
              $ref: '#/schemas/NodePoolAutoscaling'
              description: |-
                Autoscaler configuration for this NodePool. Autoscaler is enabled
                only if a valid configuration is present.
            conditions:
              description: Which conditions caused the current node pool state.
              items:
                $ref: '#/schemas/StatusCondition'
              type: array
            config:
              $ref: '#/schemas/NodeConfig'
              description: The node configuration of the pool.
            initialNodeCount:
              description: |-
                The initial node count for the pool. You must ensure that your
                Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
                is sufficient for this number of instances. You must also have available
                firewall and routes quota.
              format: int32
              type: integer
            instanceGroupUrls:
              description: |-
                [Output only] The resource URLs of the [managed instance
                groups](/compute/docs/instance-groups/creating-groups-of-managed-instances)
                associated with this node pool.
              items:
                type: string
              type: array
            management:
              $ref: '#/schemas/NodeManagement'
              description: NodeManagement configuration for this NodePool.
            maxPodsConstraint:
              $ref: '#/schemas/MaxPodsConstraint'
              description: |-
                The constraint on the maximum number of pods that can be run
                simultaneously on a node in the node pool.
            name:
              description: The name of the node pool.
              type: string
            podIpv4CidrSize:
              description: '[Output only] The pod CIDR block size per node in this
                node pool.'
              format: int32
              type: integer
            selfLink:
              description: '[Output only] Server-defined URL for the resource.'
              type: string
            status:
              description: '[Output only] The status of the nodes in this pool instance.'
              enum:
              - STATUS_UNSPECIFIED
              - PROVISIONING
              - RUNNING
              - RUNNING_WITH_ERROR
              - RECONCILING
              - STOPPING
              - ERROR
              enumDescriptions:
              - Not set.
              - The PROVISIONING state indicates the node pool is being created.
              - |-
                The RUNNING state indicates the node pool has been created
                and is fully usable.
              - |-
                The RUNNING_WITH_ERROR state indicates the node pool has been created
                and is partially usable. Some error state has occurred and some
                functionality may be impaired. Customer may need to reissue a request
                or trigger a new update.
              - |-
                The RECONCILING state indicates that some work is actively being done on
                the node pool, such as upgrading node software. Details can
                be found in the `statusMessage` field.
              - The STOPPING state indicates the node pool is being deleted.
              - |-
                The ERROR state indicates the node pool may be unusable. Details
                can be found in the `statusMessage` field.
              type: string
            statusMessage:
              description: |-
                [Output only] Additional information about the current status of this
                node pool instance, if available.
              type: string
            version:
              description: The version of the Kubernetes of this node.
              type: string
          type: object
        NodePoolAutoscaling:
          description: |-
            NodePoolAutoscaling contains information required by cluster autoscaler to
            adjust the size of the node pool to the current cluster usage.
          id: NodePoolAutoscaling
          properties:
            enabled:
              description: Is autoscaling enabled for this node pool.
              type: boolean
            maxNodeCount:
              description: |-
                Maximum number of nodes in the NodePool. Must be >= min_node_count. There
                has to enough quota to scale up the cluster.
              format: int32
              type: integer
            minNodeCount:
              description: |-
                Minimum number of nodes in the NodePool. Must be >= 1 and <=
                max_node_count.
              format: int32
              type: integer
          type: object
        NodeTaint:
          description: |-
            Kubernetes taint is comprised of three fields: key, value, and effect. Effect
            can only be one of three types:  NoSchedule, PreferNoSchedule or NoExecute.

            For more information, including usage and the valid values, see:
            https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
          id: NodeTaint
          properties:
            effect:
              description: Effect for taint.
              enum:
              - EFFECT_UNSPECIFIED
              - NO_SCHEDULE
              - PREFER_NO_SCHEDULE
              - NO_EXECUTE
              enumDescriptions:
              - Not set
              - NoSchedule
              - PreferNoSchedule
              - NoExecute
              type: string
            key:
              description: Key for taint.
              type: string
            value:
              description: Value for taint.
              type: string
          type: object
        PrivateClusterConfig:
          description: Configuration options for private clusters.
          id: PrivateClusterConfig
          properties:
            enablePrivateEndpoint:
              description: Whether the master's internal IP address is used as the
                cluster endpoint.
              type: boolean
            enablePrivateNodes:
              description: |-
                Whether nodes have internal IP addresses only. If enabled, all nodes are
                given only RFC 1918 private addresses and communicate with the master via
                private networking.
              type: boolean
            masterIpv4CidrBlock:
              description: |-
                The IP range in CIDR notation to use for the hosted master network. This
                range will be used for assigning internal IP addresses to the master or
                set of masters, as well as the ILB VIP. This range must not overlap with
                any other ranges in use within the cluster's network.
              type: string
            privateEndpoint:
              description: Output only. The internal IP address of this cluster's
                master endpoint.
              type: string
            publicEndpoint:
              description: Output only. The external IP address of this cluster's
                master endpoint.
              type: string
          type: object
        ResourceUsageExportConfig:
          description: Configuration for exporting cluster resource usages.
          id: ResourceUsageExportConfig
          properties:
            bigqueryDestination:
              $ref: '#/schemas/BigQueryDestination'
              description: Configuration to use BigQuery as usage export destination.
            consumptionMeteringConfig:
              $ref: '#/schemas/ConsumptionMeteringConfig'
              description: Configuration to enable resource consumption metering.
            enableNetworkEgressMetering:
              description: |-
                Whether to enable network egress metering for this cluster. If enabled, a
                daemonset will be created in the cluster to meter network egress traffic.
              type: boolean
          type: object
        StatusCondition:
          description: |-
            StatusCondition describes why a cluster or a node pool has a certain status
            (e.g., ERROR or DEGRADED).
          id: StatusCondition
          properties:
            code:
              description: Machine-friendly representation of the condition
              enum:
              - UNKNOWN
              - GCE_STOCKOUT
              - GKE_SERVICE_ACCOUNT_DELETED
              - GCE_QUOTA_EXCEEDED
              - SET_BY_OPERATOR
              enumDescriptions:
              - UNKNOWN indicates a generic condition.
              - GCE_STOCKOUT indicates a Google Compute Engine stockout.
              - |-
                GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot
                service account.
              - Google Compute Engine quota was exceeded.
              - |-
                Cluster state was manually changed by an SRE due to a system logic error.
                More codes TBA
              type: string
            message:
              description: Human-friendly representation of the condition
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/container-v1/types/projects.zones.clusters?alt=json
  title: Kubernetes Engine API
