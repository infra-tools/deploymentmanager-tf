type_info:
  documentationLink: https://cloud.google.com/appengine/docs/admin-api/
  kind: deploymentmanager#typeInfo
  name: apps.services.versions
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          apiConfig:
            $ref: '#/schemas/ApiConfigHandler'
            description: Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only
              returned in GET requests if view=FULL is set.
          appsId:
            description: 'Part of `parent`. Name of the parent resource to create
              this version under. Example: apps/myapp/services/default.'
            location: path
            required: true
            type: string
          automaticScaling:
            $ref: '#/schemas/AutomaticScaling'
            description: Automatic scaling is based on request rate, response latencies,
              and other application metrics.
          basicScaling:
            $ref: '#/schemas/BasicScaling'
            description: A service with basic scaling will create an instance when
              the application receives a request. The instance will be turned down
              when the app becomes idle. Basic scaling is ideal for work that is intermittent
              or driven by user activity.
          betaSettings:
            additionalProperties:
              type: string
            description: Metadata settings that are supplied to this version to enable
              beta runtime features.
            type: object
          defaultExpiration:
            description: Duration that static files should be cached by web proxies
              and browsers. Only applicable if the corresponding StaticFilesHandler
              (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler)
              does not specify its own expiration time.Only returned in GET requests
              if view=FULL is set.
            format: google-duration
            type: string
          deployment:
            $ref: '#/schemas/Deployment'
            description: Code and application artifacts that make up this version.Only
              returned in GET requests if view=FULL is set.
          endpointsApiService:
            $ref: '#/schemas/EndpointsApiService'
            description: Cloud Endpoints configuration.If endpoints_api_service is
              set, the Cloud Endpoints Extensible Service Proxy will be provided to
              serve the API implemented by the app.
          entrypoint:
            $ref: '#/schemas/Entrypoint'
            description: The entrypoint for the application.
          env:
            description: App Engine execution environment for this version.Defaults
              to standard.
            type: string
          envVariables:
            additionalProperties:
              type: string
            description: Environment variables available to the application.Only returned
              in GET requests if view=FULL is set.
            type: object
          errorHandlers:
            description: Custom static error pages. Limited to 10KB per page.Only
              returned in GET requests if view=FULL is set.
            items:
              $ref: '#/schemas/ErrorHandler'
            type: array
          handlers:
            description: An ordered list of URL-matching patterns that should be applied
              to incoming requests. The first matching URL handles the request and
              other request handlers are not attempted.Only returned in GET requests
              if view=FULL is set.
            items:
              $ref: '#/schemas/UrlMap'
            type: array
          healthCheck:
            $ref: '#/schemas/HealthCheck'
            description: Configures health checking for instances. Unhealthy instances
              are stopped and replaced with new instances. Only applicable in the
              App Engine flexible environment.Only returned in GET requests if view=FULL
              is set.
          id:
            description: 'Relative name of the version within the service. Example:
              v1. Version names can contain only lowercase letters, numbers, or hyphens.
              Reserved names: "default", "latest", and any name with the prefix "ah-".'
            type: string
          inboundServices:
            description: Before an application can receive email or XMPP messages,
              the application must be configured to enable the service.
            enumDescriptions:
            - Not specified.
            - Allows an application to receive mail.
            - Allows an application to receive email-bound notifications.
            - Allows an application to receive error stanzas.
            - Allows an application to receive instant messages.
            - Allows an application to receive user subscription POSTs.
            - Allows an application to receive a user's chat presence.
            - Registers an application for notifications when a client connects or
              disconnects from a channel.
            - Enables warmup requests.
            items:
              enum:
              - INBOUND_SERVICE_UNSPECIFIED
              - INBOUND_SERVICE_MAIL
              - INBOUND_SERVICE_MAIL_BOUNCE
              - INBOUND_SERVICE_XMPP_ERROR
              - INBOUND_SERVICE_XMPP_MESSAGE
              - INBOUND_SERVICE_XMPP_SUBSCRIBE
              - INBOUND_SERVICE_XMPP_PRESENCE
              - INBOUND_SERVICE_CHANNEL_PRESENCE
              - INBOUND_SERVICE_WARMUP
              type: string
            type: array
          instanceClass:
            description: |-
              Instance class that is used to run this version. Valid values are:
              AutomaticScaling: F1, F2, F4, F4_1G
              ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
            type: string
          libraries:
            description: Configuration for third-party Python runtime libraries that
              are required by the application.Only returned in GET requests if view=FULL
              is set.
            items:
              $ref: '#/schemas/Library'
            type: array
          livenessCheck:
            $ref: '#/schemas/LivenessCheck'
            description: Configures liveness health checking for instances. Unhealthy
              instances are stopped and replaced with new instancesOnly returned in
              GET requests if view=FULL is set.
          manualScaling:
            $ref: '#/schemas/ManualScaling'
            description: A service with manual scaling runs continuously, allowing
              you to perform complex initialization and rely on the state of its memory
              over time.
          network:
            $ref: '#/schemas/Network'
            description: Extra network settings. Only applicable in the App Engine
              flexible environment.
          nobuildFilesRegex:
            description: Files that match this pattern will not be built into this
              version. Only applicable for Go runtimes.Only returned in GET requests
              if view=FULL is set.
            type: string
          readinessCheck:
            $ref: '#/schemas/ReadinessCheck'
            description: Configures readiness health checking for instances. Unhealthy
              instances are not put into the backend traffic rotation.Only returned
              in GET requests if view=FULL is set.
          resources:
            $ref: '#/schemas/Resources'
            description: Machine resources for this version. Only applicable in the
              App Engine flexible environment.
          runtime:
            description: 'Desired runtime. Example: python27.'
            type: string
          runtimeApiVersion:
            description: The version of the API in the given runtime environment.
              Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard/<language>/config/appref
            type: string
          runtimeChannel:
            description: The channel of the runtime to use. Only available for some
              runtimes. Defaults to the default channel.
            type: string
          runtimeMainExecutablePath:
            description: The path or name of the app's main executable.
            type: string
          servicesId:
            description: Part of `parent`. See documentation of `appsId`.
            location: path
            required: true
            type: string
          servingStatus:
            description: Current serving status of this version. Only the versions
              with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED
              is an invalid value. Defaults to SERVING.
            enum:
            - SERVING_STATUS_UNSPECIFIED
            - SERVING
            - STOPPED
            enumDescriptions:
            - Not specified.
            - Currently serving. Instances are created according to the scaling settings
              of the version.
            - Disabled. No instances will be created and the scaling settings are
              ignored until the state of the version changes to SERVING.
            type: string
          threadsafe:
            description: Whether multiple requests can be dispatched to this version
              at once.
            type: boolean
          vm:
            description: Whether to deploy this version in a container on a virtual
              machine.
            type: boolean
          vpcAccessConnector:
            $ref: '#/schemas/VpcAccessConnector'
            description: Enables VPC connectivity for standard apps.
          zones:
            description: The Google Compute Engine zones that are supported by this
              version in the App Engine flexible environment. Deprecated.
            items:
              type: string
            type: array
        type: object
      methodName: create
      schemas:
        ApiConfigHandler:
          description: Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/)
            configuration for API handlers.
          id: ApiConfigHandler
          properties:
            authFailAction:
              description: Action to take when users access resources that require
                authentication. Defaults to redirect.
              enum:
              - AUTH_FAIL_ACTION_UNSPECIFIED
              - AUTH_FAIL_ACTION_REDIRECT
              - AUTH_FAIL_ACTION_UNAUTHORIZED
              enumDescriptions:
              - Not specified. AUTH_FAIL_ACTION_REDIRECT is assumed.
              - Redirects user to "accounts.google.com". The user is redirected back
                to the application URL after signing in or creating an account.
              - Rejects request with a 401 HTTP status code and an error message.
              type: string
            login:
              description: Level of login required to access this resource. Defaults
                to optional.
              enum:
              - LOGIN_UNSPECIFIED
              - LOGIN_OPTIONAL
              - LOGIN_ADMIN
              - LOGIN_REQUIRED
              enumDescriptions:
              - Not specified. LOGIN_OPTIONAL is assumed.
              - Does not require that the user is signed in.
              - If the user is not signed in, the auth_fail_action is taken. In addition,
                if the user is not an administrator for the application, they are
                given an error message regardless of auth_fail_action. If the user
                is an administrator, the handler proceeds.
              - If the user has signed in, the handler proceeds normally. Otherwise,
                the auth_fail_action is taken.
              type: string
            script:
              description: Path to the script from the application root directory.
              type: string
            securityLevel:
              description: Security (HTTPS) enforcement for this URL.
              enum:
              - SECURE_UNSPECIFIED
              - SECURE_DEFAULT
              - SECURE_NEVER
              - SECURE_OPTIONAL
              - SECURE_ALWAYS
              enumDescriptions:
              - Not specified.
              - Both HTTP and HTTPS requests with URLs that match the handler succeed
                without redirects. The application can examine the request to determine
                which protocol was used, and respond accordingly.
              - Requests for a URL that match this handler that use HTTPS are automatically
                redirected to the HTTP equivalent URL.
              - Both HTTP and HTTPS requests with URLs that match the handler succeed
                without redirects. The application can examine the request to determine
                which protocol was used and respond accordingly.
              - Requests for a URL that match this handler that do not use HTTPS are
                automatically redirected to the HTTPS URL with the same path. Query
                parameters are reserved for the redirect.
              type: string
            url:
              description: URL to serve the endpoint at.
              type: string
          type: object
        ApiEndpointHandler:
          description: Uses Google Cloud Endpoints to handle requests.
          id: ApiEndpointHandler
          properties:
            scriptPath:
              description: Path to the script from the application root directory.
              type: string
          type: object
        AutomaticScaling:
          description: Automatic scaling is based on request rate, response latencies,
            and other application metrics.
          id: AutomaticScaling
          properties:
            coolDownPeriod:
              description: The time period that the Autoscaler (https://cloud.google.com/compute/docs/autoscaler/)
                should wait before it starts collecting information from a new instance.
                This prevents the autoscaler from collecting information when the
                instance is initializing, during which the collected usage would not
                be reliable. Only applicable in the App Engine flexible environment.
              format: google-duration
              type: string
            cpuUtilization:
              $ref: '#/schemas/CpuUtilization'
              description: Target scaling by CPU usage.
            diskUtilization:
              $ref: '#/schemas/DiskUtilization'
              description: Target scaling by disk usage.
            maxConcurrentRequests:
              description: Number of concurrent requests an automatic scaling instance
                can accept before the scheduler spawns a new instance.Defaults to
                a runtime-specific value.
              format: int32
              type: integer
            maxIdleInstances:
              description: Maximum number of idle instances that should be maintained
                for this version.
              format: int32
              type: integer
            maxPendingLatency:
              description: Maximum amount of time that a request should wait in the
                pending queue before starting a new instance to handle it.
              format: google-duration
              type: string
            maxTotalInstances:
              description: Maximum number of instances that should be started to handle
                requests for this version.
              format: int32
              type: integer
            minIdleInstances:
              description: Minimum number of idle instances that should be maintained
                for this version. Only applicable for the default version of a service.
              format: int32
              type: integer
            minPendingLatency:
              description: Minimum amount of time a request should wait in the pending
                queue before starting a new instance to handle it.
              format: google-duration
              type: string
            minTotalInstances:
              description: Minimum number of running instances that should be maintained
                for this version.
              format: int32
              type: integer
            networkUtilization:
              $ref: '#/schemas/NetworkUtilization'
              description: Target scaling by network usage.
            requestUtilization:
              $ref: '#/schemas/RequestUtilization'
              description: Target scaling by request utilization.
            standardSchedulerSettings:
              $ref: '#/schemas/StandardSchedulerSettings'
              description: Scheduler settings for standard environment.
          type: object
        BasicScaling:
          description: A service with basic scaling will create an instance when the
            application receives a request. The instance will be turned down when
            the app becomes idle. Basic scaling is ideal for work that is intermittent
            or driven by user activity.
          id: BasicScaling
          properties:
            idleTimeout:
              description: Duration of time after the last request that an instance
                must wait before the instance is shut down.
              format: google-duration
              type: string
            maxInstances:
              description: Maximum number of instances to create for this version.
              format: int32
              type: integer
          type: object
        CloudBuildOptions:
          description: Options for the build operations performed as a part of the
            version deployment. Only applicable for App Engine flexible environment
            when creating a version using source code directly.
          id: CloudBuildOptions
          properties:
            appYamlPath:
              description: Path to the yaml file used in deployment, used to determine
                runtime configuration details.Required for flexible environment builds.See
                https://cloud.google.com/appengine/docs/standard/python/config/appref
                for more details.
              type: string
            cloudBuildTimeout:
              description: The Cloud Build timeout used as part of any dependent builds
                performed by version creation. Defaults to 10 minutes.
              format: google-duration
              type: string
          type: object
        ContainerInfo:
          description: Docker image that is used to create a container and start a
            VM instance for the version that you deploy. Only applicable for instances
            running in the App Engine flexible environment.
          id: ContainerInfo
          properties:
            image:
              description: 'URI to the hosted container image in Google Container
                Registry. The URI must be fully qualified and include a tag or digest.
                Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"'
              type: string
          type: object
        CpuUtilization:
          description: Target scaling by CPU usage.
          id: CpuUtilization
          properties:
            aggregationWindowLength:
              description: Period of time over which CPU utilization is calculated.
              format: google-duration
              type: string
            targetUtilization:
              description: Target CPU utilization ratio to maintain when scaling.
                Must be between 0 and 1.
              format: double
              type: number
          type: object
        Deployment:
          description: Code and application artifacts used to deploy a version to
            App Engine.
          id: Deployment
          properties:
            cloudBuildOptions:
              $ref: '#/schemas/CloudBuildOptions'
              description: Options for any Google Cloud Build builds created as a
                part of this deployment.These options will only be used if a new build
                is created, such as when deploying to the App Engine flexible environment
                using files or zip.
            container:
              $ref: '#/schemas/ContainerInfo'
              description: The Docker image for the container that runs the version.
                Only applicable for instances running in the App Engine flexible environment.
            files:
              additionalProperties:
                $ref: '#/schemas/FileInfo'
              description: Manifest of the files stored in Google Cloud Storage that
                are included as part of this version. All files must be readable using
                the credentials supplied with this call.
              type: object
            zip:
              $ref: '#/schemas/ZipInfo'
              description: The zip file for this deployment, if this is a zip deployment.
          type: object
        DiskUtilization:
          description: Target scaling by disk usage. Only applicable in the App Engine
            flexible environment.
          id: DiskUtilization
          properties:
            targetReadBytesPerSecond:
              description: Target bytes read per second.
              format: int32
              type: integer
            targetReadOpsPerSecond:
              description: Target ops read per seconds.
              format: int32
              type: integer
            targetWriteBytesPerSecond:
              description: Target bytes written per second.
              format: int32
              type: integer
            targetWriteOpsPerSecond:
              description: Target ops written per second.
              format: int32
              type: integer
          type: object
        EndpointsApiService:
          description: Cloud Endpoints (https://cloud.google.com/endpoints) configuration.
            The Endpoints API Service provides tooling for serving Open API and gRPC
            endpoints via an NGINX proxy. Only valid for App Engine Flexible environment
            deployments.The fields here refer to the name and configuration ID of
            a "service" resource in the Service Management API (https://cloud.google.com/service-management/overview).
          id: EndpointsApiService
          properties:
            configId:
              description: Endpoints service configuration ID as specified by the
                Service Management API. For example "2016-09-19r1".By default, the
                rollout strategy for Endpoints is RolloutStrategy.FIXED. This means
                that Endpoints starts up with a particular configuration ID. When
                a new configuration is rolled out, Endpoints must be given the new
                configuration ID. The config_id field is used to give the configuration
                ID and is required in this case.Endpoints also has a rollout strategy
                called RolloutStrategy.MANAGED. When using this, Endpoints fetches
                the latest configuration and does not need the configuration ID. In
                this case, config_id must be omitted.
              type: string
            disableTraceSampling:
              description: Enable or disable trace sampling. By default, this is set
                to false for enabled.
              type: boolean
            name:
              description: Endpoints service name which is the name of the "service"
                resource in the Service Management API. For example "myapi.endpoints.myproject.cloud.goog"
              type: string
            rolloutStrategy:
              description: Endpoints rollout strategy. If FIXED, config_id must be
                specified. If MANAGED, config_id must be omitted.
              enum:
              - UNSPECIFIED_ROLLOUT_STRATEGY
              - FIXED
              - MANAGED
              enumDescriptions:
              - Not specified. Defaults to FIXED.
              - Endpoints service configuration ID will be fixed to the configuration
                ID specified by config_id.
              - Endpoints service configuration ID will be updated with each rollout.
              type: string
          type: object
        Entrypoint:
          description: The entrypoint for the application.
          id: Entrypoint
          properties:
            shell:
              description: The format should be a shell command that can be fed to
                bash -c.
              type: string
          type: object
        ErrorHandler:
          description: Custom static error page to be served when an error occurs.
          id: ErrorHandler
          properties:
            errorCode:
              description: Error condition this handler applies to.
              enum:
              - ERROR_CODE_UNSPECIFIED
              - ERROR_CODE_DEFAULT
              - ERROR_CODE_OVER_QUOTA
              - ERROR_CODE_DOS_API_DENIAL
              - ERROR_CODE_TIMEOUT
              enumDescriptions:
              - Not specified. ERROR_CODE_DEFAULT is assumed.
              - All other error types.
              - Application has exceeded a resource quota.
              - Client blocked by the application's Denial of Service protection configuration.
              - Deadline reached before the application responds.
              type: string
            mimeType:
              description: MIME type of file. Defaults to text/html.
              type: string
            staticFile:
              description: Static file content to be served for this error.
              type: string
          type: object
        FileInfo:
          description: Single source file that is part of the version to be deployed.
            Each source file that is deployed must be specified separately.
          id: FileInfo
          properties:
            mimeType:
              description: The MIME type of the file.Defaults to the value from Google
                Cloud Storage.
              type: string
            sha1Sum:
              description: The SHA1 hash of the file, in hex.
              type: string
            sourceUrl:
              description: URL source to use to fetch this file. Must be a URL to
                a resource in Google Cloud Storage in the form 'http(s)://storage.googleapis.com/<bucket>/<object>'.
              type: string
          type: object
        HealthCheck:
          description: Health checking configuration for VM instances. Unhealthy instances
            are killed and replaced with new instances. Only applicable for instances
            in App Engine flexible environment.
          id: HealthCheck
          properties:
            checkInterval:
              description: Interval between health checks.
              format: google-duration
              type: string
            disableHealthCheck:
              description: Whether to explicitly disable health checks for this instance.
              type: boolean
            healthyThreshold:
              description: Number of consecutive successful health checks required
                before receiving traffic.
              format: uint32
              type: integer
            host:
              description: 'Host header to send when performing an HTTP health check.
                Example: "myapp.appspot.com"'
              type: string
            restartThreshold:
              description: Number of consecutive failed health checks required before
                an instance is restarted.
              format: uint32
              type: integer
            timeout:
              description: Time before the health check is considered failed.
              format: google-duration
              type: string
            unhealthyThreshold:
              description: Number of consecutive failed health checks required before
                removing traffic.
              format: uint32
              type: integer
          type: object
        Library:
          description: Third-party Python runtime library that is required by the
            application.
          id: Library
          properties:
            name:
              description: 'Name of the library. Example: "django".'
              type: string
            version:
              description: Version of the library to select, or "latest".
              type: string
          type: object
        LivenessCheck:
          description: Health checking configuration for VM instances. Unhealthy instances
            are killed and replaced with new instances.
          id: LivenessCheck
          properties:
            checkInterval:
              description: Interval between health checks.
              format: google-duration
              type: string
            failureThreshold:
              description: Number of consecutive failed checks required before considering
                the VM unhealthy.
              format: uint32
              type: integer
            host:
              description: 'Host header to send when performing a HTTP Liveness check.
                Example: "myapp.appspot.com"'
              type: string
            initialDelay:
              description: The initial delay before starting to execute the checks.
              format: google-duration
              type: string
            path:
              description: The request path.
              type: string
            successThreshold:
              description: Number of consecutive successful checks required before
                considering the VM healthy.
              format: uint32
              type: integer
            timeout:
              description: Time before the check is considered failed.
              format: google-duration
              type: string
          type: object
        ManualScaling:
          description: A service with manual scaling runs continuously, allowing you
            to perform complex initialization and rely on the state of its memory
            over time.
          id: ManualScaling
          properties:
            instances:
              description: Number of instances to assign to the service at the start.
                This number can later be altered by using the Modules API (https://cloud.google.com/appengine/docs/python/modules/functions)
                set_num_instances() function.
              format: int32
              type: integer
          type: object
        Network:
          description: Extra network settings. Only applicable in the App Engine flexible
            environment.
          id: Network
          properties:
            forwardedPorts:
              description: List of ports, or port pairs, to forward from the virtual
                machine to the application container. Only applicable in the App Engine
                flexible environment.
              items:
                type: string
              type: array
            instanceTag:
              description: Tag to apply to the instance during creation. Only applicable
                in the App Engine flexible environment.
              type: string
            name:
              description: Google Compute Engine network where the virtual machines
                are created. Specify the short name, not the resource path.Defaults
                to default.
              type: string
            sessionAffinity:
              description: Enable session affinity. Only applicable in the App Engine
                flexible environment.
              type: boolean
            subnetworkName:
              description: |-
                Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.If a subnetwork name is specified, a network name will also be required unless it is for the default network.
                If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
                If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetwork_name) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
                If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetwork_name must be specified and the IP address is created from the IPCidrRange of the subnetwork.If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
              type: string
          type: object
        NetworkUtilization:
          description: Target scaling by network usage. Only applicable in the App
            Engine flexible environment.
          id: NetworkUtilization
          properties:
            targetReceivedBytesPerSecond:
              description: Target bytes received per second.
              format: int32
              type: integer
            targetReceivedPacketsPerSecond:
              description: Target packets received per second.
              format: int32
              type: integer
            targetSentBytesPerSecond:
              description: Target bytes sent per second.
              format: int32
              type: integer
            targetSentPacketsPerSecond:
              description: Target packets sent per second.
              format: int32
              type: integer
          type: object
        ReadinessCheck:
          description: Readiness checking configuration for VM instances. Unhealthy
            instances are removed from traffic rotation.
          id: ReadinessCheck
          properties:
            appStartTimeout:
              description: A maximum time limit on application initialization, measured
                from moment the application successfully replies to a healthcheck
                until it is ready to serve traffic.
              format: google-duration
              type: string
            checkInterval:
              description: Interval between health checks.
              format: google-duration
              type: string
            failureThreshold:
              description: Number of consecutive failed checks required before removing
                traffic.
              format: uint32
              type: integer
            host:
              description: 'Host header to send when performing a HTTP Readiness check.
                Example: "myapp.appspot.com"'
              type: string
            path:
              description: The request path.
              type: string
            successThreshold:
              description: Number of consecutive successful checks required before
                receiving traffic.
              format: uint32
              type: integer
            timeout:
              description: Time before the check is considered failed.
              format: google-duration
              type: string
          type: object
        RequestUtilization:
          description: Target scaling by request utilization. Only applicable in the
            App Engine flexible environment.
          id: RequestUtilization
          properties:
            targetConcurrentRequests:
              description: Target number of concurrent requests.
              format: int32
              type: integer
            targetRequestCountPerSecond:
              description: Target requests per second.
              format: int32
              type: integer
          type: object
        Resources:
          description: Machine resources for a version.
          id: Resources
          properties:
            cpu:
              description: Number of CPU cores needed.
              format: double
              type: number
            diskGb:
              description: Disk size (GB) needed.
              format: double
              type: number
            memoryGb:
              description: Memory (GB) needed.
              format: double
              type: number
            volumes:
              description: User specified volumes.
              items:
                $ref: '#/schemas/Volume'
              type: array
          type: object
        ScriptHandler:
          description: Executes a script to handle the request that matches the URL
            pattern.
          id: ScriptHandler
          properties:
            scriptPath:
              description: Path to the script from the application root directory.
              type: string
          type: object
        StandardSchedulerSettings:
          description: Scheduler settings for standard environment.
          id: StandardSchedulerSettings
          properties:
            maxInstances:
              description: Maximum number of instances to run for this version. Set
                to zero to disable max_instances configuration.
              format: int32
              type: integer
            minInstances:
              description: Minimum number of instances to run for this version. Set
                to zero to disable min_instances configuration.
              format: int32
              type: integer
            targetCpuUtilization:
              description: Target CPU utilization ratio to maintain when scaling.
              format: double
              type: number
            targetThroughputUtilization:
              description: Target throughput utilization ratio to maintain when scaling
              format: double
              type: number
          type: object
        StaticFilesHandler:
          description: Files served directly to the user for a given URL, such as
            images, CSS stylesheets, or JavaScript source files. Static file handlers
            describe which files in the application directory are static files, and
            which URLs serve them.
          id: StaticFilesHandler
          properties:
            applicationReadable:
              description: Whether files should also be uploaded as code data. By
                default, files declared in static file handlers are uploaded as static
                data and are only served to end users; they cannot be read by the
                application. If enabled, uploads are charged against both your code
                and static data storage resource quotas.
              type: boolean
            expiration:
              description: Time a static file served by this handler should be cached
                by web proxies and browsers.
              format: google-duration
              type: string
            httpHeaders:
              additionalProperties:
                type: string
              description: HTTP headers to use for all responses from these URLs.
              type: object
            mimeType:
              description: MIME type used to serve all files served by this handler.Defaults
                to file-specific MIME types, which are derived from each file's filename
                extension.
              type: string
            path:
              description: Path to the static files matched by the URL pattern, from
                the application root directory. The path can refer to text matched
                in groupings in the URL pattern.
              type: string
            requireMatchingFile:
              description: Whether this handler should match the request if the file
                referenced by the handler does not exist.
              type: boolean
            uploadPathRegex:
              description: Regular expression that matches the file paths for all
                files that should be referenced by this handler.
              type: string
          type: object
        UrlMap:
          description: URL pattern and description of how the URL should be handled.
            App Engine can handle URLs by executing application code or by serving
            static files uploaded with the version, such as images, CSS, or JavaScript.
          id: UrlMap
          properties:
            apiEndpoint:
              $ref: '#/schemas/ApiEndpointHandler'
              description: Uses API Endpoints to handle requests.
            authFailAction:
              description: Action to take when users access resources that require
                authentication. Defaults to redirect.
              enum:
              - AUTH_FAIL_ACTION_UNSPECIFIED
              - AUTH_FAIL_ACTION_REDIRECT
              - AUTH_FAIL_ACTION_UNAUTHORIZED
              enumDescriptions:
              - Not specified. AUTH_FAIL_ACTION_REDIRECT is assumed.
              - Redirects user to "accounts.google.com". The user is redirected back
                to the application URL after signing in or creating an account.
              - Rejects request with a 401 HTTP status code and an error message.
              type: string
            login:
              description: Level of login required to access this resource. Not supported
                for Node.js in the App Engine standard environment.
              enum:
              - LOGIN_UNSPECIFIED
              - LOGIN_OPTIONAL
              - LOGIN_ADMIN
              - LOGIN_REQUIRED
              enumDescriptions:
              - Not specified. LOGIN_OPTIONAL is assumed.
              - Does not require that the user is signed in.
              - If the user is not signed in, the auth_fail_action is taken. In addition,
                if the user is not an administrator for the application, they are
                given an error message regardless of auth_fail_action. If the user
                is an administrator, the handler proceeds.
              - If the user has signed in, the handler proceeds normally. Otherwise,
                the auth_fail_action is taken.
              type: string
            redirectHttpResponseCode:
              description: 30x code to use when performing redirects for the secure
                field. Defaults to 302.
              enum:
              - REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED
              - REDIRECT_HTTP_RESPONSE_CODE_301
              - REDIRECT_HTTP_RESPONSE_CODE_302
              - REDIRECT_HTTP_RESPONSE_CODE_303
              - REDIRECT_HTTP_RESPONSE_CODE_307
              enumDescriptions:
              - Not specified. 302 is assumed.
              - 301 Moved Permanently code.
              - 302 Moved Temporarily code.
              - 303 See Other code.
              - 307 Temporary Redirect code.
              type: string
            script:
              $ref: '#/schemas/ScriptHandler'
              description: 'Executes a script to handle the requests that match this
                URL pattern. Only the auto value is supported for Node.js in the App
                Engine standard environment, for example "script": "auto".'
            securityLevel:
              description: Security (HTTPS) enforcement for this URL.
              enum:
              - SECURE_UNSPECIFIED
              - SECURE_DEFAULT
              - SECURE_NEVER
              - SECURE_OPTIONAL
              - SECURE_ALWAYS
              enumDescriptions:
              - Not specified.
              - Both HTTP and HTTPS requests with URLs that match the handler succeed
                without redirects. The application can examine the request to determine
                which protocol was used, and respond accordingly.
              - Requests for a URL that match this handler that use HTTPS are automatically
                redirected to the HTTP equivalent URL.
              - Both HTTP and HTTPS requests with URLs that match the handler succeed
                without redirects. The application can examine the request to determine
                which protocol was used and respond accordingly.
              - Requests for a URL that match this handler that do not use HTTPS are
                automatically redirected to the HTTPS URL with the same path. Query
                parameters are reserved for the redirect.
              type: string
            staticFiles:
              $ref: '#/schemas/StaticFilesHandler'
              description: Returns the contents of a file, such as an image, as the
                response.
            urlRegex:
              description: URL prefix. Uses regular expression syntax, which means
                regexp special characters must be escaped, but should not contain
                groupings. All URLs that begin with this prefix are handled by this
                handler, using the portion of the URL after the prefix as part of
                the file path.
              type: string
          type: object
        Version:
          description: A Version resource is a specific set of source code and configuration
            files that are deployed into a service.
          id: Version
          properties:
            apiConfig:
              $ref: '#/schemas/ApiConfigHandler'
              description: Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only
                returned in GET requests if view=FULL is set.
            automaticScaling:
              $ref: '#/schemas/AutomaticScaling'
              description: Automatic scaling is based on request rate, response latencies,
                and other application metrics.
            basicScaling:
              $ref: '#/schemas/BasicScaling'
              description: A service with basic scaling will create an instance when
                the application receives a request. The instance will be turned down
                when the app becomes idle. Basic scaling is ideal for work that is
                intermittent or driven by user activity.
            betaSettings:
              additionalProperties:
                type: string
              description: Metadata settings that are supplied to this version to
                enable beta runtime features.
              type: object
            defaultExpiration:
              description: Duration that static files should be cached by web proxies
                and browsers. Only applicable if the corresponding StaticFilesHandler
                (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler)
                does not specify its own expiration time.Only returned in GET requests
                if view=FULL is set.
              format: google-duration
              type: string
            deployment:
              $ref: '#/schemas/Deployment'
              description: Code and application artifacts that make up this version.Only
                returned in GET requests if view=FULL is set.
            endpointsApiService:
              $ref: '#/schemas/EndpointsApiService'
              description: Cloud Endpoints configuration.If endpoints_api_service
                is set, the Cloud Endpoints Extensible Service Proxy will be provided
                to serve the API implemented by the app.
            entrypoint:
              $ref: '#/schemas/Entrypoint'
              description: The entrypoint for the application.
            env:
              description: App Engine execution environment for this version.Defaults
                to standard.
              type: string
            envVariables:
              additionalProperties:
                type: string
              description: Environment variables available to the application.Only
                returned in GET requests if view=FULL is set.
              type: object
            errorHandlers:
              description: Custom static error pages. Limited to 10KB per page.Only
                returned in GET requests if view=FULL is set.
              items:
                $ref: '#/schemas/ErrorHandler'
              type: array
            handlers:
              description: An ordered list of URL-matching patterns that should be
                applied to incoming requests. The first matching URL handles the request
                and other request handlers are not attempted.Only returned in GET
                requests if view=FULL is set.
              items:
                $ref: '#/schemas/UrlMap'
              type: array
            healthCheck:
              $ref: '#/schemas/HealthCheck'
              description: Configures health checking for instances. Unhealthy instances
                are stopped and replaced with new instances. Only applicable in the
                App Engine flexible environment.Only returned in GET requests if view=FULL
                is set.
            id:
              description: 'Relative name of the version within the service. Example:
                v1. Version names can contain only lowercase letters, numbers, or
                hyphens. Reserved names: "default", "latest", and any name with the
                prefix "ah-".'
              type: string
            inboundServices:
              description: Before an application can receive email or XMPP messages,
                the application must be configured to enable the service.
              enumDescriptions:
              - Not specified.
              - Allows an application to receive mail.
              - Allows an application to receive email-bound notifications.
              - Allows an application to receive error stanzas.
              - Allows an application to receive instant messages.
              - Allows an application to receive user subscription POSTs.
              - Allows an application to receive a user's chat presence.
              - Registers an application for notifications when a client connects
                or disconnects from a channel.
              - Enables warmup requests.
              items:
                enum:
                - INBOUND_SERVICE_UNSPECIFIED
                - INBOUND_SERVICE_MAIL
                - INBOUND_SERVICE_MAIL_BOUNCE
                - INBOUND_SERVICE_XMPP_ERROR
                - INBOUND_SERVICE_XMPP_MESSAGE
                - INBOUND_SERVICE_XMPP_SUBSCRIBE
                - INBOUND_SERVICE_XMPP_PRESENCE
                - INBOUND_SERVICE_CHANNEL_PRESENCE
                - INBOUND_SERVICE_WARMUP
                type: string
              type: array
            instanceClass:
              description: |-
                Instance class that is used to run this version. Valid values are:
                AutomaticScaling: F1, F2, F4, F4_1G
                ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
              type: string
            libraries:
              description: Configuration for third-party Python runtime libraries
                that are required by the application.Only returned in GET requests
                if view=FULL is set.
              items:
                $ref: '#/schemas/Library'
              type: array
            livenessCheck:
              $ref: '#/schemas/LivenessCheck'
              description: Configures liveness health checking for instances. Unhealthy
                instances are stopped and replaced with new instancesOnly returned
                in GET requests if view=FULL is set.
            manualScaling:
              $ref: '#/schemas/ManualScaling'
              description: A service with manual scaling runs continuously, allowing
                you to perform complex initialization and rely on the state of its
                memory over time.
            network:
              $ref: '#/schemas/Network'
              description: Extra network settings. Only applicable in the App Engine
                flexible environment.
            nobuildFilesRegex:
              description: Files that match this pattern will not be built into this
                version. Only applicable for Go runtimes.Only returned in GET requests
                if view=FULL is set.
              type: string
            readinessCheck:
              $ref: '#/schemas/ReadinessCheck'
              description: Configures readiness health checking for instances. Unhealthy
                instances are not put into the backend traffic rotation.Only returned
                in GET requests if view=FULL is set.
            resources:
              $ref: '#/schemas/Resources'
              description: Machine resources for this version. Only applicable in
                the App Engine flexible environment.
            runtime:
              description: 'Desired runtime. Example: python27.'
              type: string
            runtimeApiVersion:
              description: The version of the API in the given runtime environment.
                Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard/<language>/config/appref
              type: string
            runtimeChannel:
              description: The channel of the runtime to use. Only available for some
                runtimes. Defaults to the default channel.
              type: string
            runtimeMainExecutablePath:
              description: The path or name of the app's main executable.
              type: string
            servingStatus:
              description: Current serving status of this version. Only the versions
                with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED
                is an invalid value. Defaults to SERVING.
              enum:
              - SERVING_STATUS_UNSPECIFIED
              - SERVING
              - STOPPED
              enumDescriptions:
              - Not specified.
              - Currently serving. Instances are created according to the scaling
                settings of the version.
              - Disabled. No instances will be created and the scaling settings are
                ignored until the state of the version changes to SERVING.
              type: string
            threadsafe:
              description: Whether multiple requests can be dispatched to this version
                at once.
              type: boolean
            vm:
              description: Whether to deploy this version in a container on a virtual
                machine.
              type: boolean
            vpcAccessConnector:
              $ref: '#/schemas/VpcAccessConnector'
              description: Enables VPC connectivity for standard apps.
            zones:
              description: The Google Compute Engine zones that are supported by this
                version in the App Engine flexible environment. Deprecated.
              items:
                type: string
              type: array
          type: object
        Volume:
          description: Volumes mounted within the app container. Only applicable in
            the App Engine flexible environment.
          id: Volume
          properties:
            name:
              description: Unique name for the volume.
              type: string
            sizeGb:
              description: Volume size in gigabytes.
              format: double
              type: number
            volumeType:
              description: Underlying volume type, e.g. 'tmpfs'.
              type: string
          type: object
        VpcAccessConnector:
          description: VPC access connector specification.
          id: VpcAccessConnector
          properties:
            name:
              description: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
              type: string
          type: object
        ZipInfo:
          description: The zip file information for a zip deployment.
          id: ZipInfo
          properties:
            filesCount:
              description: An estimate of the number of files in a zip for a zip deployment.
                If set, must be greater than or equal to the actual number of files.
                Used for optimizing performance; if not provided, deployment may be
                slow.
              format: int32
              type: integer
            sourceUrl:
              description: URL of the zip file to deploy from. Must be a URL to a
                resource in Google Cloud Storage in the form 'http(s)://storage.googleapis.com/<bucket>/<object>'.
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Version'
      methodName: get
      schemas:
        ApiConfigHandler:
          description: Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/)
            configuration for API handlers.
          id: ApiConfigHandler
          properties:
            authFailAction:
              description: Action to take when users access resources that require
                authentication. Defaults to redirect.
              enum:
              - AUTH_FAIL_ACTION_UNSPECIFIED
              - AUTH_FAIL_ACTION_REDIRECT
              - AUTH_FAIL_ACTION_UNAUTHORIZED
              enumDescriptions:
              - Not specified. AUTH_FAIL_ACTION_REDIRECT is assumed.
              - Redirects user to "accounts.google.com". The user is redirected back
                to the application URL after signing in or creating an account.
              - Rejects request with a 401 HTTP status code and an error message.
              type: string
            login:
              description: Level of login required to access this resource. Defaults
                to optional.
              enum:
              - LOGIN_UNSPECIFIED
              - LOGIN_OPTIONAL
              - LOGIN_ADMIN
              - LOGIN_REQUIRED
              enumDescriptions:
              - Not specified. LOGIN_OPTIONAL is assumed.
              - Does not require that the user is signed in.
              - If the user is not signed in, the auth_fail_action is taken. In addition,
                if the user is not an administrator for the application, they are
                given an error message regardless of auth_fail_action. If the user
                is an administrator, the handler proceeds.
              - If the user has signed in, the handler proceeds normally. Otherwise,
                the auth_fail_action is taken.
              type: string
            script:
              description: Path to the script from the application root directory.
              type: string
            securityLevel:
              description: Security (HTTPS) enforcement for this URL.
              enum:
              - SECURE_UNSPECIFIED
              - SECURE_DEFAULT
              - SECURE_NEVER
              - SECURE_OPTIONAL
              - SECURE_ALWAYS
              enumDescriptions:
              - Not specified.
              - Both HTTP and HTTPS requests with URLs that match the handler succeed
                without redirects. The application can examine the request to determine
                which protocol was used, and respond accordingly.
              - Requests for a URL that match this handler that use HTTPS are automatically
                redirected to the HTTP equivalent URL.
              - Both HTTP and HTTPS requests with URLs that match the handler succeed
                without redirects. The application can examine the request to determine
                which protocol was used and respond accordingly.
              - Requests for a URL that match this handler that do not use HTTPS are
                automatically redirected to the HTTPS URL with the same path. Query
                parameters are reserved for the redirect.
              type: string
            url:
              description: URL to serve the endpoint at.
              type: string
          type: object
        ApiEndpointHandler:
          description: Uses Google Cloud Endpoints to handle requests.
          id: ApiEndpointHandler
          properties:
            scriptPath:
              description: Path to the script from the application root directory.
              type: string
          type: object
        AutomaticScaling:
          description: Automatic scaling is based on request rate, response latencies,
            and other application metrics.
          id: AutomaticScaling
          properties:
            coolDownPeriod:
              description: The time period that the Autoscaler (https://cloud.google.com/compute/docs/autoscaler/)
                should wait before it starts collecting information from a new instance.
                This prevents the autoscaler from collecting information when the
                instance is initializing, during which the collected usage would not
                be reliable. Only applicable in the App Engine flexible environment.
              format: google-duration
              type: string
            cpuUtilization:
              $ref: '#/schemas/CpuUtilization'
              description: Target scaling by CPU usage.
            diskUtilization:
              $ref: '#/schemas/DiskUtilization'
              description: Target scaling by disk usage.
            maxConcurrentRequests:
              description: Number of concurrent requests an automatic scaling instance
                can accept before the scheduler spawns a new instance.Defaults to
                a runtime-specific value.
              format: int32
              type: integer
            maxIdleInstances:
              description: Maximum number of idle instances that should be maintained
                for this version.
              format: int32
              type: integer
            maxPendingLatency:
              description: Maximum amount of time that a request should wait in the
                pending queue before starting a new instance to handle it.
              format: google-duration
              type: string
            maxTotalInstances:
              description: Maximum number of instances that should be started to handle
                requests for this version.
              format: int32
              type: integer
            minIdleInstances:
              description: Minimum number of idle instances that should be maintained
                for this version. Only applicable for the default version of a service.
              format: int32
              type: integer
            minPendingLatency:
              description: Minimum amount of time a request should wait in the pending
                queue before starting a new instance to handle it.
              format: google-duration
              type: string
            minTotalInstances:
              description: Minimum number of running instances that should be maintained
                for this version.
              format: int32
              type: integer
            networkUtilization:
              $ref: '#/schemas/NetworkUtilization'
              description: Target scaling by network usage.
            requestUtilization:
              $ref: '#/schemas/RequestUtilization'
              description: Target scaling by request utilization.
            standardSchedulerSettings:
              $ref: '#/schemas/StandardSchedulerSettings'
              description: Scheduler settings for standard environment.
          type: object
        BasicScaling:
          description: A service with basic scaling will create an instance when the
            application receives a request. The instance will be turned down when
            the app becomes idle. Basic scaling is ideal for work that is intermittent
            or driven by user activity.
          id: BasicScaling
          properties:
            idleTimeout:
              description: Duration of time after the last request that an instance
                must wait before the instance is shut down.
              format: google-duration
              type: string
            maxInstances:
              description: Maximum number of instances to create for this version.
              format: int32
              type: integer
          type: object
        CloudBuildOptions:
          description: Options for the build operations performed as a part of the
            version deployment. Only applicable for App Engine flexible environment
            when creating a version using source code directly.
          id: CloudBuildOptions
          properties:
            appYamlPath:
              description: Path to the yaml file used in deployment, used to determine
                runtime configuration details.Required for flexible environment builds.See
                https://cloud.google.com/appengine/docs/standard/python/config/appref
                for more details.
              type: string
            cloudBuildTimeout:
              description: The Cloud Build timeout used as part of any dependent builds
                performed by version creation. Defaults to 10 minutes.
              format: google-duration
              type: string
          type: object
        ContainerInfo:
          description: Docker image that is used to create a container and start a
            VM instance for the version that you deploy. Only applicable for instances
            running in the App Engine flexible environment.
          id: ContainerInfo
          properties:
            image:
              description: 'URI to the hosted container image in Google Container
                Registry. The URI must be fully qualified and include a tag or digest.
                Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"'
              type: string
          type: object
        CpuUtilization:
          description: Target scaling by CPU usage.
          id: CpuUtilization
          properties:
            aggregationWindowLength:
              description: Period of time over which CPU utilization is calculated.
              format: google-duration
              type: string
            targetUtilization:
              description: Target CPU utilization ratio to maintain when scaling.
                Must be between 0 and 1.
              format: double
              type: number
          type: object
        Deployment:
          description: Code and application artifacts used to deploy a version to
            App Engine.
          id: Deployment
          properties:
            cloudBuildOptions:
              $ref: '#/schemas/CloudBuildOptions'
              description: Options for any Google Cloud Build builds created as a
                part of this deployment.These options will only be used if a new build
                is created, such as when deploying to the App Engine flexible environment
                using files or zip.
            container:
              $ref: '#/schemas/ContainerInfo'
              description: The Docker image for the container that runs the version.
                Only applicable for instances running in the App Engine flexible environment.
            files:
              additionalProperties:
                $ref: '#/schemas/FileInfo'
              description: Manifest of the files stored in Google Cloud Storage that
                are included as part of this version. All files must be readable using
                the credentials supplied with this call.
              type: object
            zip:
              $ref: '#/schemas/ZipInfo'
              description: The zip file for this deployment, if this is a zip deployment.
          type: object
        DiskUtilization:
          description: Target scaling by disk usage. Only applicable in the App Engine
            flexible environment.
          id: DiskUtilization
          properties:
            targetReadBytesPerSecond:
              description: Target bytes read per second.
              format: int32
              type: integer
            targetReadOpsPerSecond:
              description: Target ops read per seconds.
              format: int32
              type: integer
            targetWriteBytesPerSecond:
              description: Target bytes written per second.
              format: int32
              type: integer
            targetWriteOpsPerSecond:
              description: Target ops written per second.
              format: int32
              type: integer
          type: object
        EndpointsApiService:
          description: Cloud Endpoints (https://cloud.google.com/endpoints) configuration.
            The Endpoints API Service provides tooling for serving Open API and gRPC
            endpoints via an NGINX proxy. Only valid for App Engine Flexible environment
            deployments.The fields here refer to the name and configuration ID of
            a "service" resource in the Service Management API (https://cloud.google.com/service-management/overview).
          id: EndpointsApiService
          properties:
            configId:
              description: Endpoints service configuration ID as specified by the
                Service Management API. For example "2016-09-19r1".By default, the
                rollout strategy for Endpoints is RolloutStrategy.FIXED. This means
                that Endpoints starts up with a particular configuration ID. When
                a new configuration is rolled out, Endpoints must be given the new
                configuration ID. The config_id field is used to give the configuration
                ID and is required in this case.Endpoints also has a rollout strategy
                called RolloutStrategy.MANAGED. When using this, Endpoints fetches
                the latest configuration and does not need the configuration ID. In
                this case, config_id must be omitted.
              type: string
            disableTraceSampling:
              description: Enable or disable trace sampling. By default, this is set
                to false for enabled.
              type: boolean
            name:
              description: Endpoints service name which is the name of the "service"
                resource in the Service Management API. For example "myapi.endpoints.myproject.cloud.goog"
              type: string
            rolloutStrategy:
              description: Endpoints rollout strategy. If FIXED, config_id must be
                specified. If MANAGED, config_id must be omitted.
              enum:
              - UNSPECIFIED_ROLLOUT_STRATEGY
              - FIXED
              - MANAGED
              enumDescriptions:
              - Not specified. Defaults to FIXED.
              - Endpoints service configuration ID will be fixed to the configuration
                ID specified by config_id.
              - Endpoints service configuration ID will be updated with each rollout.
              type: string
          type: object
        Entrypoint:
          description: The entrypoint for the application.
          id: Entrypoint
          properties:
            shell:
              description: The format should be a shell command that can be fed to
                bash -c.
              type: string
          type: object
        ErrorHandler:
          description: Custom static error page to be served when an error occurs.
          id: ErrorHandler
          properties:
            errorCode:
              description: Error condition this handler applies to.
              enum:
              - ERROR_CODE_UNSPECIFIED
              - ERROR_CODE_DEFAULT
              - ERROR_CODE_OVER_QUOTA
              - ERROR_CODE_DOS_API_DENIAL
              - ERROR_CODE_TIMEOUT
              enumDescriptions:
              - Not specified. ERROR_CODE_DEFAULT is assumed.
              - All other error types.
              - Application has exceeded a resource quota.
              - Client blocked by the application's Denial of Service protection configuration.
              - Deadline reached before the application responds.
              type: string
            mimeType:
              description: MIME type of file. Defaults to text/html.
              type: string
            staticFile:
              description: Static file content to be served for this error.
              type: string
          type: object
        FileInfo:
          description: Single source file that is part of the version to be deployed.
            Each source file that is deployed must be specified separately.
          id: FileInfo
          properties:
            mimeType:
              description: The MIME type of the file.Defaults to the value from Google
                Cloud Storage.
              type: string
            sha1Sum:
              description: The SHA1 hash of the file, in hex.
              type: string
            sourceUrl:
              description: URL source to use to fetch this file. Must be a URL to
                a resource in Google Cloud Storage in the form 'http(s)://storage.googleapis.com/<bucket>/<object>'.
              type: string
          type: object
        HealthCheck:
          description: Health checking configuration for VM instances. Unhealthy instances
            are killed and replaced with new instances. Only applicable for instances
            in App Engine flexible environment.
          id: HealthCheck
          properties:
            checkInterval:
              description: Interval between health checks.
              format: google-duration
              type: string
            disableHealthCheck:
              description: Whether to explicitly disable health checks for this instance.
              type: boolean
            healthyThreshold:
              description: Number of consecutive successful health checks required
                before receiving traffic.
              format: uint32
              type: integer
            host:
              description: 'Host header to send when performing an HTTP health check.
                Example: "myapp.appspot.com"'
              type: string
            restartThreshold:
              description: Number of consecutive failed health checks required before
                an instance is restarted.
              format: uint32
              type: integer
            timeout:
              description: Time before the health check is considered failed.
              format: google-duration
              type: string
            unhealthyThreshold:
              description: Number of consecutive failed health checks required before
                removing traffic.
              format: uint32
              type: integer
          type: object
        Library:
          description: Third-party Python runtime library that is required by the
            application.
          id: Library
          properties:
            name:
              description: 'Name of the library. Example: "django".'
              type: string
            version:
              description: Version of the library to select, or "latest".
              type: string
          type: object
        LivenessCheck:
          description: Health checking configuration for VM instances. Unhealthy instances
            are killed and replaced with new instances.
          id: LivenessCheck
          properties:
            checkInterval:
              description: Interval between health checks.
              format: google-duration
              type: string
            failureThreshold:
              description: Number of consecutive failed checks required before considering
                the VM unhealthy.
              format: uint32
              type: integer
            host:
              description: 'Host header to send when performing a HTTP Liveness check.
                Example: "myapp.appspot.com"'
              type: string
            initialDelay:
              description: The initial delay before starting to execute the checks.
              format: google-duration
              type: string
            path:
              description: The request path.
              type: string
            successThreshold:
              description: Number of consecutive successful checks required before
                considering the VM healthy.
              format: uint32
              type: integer
            timeout:
              description: Time before the check is considered failed.
              format: google-duration
              type: string
          type: object
        ManualScaling:
          description: A service with manual scaling runs continuously, allowing you
            to perform complex initialization and rely on the state of its memory
            over time.
          id: ManualScaling
          properties:
            instances:
              description: Number of instances to assign to the service at the start.
                This number can later be altered by using the Modules API (https://cloud.google.com/appengine/docs/python/modules/functions)
                set_num_instances() function.
              format: int32
              type: integer
          type: object
        Network:
          description: Extra network settings. Only applicable in the App Engine flexible
            environment.
          id: Network
          properties:
            forwardedPorts:
              description: List of ports, or port pairs, to forward from the virtual
                machine to the application container. Only applicable in the App Engine
                flexible environment.
              items:
                type: string
              type: array
            instanceTag:
              description: Tag to apply to the instance during creation. Only applicable
                in the App Engine flexible environment.
              type: string
            name:
              description: Google Compute Engine network where the virtual machines
                are created. Specify the short name, not the resource path.Defaults
                to default.
              type: string
            sessionAffinity:
              description: Enable session affinity. Only applicable in the App Engine
                flexible environment.
              type: boolean
            subnetworkName:
              description: |-
                Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.If a subnetwork name is specified, a network name will also be required unless it is for the default network.
                If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
                If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetwork_name) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
                If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetwork_name must be specified and the IP address is created from the IPCidrRange of the subnetwork.If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
              type: string
          type: object
        NetworkUtilization:
          description: Target scaling by network usage. Only applicable in the App
            Engine flexible environment.
          id: NetworkUtilization
          properties:
            targetReceivedBytesPerSecond:
              description: Target bytes received per second.
              format: int32
              type: integer
            targetReceivedPacketsPerSecond:
              description: Target packets received per second.
              format: int32
              type: integer
            targetSentBytesPerSecond:
              description: Target bytes sent per second.
              format: int32
              type: integer
            targetSentPacketsPerSecond:
              description: Target packets sent per second.
              format: int32
              type: integer
          type: object
        ReadinessCheck:
          description: Readiness checking configuration for VM instances. Unhealthy
            instances are removed from traffic rotation.
          id: ReadinessCheck
          properties:
            appStartTimeout:
              description: A maximum time limit on application initialization, measured
                from moment the application successfully replies to a healthcheck
                until it is ready to serve traffic.
              format: google-duration
              type: string
            checkInterval:
              description: Interval between health checks.
              format: google-duration
              type: string
            failureThreshold:
              description: Number of consecutive failed checks required before removing
                traffic.
              format: uint32
              type: integer
            host:
              description: 'Host header to send when performing a HTTP Readiness check.
                Example: "myapp.appspot.com"'
              type: string
            path:
              description: The request path.
              type: string
            successThreshold:
              description: Number of consecutive successful checks required before
                receiving traffic.
              format: uint32
              type: integer
            timeout:
              description: Time before the check is considered failed.
              format: google-duration
              type: string
          type: object
        RequestUtilization:
          description: Target scaling by request utilization. Only applicable in the
            App Engine flexible environment.
          id: RequestUtilization
          properties:
            targetConcurrentRequests:
              description: Target number of concurrent requests.
              format: int32
              type: integer
            targetRequestCountPerSecond:
              description: Target requests per second.
              format: int32
              type: integer
          type: object
        Resources:
          description: Machine resources for a version.
          id: Resources
          properties:
            cpu:
              description: Number of CPU cores needed.
              format: double
              type: number
            diskGb:
              description: Disk size (GB) needed.
              format: double
              type: number
            memoryGb:
              description: Memory (GB) needed.
              format: double
              type: number
            volumes:
              description: User specified volumes.
              items:
                $ref: '#/schemas/Volume'
              type: array
          type: object
        ScriptHandler:
          description: Executes a script to handle the request that matches the URL
            pattern.
          id: ScriptHandler
          properties:
            scriptPath:
              description: Path to the script from the application root directory.
              type: string
          type: object
        StandardSchedulerSettings:
          description: Scheduler settings for standard environment.
          id: StandardSchedulerSettings
          properties:
            maxInstances:
              description: Maximum number of instances to run for this version. Set
                to zero to disable max_instances configuration.
              format: int32
              type: integer
            minInstances:
              description: Minimum number of instances to run for this version. Set
                to zero to disable min_instances configuration.
              format: int32
              type: integer
            targetCpuUtilization:
              description: Target CPU utilization ratio to maintain when scaling.
              format: double
              type: number
            targetThroughputUtilization:
              description: Target throughput utilization ratio to maintain when scaling
              format: double
              type: number
          type: object
        StaticFilesHandler:
          description: Files served directly to the user for a given URL, such as
            images, CSS stylesheets, or JavaScript source files. Static file handlers
            describe which files in the application directory are static files, and
            which URLs serve them.
          id: StaticFilesHandler
          properties:
            applicationReadable:
              description: Whether files should also be uploaded as code data. By
                default, files declared in static file handlers are uploaded as static
                data and are only served to end users; they cannot be read by the
                application. If enabled, uploads are charged against both your code
                and static data storage resource quotas.
              type: boolean
            expiration:
              description: Time a static file served by this handler should be cached
                by web proxies and browsers.
              format: google-duration
              type: string
            httpHeaders:
              additionalProperties:
                type: string
              description: HTTP headers to use for all responses from these URLs.
              type: object
            mimeType:
              description: MIME type used to serve all files served by this handler.Defaults
                to file-specific MIME types, which are derived from each file's filename
                extension.
              type: string
            path:
              description: Path to the static files matched by the URL pattern, from
                the application root directory. The path can refer to text matched
                in groupings in the URL pattern.
              type: string
            requireMatchingFile:
              description: Whether this handler should match the request if the file
                referenced by the handler does not exist.
              type: boolean
            uploadPathRegex:
              description: Regular expression that matches the file paths for all
                files that should be referenced by this handler.
              type: string
          type: object
        UrlMap:
          description: URL pattern and description of how the URL should be handled.
            App Engine can handle URLs by executing application code or by serving
            static files uploaded with the version, such as images, CSS, or JavaScript.
          id: UrlMap
          properties:
            apiEndpoint:
              $ref: '#/schemas/ApiEndpointHandler'
              description: Uses API Endpoints to handle requests.
            authFailAction:
              description: Action to take when users access resources that require
                authentication. Defaults to redirect.
              enum:
              - AUTH_FAIL_ACTION_UNSPECIFIED
              - AUTH_FAIL_ACTION_REDIRECT
              - AUTH_FAIL_ACTION_UNAUTHORIZED
              enumDescriptions:
              - Not specified. AUTH_FAIL_ACTION_REDIRECT is assumed.
              - Redirects user to "accounts.google.com". The user is redirected back
                to the application URL after signing in or creating an account.
              - Rejects request with a 401 HTTP status code and an error message.
              type: string
            login:
              description: Level of login required to access this resource. Not supported
                for Node.js in the App Engine standard environment.
              enum:
              - LOGIN_UNSPECIFIED
              - LOGIN_OPTIONAL
              - LOGIN_ADMIN
              - LOGIN_REQUIRED
              enumDescriptions:
              - Not specified. LOGIN_OPTIONAL is assumed.
              - Does not require that the user is signed in.
              - If the user is not signed in, the auth_fail_action is taken. In addition,
                if the user is not an administrator for the application, they are
                given an error message regardless of auth_fail_action. If the user
                is an administrator, the handler proceeds.
              - If the user has signed in, the handler proceeds normally. Otherwise,
                the auth_fail_action is taken.
              type: string
            redirectHttpResponseCode:
              description: 30x code to use when performing redirects for the secure
                field. Defaults to 302.
              enum:
              - REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED
              - REDIRECT_HTTP_RESPONSE_CODE_301
              - REDIRECT_HTTP_RESPONSE_CODE_302
              - REDIRECT_HTTP_RESPONSE_CODE_303
              - REDIRECT_HTTP_RESPONSE_CODE_307
              enumDescriptions:
              - Not specified. 302 is assumed.
              - 301 Moved Permanently code.
              - 302 Moved Temporarily code.
              - 303 See Other code.
              - 307 Temporary Redirect code.
              type: string
            script:
              $ref: '#/schemas/ScriptHandler'
              description: 'Executes a script to handle the requests that match this
                URL pattern. Only the auto value is supported for Node.js in the App
                Engine standard environment, for example "script": "auto".'
            securityLevel:
              description: Security (HTTPS) enforcement for this URL.
              enum:
              - SECURE_UNSPECIFIED
              - SECURE_DEFAULT
              - SECURE_NEVER
              - SECURE_OPTIONAL
              - SECURE_ALWAYS
              enumDescriptions:
              - Not specified.
              - Both HTTP and HTTPS requests with URLs that match the handler succeed
                without redirects. The application can examine the request to determine
                which protocol was used, and respond accordingly.
              - Requests for a URL that match this handler that use HTTPS are automatically
                redirected to the HTTP equivalent URL.
              - Both HTTP and HTTPS requests with URLs that match the handler succeed
                without redirects. The application can examine the request to determine
                which protocol was used and respond accordingly.
              - Requests for a URL that match this handler that do not use HTTPS are
                automatically redirected to the HTTPS URL with the same path. Query
                parameters are reserved for the redirect.
              type: string
            staticFiles:
              $ref: '#/schemas/StaticFilesHandler'
              description: Returns the contents of a file, such as an image, as the
                response.
            urlRegex:
              description: URL prefix. Uses regular expression syntax, which means
                regexp special characters must be escaped, but should not contain
                groupings. All URLs that begin with this prefix are handled by this
                handler, using the portion of the URL after the prefix as part of
                the file path.
              type: string
          type: object
        Version:
          description: A Version resource is a specific set of source code and configuration
            files that are deployed into a service.
          id: Version
          properties:
            apiConfig:
              $ref: '#/schemas/ApiConfigHandler'
              description: Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only
                returned in GET requests if view=FULL is set.
            automaticScaling:
              $ref: '#/schemas/AutomaticScaling'
              description: Automatic scaling is based on request rate, response latencies,
                and other application metrics.
            basicScaling:
              $ref: '#/schemas/BasicScaling'
              description: A service with basic scaling will create an instance when
                the application receives a request. The instance will be turned down
                when the app becomes idle. Basic scaling is ideal for work that is
                intermittent or driven by user activity.
            betaSettings:
              additionalProperties:
                type: string
              description: Metadata settings that are supplied to this version to
                enable beta runtime features.
              type: object
            createTime:
              description: Time that this version was created.@OutputOnly
              format: google-datetime
              type: string
            createdBy:
              description: Email address of the user who created this version.@OutputOnly
              type: string
            defaultExpiration:
              description: Duration that static files should be cached by web proxies
                and browsers. Only applicable if the corresponding StaticFilesHandler
                (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler)
                does not specify its own expiration time.Only returned in GET requests
                if view=FULL is set.
              format: google-duration
              type: string
            deployment:
              $ref: '#/schemas/Deployment'
              description: Code and application artifacts that make up this version.Only
                returned in GET requests if view=FULL is set.
            diskUsageBytes:
              description: Total size in bytes of all the files that are included
                in this version and currently hosted on the App Engine disk.@OutputOnly
              format: int64
              type: string
            endpointsApiService:
              $ref: '#/schemas/EndpointsApiService'
              description: Cloud Endpoints configuration.If endpoints_api_service
                is set, the Cloud Endpoints Extensible Service Proxy will be provided
                to serve the API implemented by the app.
            entrypoint:
              $ref: '#/schemas/Entrypoint'
              description: The entrypoint for the application.
            env:
              description: App Engine execution environment for this version.Defaults
                to standard.
              type: string
            envVariables:
              additionalProperties:
                type: string
              description: Environment variables available to the application.Only
                returned in GET requests if view=FULL is set.
              type: object
            errorHandlers:
              description: Custom static error pages. Limited to 10KB per page.Only
                returned in GET requests if view=FULL is set.
              items:
                $ref: '#/schemas/ErrorHandler'
              type: array
            handlers:
              description: An ordered list of URL-matching patterns that should be
                applied to incoming requests. The first matching URL handles the request
                and other request handlers are not attempted.Only returned in GET
                requests if view=FULL is set.
              items:
                $ref: '#/schemas/UrlMap'
              type: array
            healthCheck:
              $ref: '#/schemas/HealthCheck'
              description: Configures health checking for instances. Unhealthy instances
                are stopped and replaced with new instances. Only applicable in the
                App Engine flexible environment.Only returned in GET requests if view=FULL
                is set.
            id:
              description: 'Relative name of the version within the service. Example:
                v1. Version names can contain only lowercase letters, numbers, or
                hyphens. Reserved names: "default", "latest", and any name with the
                prefix "ah-".'
              type: string
            inboundServices:
              description: Before an application can receive email or XMPP messages,
                the application must be configured to enable the service.
              enumDescriptions:
              - Not specified.
              - Allows an application to receive mail.
              - Allows an application to receive email-bound notifications.
              - Allows an application to receive error stanzas.
              - Allows an application to receive instant messages.
              - Allows an application to receive user subscription POSTs.
              - Allows an application to receive a user's chat presence.
              - Registers an application for notifications when a client connects
                or disconnects from a channel.
              - Enables warmup requests.
              items:
                enum:
                - INBOUND_SERVICE_UNSPECIFIED
                - INBOUND_SERVICE_MAIL
                - INBOUND_SERVICE_MAIL_BOUNCE
                - INBOUND_SERVICE_XMPP_ERROR
                - INBOUND_SERVICE_XMPP_MESSAGE
                - INBOUND_SERVICE_XMPP_SUBSCRIBE
                - INBOUND_SERVICE_XMPP_PRESENCE
                - INBOUND_SERVICE_CHANNEL_PRESENCE
                - INBOUND_SERVICE_WARMUP
                type: string
              type: array
            instanceClass:
              description: |-
                Instance class that is used to run this version. Valid values are:
                AutomaticScaling: F1, F2, F4, F4_1G
                ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
              type: string
            libraries:
              description: Configuration for third-party Python runtime libraries
                that are required by the application.Only returned in GET requests
                if view=FULL is set.
              items:
                $ref: '#/schemas/Library'
              type: array
            livenessCheck:
              $ref: '#/schemas/LivenessCheck'
              description: Configures liveness health checking for instances. Unhealthy
                instances are stopped and replaced with new instancesOnly returned
                in GET requests if view=FULL is set.
            manualScaling:
              $ref: '#/schemas/ManualScaling'
              description: A service with manual scaling runs continuously, allowing
                you to perform complex initialization and rely on the state of its
                memory over time.
            name:
              description: 'Full path to the Version resource in the API. Example:
                apps/myapp/services/default/versions/v1.@OutputOnly'
              type: string
            network:
              $ref: '#/schemas/Network'
              description: Extra network settings. Only applicable in the App Engine
                flexible environment.
            nobuildFilesRegex:
              description: Files that match this pattern will not be built into this
                version. Only applicable for Go runtimes.Only returned in GET requests
                if view=FULL is set.
              type: string
            readinessCheck:
              $ref: '#/schemas/ReadinessCheck'
              description: Configures readiness health checking for instances. Unhealthy
                instances are not put into the backend traffic rotation.Only returned
                in GET requests if view=FULL is set.
            resources:
              $ref: '#/schemas/Resources'
              description: Machine resources for this version. Only applicable in
                the App Engine flexible environment.
            runtime:
              description: 'Desired runtime. Example: python27.'
              type: string
            runtimeApiVersion:
              description: The version of the API in the given runtime environment.
                Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard/<language>/config/appref
              type: string
            runtimeChannel:
              description: The channel of the runtime to use. Only available for some
                runtimes. Defaults to the default channel.
              type: string
            runtimeMainExecutablePath:
              description: The path or name of the app's main executable.
              type: string
            servingStatus:
              description: Current serving status of this version. Only the versions
                with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED
                is an invalid value. Defaults to SERVING.
              enum:
              - SERVING_STATUS_UNSPECIFIED
              - SERVING
              - STOPPED
              enumDescriptions:
              - Not specified.
              - Currently serving. Instances are created according to the scaling
                settings of the version.
              - Disabled. No instances will be created and the scaling settings are
                ignored until the state of the version changes to SERVING.
              type: string
            threadsafe:
              description: Whether multiple requests can be dispatched to this version
                at once.
              type: boolean
            versionUrl:
              description: 'Serving URL for this version. Example: "https://myversion-dot-myservice-dot-myapp.appspot.com"@OutputOnly'
              type: string
            vm:
              description: Whether to deploy this version in a container on a virtual
                machine.
              type: boolean
            vpcAccessConnector:
              $ref: '#/schemas/VpcAccessConnector'
              description: Enables VPC connectivity for standard apps.
            zones:
              description: The Google Compute Engine zones that are supported by this
                version in the App Engine flexible environment. Deprecated.
              items:
                type: string
              type: array
          type: object
        Volume:
          description: Volumes mounted within the app container. Only applicable in
            the App Engine flexible environment.
          id: Volume
          properties:
            name:
              description: Unique name for the volume.
              type: string
            sizeGb:
              description: Volume size in gigabytes.
              format: double
              type: number
            volumeType:
              description: Underlying volume type, e.g. 'tmpfs'.
              type: string
          type: object
        VpcAccessConnector:
          description: VPC access connector specification.
          id: VpcAccessConnector
          properties:
            name:
              description: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
              type: string
          type: object
        ZipInfo:
          description: The zip file information for a zip deployment.
          id: ZipInfo
          properties:
            filesCount:
              description: An estimate of the number of files in a zip for a zip deployment.
                If set, must be greater than or equal to the actual number of files.
                Used for optimizing performance; if not provided, deployment may be
                slow.
              format: int32
              type: integer
            sourceUrl:
              description: URL of the zip file to deploy from. Must be a URL to a
                resource in Google Cloud Storage in the form 'http(s)://storage.googleapis.com/<bucket>/<object>'.
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/appengine-v1/types/apps.services.versions?alt=json
  title: App Engine Admin API
