type_info:
  documentationLink: https://cloud.google.com/access-context-manager/docs/reference/rest/
  kind: deploymentmanager#typeInfo
  name: accessPolicies.accessLevels
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          basic:
            $ref: '#/schemas/BasicLevel'
            description: A `BasicLevel` composed of `Conditions`.
          description:
            description: Description of the `AccessLevel` and its use. Does not affect
              behavior.
            type: string
          name:
            description: |-
              Required. Resource name for the Access Level. The `short_name` component
              must begin with a letter and only include alphanumeric and '_'. Format:
              `accessPolicies/{policy_id}/accessLevels/{short_name}`
            type: string
          parent:
            description: |-
              Required. Resource name for the access policy which owns this Access
              Level.

              Format: `accessPolicies/{policy_id}`
            location: path
            pattern: ^accessPolicies/[^/]+$
            required: true
            type: string
          title:
            description: Human readable title. Must be unique within the Policy.
            type: string
        type: object
      methodName: create
      schemas:
        AccessLevel:
          description: |-
            An `AccessLevel` is a label that can be applied to requests to GCP services,
            along with a list of requirements necessary for the label to be applied.
          id: AccessLevel
          properties:
            basic:
              $ref: '#/schemas/BasicLevel'
              description: A `BasicLevel` composed of `Conditions`.
            description:
              description: Description of the `AccessLevel` and its use. Does not
                affect behavior.
              type: string
            name:
              description: |-
                Required. Resource name for the Access Level. The `short_name` component
                must begin with a letter and only include alphanumeric and '_'. Format:
                `accessPolicies/{policy_id}/accessLevels/{short_name}`
              type: string
            title:
              description: Human readable title. Must be unique within the Policy.
              type: string
          type: object
        BasicLevel:
          description: '`BasicLevel` is an `AccessLevel` using a set of recommended
            features.'
          id: BasicLevel
          properties:
            combiningFunction:
              description: |-
                How the `conditions` list should be combined to determine if a request is
                granted this `AccessLevel`. If AND is used, each `Condition` in
                `conditions` must be satisfied for the `AccessLevel` to be applied. If OR
                is used, at least one `Condition` in `conditions` must be satisfied for the
                `AccessLevel` to be applied. Default behavior is AND.
              enum:
              - AND
              - OR
              enumDescriptions:
              - All `Conditions` must be true for the `BasicLevel` to be true.
              - If at least one `Condition` is true, then the `BasicLevel` is true.
              type: string
            conditions:
              description: Required. A list of requirements for the `AccessLevel`
                to be granted.
              items:
                $ref: '#/schemas/Condition'
              type: array
          type: object
        Condition:
          description: |-
            A condition necessary for an `AccessLevel` to be granted. The Condition is an
            AND over its fields. So a Condition is true if: 1) the request IP is from one
            of the listed subnetworks AND 2) the originating device complies with the
            listed device policy AND 3) all listed access levels are granted AND 4) the
            request was sent at a time allowed by the DateTimeRestriction.
          id: Condition
          properties:
            devicePolicy:
              $ref: '#/schemas/DevicePolicy'
              description: |-
                Device specific restrictions, all restrictions must hold for the
                Condition to be true. If not specified, all devices are allowed.
            ipSubnetworks:
              description: |-
                CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for
                a CIDR IP address block, the specified IP address portion must be properly
                truncated (i.e. all the host bits must be zero) or the input is considered
                malformed. For example, "192.0.2.0/24" is accepted but "192.0.2.1/24" is
                not. Similarly, for IPv6, "2001:db8::/32" is accepted whereas
                "2001:db8::1/32" is not. The originating IP of a request must be in one of
                the listed subnets in order for this Condition to be true. If empty, all IP
                addresses are allowed.
              items:
                type: string
              type: array
            members:
              description: |-
                The request must be made by one of the provided user or service
                accounts. Groups are not supported.
                Syntax:
                `user:{emailid}`
                `serviceAccount:{emailid}`
                If not specified, a request may come from any user.
              items:
                type: string
              type: array
            negate:
              description: |-
                Whether to negate the Condition. If true, the Condition becomes a NAND over
                its non-empty fields, each field must be false for the Condition overall to
                be satisfied. Defaults to false.
              type: boolean
            regions:
              description: |-
                The request must originate from one of the provided countries/regions.
                Must be valid ISO 3166-1 alpha-2 codes.
              items:
                type: string
              type: array
            requiredAccessLevels:
              description: |-
                A list of other access levels defined in the same `Policy`, referenced by
                resource name. Referencing an `AccessLevel` which does not exist is an
                error. All access levels listed must be granted for the Condition
                to be true. Example:
                "`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME"`
              items:
                type: string
              type: array
          type: object
        DevicePolicy:
          description: |-
            `DevicePolicy` specifies device specific restrictions necessary to acquire a
            given access level. A `DevicePolicy` specifies requirements for requests from
            devices to be granted access levels, it does not do any enforcement on the
            device. `DevicePolicy` acts as an AND over all specified fields, and each
            repeated field is an OR over its elements. Any unset fields are ignored. For
            example, if the proto is { os_type : DESKTOP_WINDOWS, os_type :
            DESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be
            true for requests originating from encrypted Linux desktops and encrypted
            Windows desktops.
          id: DevicePolicy
          properties:
            allowedDeviceManagementLevels:
              description: |-
                Allowed device management levels, an empty list allows all management
                levels.
              enumDescriptions:
              - The device's management level is not specified or not known.
              - The device is not managed.
              - |-
                Basic management is enabled, which is generally limited to monitoring and
                wiping the corporate account.
              - |-
                Complete device management. This includes more thorough monitoring and the
                ability to directly manage the device (such as remote wiping). This can be
                enabled through the Android Enterprise Platform.
              items:
                enum:
                - MANAGEMENT_UNSPECIFIED
                - NONE
                - BASIC
                - COMPLETE
                type: string
              type: array
            allowedEncryptionStatuses:
              description: Allowed encryptions statuses, an empty list allows all
                statuses.
              enumDescriptions:
              - The encryption status of the device is not specified or not known.
              - The device does not support encryption.
              - The device supports encryption, but is currently unencrypted.
              - The device is encrypted.
              items:
                enum:
                - ENCRYPTION_UNSPECIFIED
                - ENCRYPTION_UNSUPPORTED
                - UNENCRYPTED
                - ENCRYPTED
                type: string
              type: array
            osConstraints:
              description: Allowed OS versions, an empty list allows all types and
                all versions.
              items:
                $ref: '#/schemas/OsConstraint'
              type: array
            requireAdminApproval:
              description: Whether the device needs to be approved by the customer
                admin.
              type: boolean
            requireCorpOwned:
              description: Whether the device needs to be corp owned.
              type: boolean
            requireScreenlock:
              description: |-
                Whether or not screenlock is required for the DevicePolicy to be true.
                Defaults to `false`.
              type: boolean
          type: object
        OsConstraint:
          description: A restriction on the OS type and version of devices making
            requests.
          id: OsConstraint
          properties:
            minimumVersion:
              description: |-
                The minimum allowed OS version. If not set, any version of this OS
                satisfies the constraint. Format: `"major.minor.patch"`.
                Examples: `"10.5.301"`, `"9.2.1"`.
              type: string
            osType:
              description: Required. The allowed OS type.
              enum:
              - OS_UNSPECIFIED
              - DESKTOP_MAC
              - DESKTOP_WINDOWS
              - DESKTOP_LINUX
              - DESKTOP_CHROME_OS
              enumDescriptions:
              - The operating system of the device is not specified or not known.
              - A desktop Mac operating system.
              - A desktop Windows operating system.
              - A desktop Linux operating system.
              - A desktop ChromeOS operating system.
              type: string
            requireVerifiedChromeOs:
              description: |-
                Only allows requests from devices with a verified Chrome OS.
                Verifications includes requirements that the device is enterprise-managed,
                conformant to Dasher domain policies, and the caller has permission to call
                the API targeted by the request.
              type: boolean
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/AccessLevel'
      methodName: get
      schemas:
        AccessLevel:
          description: |-
            An `AccessLevel` is a label that can be applied to requests to GCP services,
            along with a list of requirements necessary for the label to be applied.
          id: AccessLevel
          properties:
            basic:
              $ref: '#/schemas/BasicLevel'
              description: A `BasicLevel` composed of `Conditions`.
            createTime:
              description: Output only. Time the `AccessLevel` was created in UTC.
              format: google-datetime
              type: string
            description:
              description: Description of the `AccessLevel` and its use. Does not
                affect behavior.
              type: string
            name:
              description: |-
                Required. Resource name for the Access Level. The `short_name` component
                must begin with a letter and only include alphanumeric and '_'. Format:
                `accessPolicies/{policy_id}/accessLevels/{short_name}`
              type: string
            title:
              description: Human readable title. Must be unique within the Policy.
              type: string
            updateTime:
              description: Output only. Time the `AccessLevel` was updated in UTC.
              format: google-datetime
              type: string
          type: object
        BasicLevel:
          description: '`BasicLevel` is an `AccessLevel` using a set of recommended
            features.'
          id: BasicLevel
          properties:
            combiningFunction:
              description: |-
                How the `conditions` list should be combined to determine if a request is
                granted this `AccessLevel`. If AND is used, each `Condition` in
                `conditions` must be satisfied for the `AccessLevel` to be applied. If OR
                is used, at least one `Condition` in `conditions` must be satisfied for the
                `AccessLevel` to be applied. Default behavior is AND.
              enum:
              - AND
              - OR
              enumDescriptions:
              - All `Conditions` must be true for the `BasicLevel` to be true.
              - If at least one `Condition` is true, then the `BasicLevel` is true.
              type: string
            conditions:
              description: Required. A list of requirements for the `AccessLevel`
                to be granted.
              items:
                $ref: '#/schemas/Condition'
              type: array
          type: object
        Condition:
          description: |-
            A condition necessary for an `AccessLevel` to be granted. The Condition is an
            AND over its fields. So a Condition is true if: 1) the request IP is from one
            of the listed subnetworks AND 2) the originating device complies with the
            listed device policy AND 3) all listed access levels are granted AND 4) the
            request was sent at a time allowed by the DateTimeRestriction.
          id: Condition
          properties:
            devicePolicy:
              $ref: '#/schemas/DevicePolicy'
              description: |-
                Device specific restrictions, all restrictions must hold for the
                Condition to be true. If not specified, all devices are allowed.
            ipSubnetworks:
              description: |-
                CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for
                a CIDR IP address block, the specified IP address portion must be properly
                truncated (i.e. all the host bits must be zero) or the input is considered
                malformed. For example, "192.0.2.0/24" is accepted but "192.0.2.1/24" is
                not. Similarly, for IPv6, "2001:db8::/32" is accepted whereas
                "2001:db8::1/32" is not. The originating IP of a request must be in one of
                the listed subnets in order for this Condition to be true. If empty, all IP
                addresses are allowed.
              items:
                type: string
              type: array
            members:
              description: |-
                The request must be made by one of the provided user or service
                accounts. Groups are not supported.
                Syntax:
                `user:{emailid}`
                `serviceAccount:{emailid}`
                If not specified, a request may come from any user.
              items:
                type: string
              type: array
            negate:
              description: |-
                Whether to negate the Condition. If true, the Condition becomes a NAND over
                its non-empty fields, each field must be false for the Condition overall to
                be satisfied. Defaults to false.
              type: boolean
            regions:
              description: |-
                The request must originate from one of the provided countries/regions.
                Must be valid ISO 3166-1 alpha-2 codes.
              items:
                type: string
              type: array
            requiredAccessLevels:
              description: |-
                A list of other access levels defined in the same `Policy`, referenced by
                resource name. Referencing an `AccessLevel` which does not exist is an
                error. All access levels listed must be granted for the Condition
                to be true. Example:
                "`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME"`
              items:
                type: string
              type: array
          type: object
        DevicePolicy:
          description: |-
            `DevicePolicy` specifies device specific restrictions necessary to acquire a
            given access level. A `DevicePolicy` specifies requirements for requests from
            devices to be granted access levels, it does not do any enforcement on the
            device. `DevicePolicy` acts as an AND over all specified fields, and each
            repeated field is an OR over its elements. Any unset fields are ignored. For
            example, if the proto is { os_type : DESKTOP_WINDOWS, os_type :
            DESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be
            true for requests originating from encrypted Linux desktops and encrypted
            Windows desktops.
          id: DevicePolicy
          properties:
            allowedDeviceManagementLevels:
              description: |-
                Allowed device management levels, an empty list allows all management
                levels.
              enumDescriptions:
              - The device's management level is not specified or not known.
              - The device is not managed.
              - |-
                Basic management is enabled, which is generally limited to monitoring and
                wiping the corporate account.
              - |-
                Complete device management. This includes more thorough monitoring and the
                ability to directly manage the device (such as remote wiping). This can be
                enabled through the Android Enterprise Platform.
              items:
                enum:
                - MANAGEMENT_UNSPECIFIED
                - NONE
                - BASIC
                - COMPLETE
                type: string
              type: array
            allowedEncryptionStatuses:
              description: Allowed encryptions statuses, an empty list allows all
                statuses.
              enumDescriptions:
              - The encryption status of the device is not specified or not known.
              - The device does not support encryption.
              - The device supports encryption, but is currently unencrypted.
              - The device is encrypted.
              items:
                enum:
                - ENCRYPTION_UNSPECIFIED
                - ENCRYPTION_UNSUPPORTED
                - UNENCRYPTED
                - ENCRYPTED
                type: string
              type: array
            osConstraints:
              description: Allowed OS versions, an empty list allows all types and
                all versions.
              items:
                $ref: '#/schemas/OsConstraint'
              type: array
            requireAdminApproval:
              description: Whether the device needs to be approved by the customer
                admin.
              type: boolean
            requireCorpOwned:
              description: Whether the device needs to be corp owned.
              type: boolean
            requireScreenlock:
              description: |-
                Whether or not screenlock is required for the DevicePolicy to be true.
                Defaults to `false`.
              type: boolean
          type: object
        OsConstraint:
          description: A restriction on the OS type and version of devices making
            requests.
          id: OsConstraint
          properties:
            minimumVersion:
              description: |-
                The minimum allowed OS version. If not set, any version of this OS
                satisfies the constraint. Format: `"major.minor.patch"`.
                Examples: `"10.5.301"`, `"9.2.1"`.
              type: string
            osType:
              description: Required. The allowed OS type.
              enum:
              - OS_UNSPECIFIED
              - DESKTOP_MAC
              - DESKTOP_WINDOWS
              - DESKTOP_LINUX
              - DESKTOP_CHROME_OS
              enumDescriptions:
              - The operating system of the device is not specified or not known.
              - A desktop Mac operating system.
              - A desktop Windows operating system.
              - A desktop Linux operating system.
              - A desktop ChromeOS operating system.
              type: string
            requireVerifiedChromeOs:
              description: |-
                Only allows requests from devices with a verified Chrome OS.
                Verifications includes requirements that the device is enterprise-managed,
                conformant to Dasher domain policies, and the caller has permission to call
                the API targeted by the request.
              type: boolean
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/accesscontextmanager-v1beta/types/accessPolicies.accessLevels?alt=json
  title: Access Context Manager API
