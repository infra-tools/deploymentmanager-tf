type_info:
  documentationLink: https://developers.google.com/compute/docs/reference/latest/
  kind: deploymentmanager#typeInfo
  name: sslPolicies
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        properties:
          customFeatures:
            description: |-
              A list of features enabled when the selected profile is CUSTOM. The
              - method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
            items:
              type: string
            type: array
          description:
            description: An optional description of this resource. Provide this property
              when you create the resource.
            type: string
          fingerprint:
            description: |-
              Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a SslPolicy. An up-to-date fingerprint must be provided in order to update the SslPolicy, otherwise the request will fail with error 412 conditionNotMet.

              To see the latest fingerprint, make a get() request to retrieve an SslPolicy.
            format: byte
            type: string
          minTlsVersion:
            description: The minimum version of SSL protocol that can be used by the
              clients to establish a connection with the load balancer. This can be
              one of TLS_1_0, TLS_1_1, TLS_1_2.
            enum:
            - TLS_1_0
            - TLS_1_1
            - TLS_1_2
            enumDescriptions:
            - ''
            - ''
            - ''
            type: string
          name:
            description: Name of the resource. The name must be 1-63 characters long,
              and comply with RFC1035. Specifically, the name must be 1-63 characters
              long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
              means the first character must be a lowercase letter, and all following
              characters must be a dash, lowercase letter, or digit, except the last
              character, which cannot be a dash.
            pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
            type: string
          profile:
            description: Profile specifies the set of SSL features that can be used
              by the load balancer when negotiating SSL with clients. This can be
              one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the
              set of SSL features to enable must be specified in the customFeatures
              field.
            enum:
            - COMPATIBLE
            - CUSTOM
            - MODERN
            - RESTRICTED
            enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            type: string
          requestId:
            description: |-
              An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

              For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

              The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
            location: query
            type: string
          tlsSettings:
            $ref: '#/schemas/ServerTlsSettings'
            description: Security settings for the proxy. This field is only applicable
              to a global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        type: object
      methodName: insert
      schemas:
        CallCredentials:
          description: gRPC call credentials to access the SDS server.
          id: CallCredentials
          properties:
            accessToken:
              description: The access token that is used as call credential for the
                SDS server. This field is used only if callCredentialType is ACCESS_TOKEN.
              type: string
            callCredentialType:
              description: 'The type of call credentials to use for GRPC requests
                to the SDS server. This field can be set to one of the following:
                ACCESS_TOKEN: An access token is used as call credentials for the
                SDS server. GCE_VM: The local GCE VM service account credentials are
                used to access the SDS server. JWT_SERVICE_TOKEN: The user provisioned
                service account credentials are used to access the SDS server. FROM_PLUGIN:
                Custom authenticator credentials are used to access the SDS server.'
              enum:
              - ACCESS_TOKEN
              - FROM_PLUGIN
              - GCE_VM
              - INVALID
              - JWT_SERVICE_ACCOUNT
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              type: string
            fromPlugin:
              $ref: '#/schemas/MetadataCredentialsFromPlugin'
              description: Custom authenticator credentials.
            jwtServiceAccount:
              $ref: '#/schemas/ServiceAccountJwtAccessCredentials'
              description: This service account credentials are used as call credentials
                for the SDS server. This field is used only if callCredentialType
                is JWT_SERVICE_ACCOUNT.
          type: object
        ChannelCredentials:
          description: gRPC channel credentials to access the SDS server.
          id: ChannelCredentials
          properties:
            certificates:
              $ref: '#/schemas/TlsCertificatePaths'
              description: The call credentials to access the SDS server.
            channelCredentialType:
              description: 'The channel credentials to access the SDS server. This
                field can be set to one of the following: CERTIFICATES: Use TLS certificates
                to access the SDS server. GCE_VM: Use local GCE VM credentials to
                access the SDS server.'
              enum:
              - CERTIFICATES
              - GCE_VM
              - INVALID
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        GrpcServiceConfig:
          description: gRPC config to access the SDS server.
          id: GrpcServiceConfig
          properties:
            callCredentials:
              $ref: '#/schemas/CallCredentials'
              description: The call credentials to access the SDS server.
            channelCredentials:
              $ref: '#/schemas/ChannelCredentials'
              description: The channel credentials to access the SDS server.
            targetUri:
              description: The target URI of the SDS server.
              type: string
          type: object
        MetadataCredentialsFromPlugin:
          description: Custom authenticator credentials.
          id: MetadataCredentialsFromPlugin
          properties:
            name:
              description: Plugin name.
              type: string
            structConfig:
              description: A text proto that conforms to a Struct type definition
                interpreted by the plugin.
              type: string
          type: object
        SdsConfig:
          description: The configuration to access the SDS server.
          id: SdsConfig
          properties:
            grpcServiceConfig:
              $ref: '#/schemas/GrpcServiceConfig'
              description: The configuration to access the SDS server over GRPC.
          type: object
        ServerTlsSettings:
          description: The TLS settings for the server.
          id: ServerTlsSettings
          properties:
            proxyTlsContext:
              $ref: '#/schemas/TlsContext'
              description: Configures the mechanism to obtain security certificates
                and identity information.
            subjectAltNames:
              description: A list of alternate names to verify the subject identity
                in the certificate presented by the client.
              items:
                type: string
              type: array
            tlsMode:
              description: |-
                Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following:  
                - SIMPLE Secure connections with standard TLS semantics.  
                - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
              enum:
              - INVALID
              - MUTUAL
              - SIMPLE
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        ServiceAccountJwtAccessCredentials:
          description: JWT credentials for a service account.
          id: ServiceAccountJwtAccessCredentials
          properties:
            jsonKey:
              description: Service account key.
              type: string
            tokenLifetimeSeconds:
              description: The token lifetime seconds.
              format: int64
              type: string
          type: object
        SslPolicy:
          description: A SSL policy specifies the server-side support for SSL features.
            This can be attached to a TargetHttpsProxy or a TargetSslProxy. This affects
            connections between clients and the HTTPS or SSL proxy load balancer.
            They do not affect the connection between the load balancers and the backends.
          id: SslPolicy
          properties:
            customFeatures:
              description: |-
                A list of features enabled when the selected profile is CUSTOM. The
                - method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
              items:
                type: string
              type: array
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            fingerprint:
              description: |-
                Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a SslPolicy. An up-to-date fingerprint must be provided in order to update the SslPolicy, otherwise the request will fail with error 412 conditionNotMet.

                To see the latest fingerprint, make a get() request to retrieve an SslPolicy.
              format: byte
              type: string
            minTlsVersion:
              description: The minimum version of SSL protocol that can be used by
                the clients to establish a connection with the load balancer. This
                can be one of TLS_1_0, TLS_1_1, TLS_1_2.
              enum:
              - TLS_1_0
              - TLS_1_1
              - TLS_1_2
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
            name:
              description: Name of the resource. The name must be 1-63 characters
                long, and comply with RFC1035. Specifically, the name must be 1-63
                characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
                which means the first character must be a lowercase letter, and all
                following characters must be a dash, lowercase letter, or digit, except
                the last character, which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            profile:
              description: Profile specifies the set of SSL features that can be used
                by the load balancer when negotiating SSL with clients. This can be
                one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM,
                the set of SSL features to enable must be specified in the customFeatures
                field.
              enum:
              - COMPATIBLE
              - CUSTOM
              - MODERN
              - RESTRICTED
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              type: string
            tlsSettings:
              $ref: '#/schemas/ServerTlsSettings'
              description: Security settings for the proxy. This field is only applicable
                to a global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
          type: object
        TlsCertificateContext:
          description: Defines the mechanism to obtain the client or server certificate.
          id: TlsCertificateContext
          properties:
            certificatePaths:
              $ref: '#/schemas/TlsCertificatePaths'
              description: Specifies the certificate and private key paths. This field
                is applicable only if tlsCertificateSource is set to USE_PATH.
            certificateSource:
              description: Defines how TLS certificates are obtained.
              enum:
              - INVALID
              - USE_PATH
              - USE_SDS
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
            sdsConfig:
              $ref: '#/schemas/SdsConfig'
              description: Specifies the config to retrieve certificates through SDS.
                This field is applicable only if tlsCertificateSource is set to USE_SDS.
          type: object
        TlsCertificatePaths:
          description: The paths to the mounted TLS Certificates and private key.
          id: TlsCertificatePaths
          properties:
            certificatePath:
              description: The path to the file holding the client or server TLS certificate
                to use.
              type: string
            privateKeyPath:
              description: The path to the file holding the client or server private
                key.
              type: string
          type: object
        TlsContext:
          description: The TLS settings for the client or server.
          id: TlsContext
          properties:
            certificateContext:
              $ref: '#/schemas/TlsCertificateContext'
              description: Defines the mechanism to obtain the client or server certificate.
            validationContext:
              $ref: '#/schemas/TlsValidationContext'
              description: Defines the mechanism to obtain the Certificate Authority
                certificate to validate the client/server certificate. If omitted,
                the proxy will not validate the server or client certificate.
          type: object
        TlsValidationContext:
          description: Defines the mechanism to obtain the Certificate Authority certificate
            to validate the client/server certificate.
          id: TlsValidationContext
          properties:
            certificatePath:
              description: The path to the file holding the CA certificate to validate
                the client or server certificate.
              type: string
            sdsConfig:
              $ref: '#/schemas/SdsConfig'
              description: Specifies the config to retrieve certificates through SDS.
                This field is applicable only if tlsCertificateSource is set to USE_SDS.
            validationSource:
              description: Defines how TLS certificates are obtained.
              enum:
              - INVALID
              - USE_PATH
              - USE_SDS
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/SslPolicy'
      methodName: get
      schemas:
        CallCredentials:
          description: gRPC call credentials to access the SDS server.
          id: CallCredentials
          properties:
            accessToken:
              description: The access token that is used as call credential for the
                SDS server. This field is used only if callCredentialType is ACCESS_TOKEN.
              type: string
            callCredentialType:
              description: 'The type of call credentials to use for GRPC requests
                to the SDS server. This field can be set to one of the following:
                ACCESS_TOKEN: An access token is used as call credentials for the
                SDS server. GCE_VM: The local GCE VM service account credentials are
                used to access the SDS server. JWT_SERVICE_TOKEN: The user provisioned
                service account credentials are used to access the SDS server. FROM_PLUGIN:
                Custom authenticator credentials are used to access the SDS server.'
              enum:
              - ACCESS_TOKEN
              - FROM_PLUGIN
              - GCE_VM
              - INVALID
              - JWT_SERVICE_ACCOUNT
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              type: string
            fromPlugin:
              $ref: '#/schemas/MetadataCredentialsFromPlugin'
              description: Custom authenticator credentials.
            jwtServiceAccount:
              $ref: '#/schemas/ServiceAccountJwtAccessCredentials'
              description: This service account credentials are used as call credentials
                for the SDS server. This field is used only if callCredentialType
                is JWT_SERVICE_ACCOUNT.
          type: object
        ChannelCredentials:
          description: gRPC channel credentials to access the SDS server.
          id: ChannelCredentials
          properties:
            certificates:
              $ref: '#/schemas/TlsCertificatePaths'
              description: The call credentials to access the SDS server.
            channelCredentialType:
              description: 'The channel credentials to access the SDS server. This
                field can be set to one of the following: CERTIFICATES: Use TLS certificates
                to access the SDS server. GCE_VM: Use local GCE VM credentials to
                access the SDS server.'
              enum:
              - CERTIFICATES
              - GCE_VM
              - INVALID
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        GrpcServiceConfig:
          description: gRPC config to access the SDS server.
          id: GrpcServiceConfig
          properties:
            callCredentials:
              $ref: '#/schemas/CallCredentials'
              description: The call credentials to access the SDS server.
            channelCredentials:
              $ref: '#/schemas/ChannelCredentials'
              description: The channel credentials to access the SDS server.
            targetUri:
              description: The target URI of the SDS server.
              type: string
          type: object
        MetadataCredentialsFromPlugin:
          description: Custom authenticator credentials.
          id: MetadataCredentialsFromPlugin
          properties:
            name:
              description: Plugin name.
              type: string
            structConfig:
              description: A text proto that conforms to a Struct type definition
                interpreted by the plugin.
              type: string
          type: object
        SdsConfig:
          description: The configuration to access the SDS server.
          id: SdsConfig
          properties:
            grpcServiceConfig:
              $ref: '#/schemas/GrpcServiceConfig'
              description: The configuration to access the SDS server over GRPC.
          type: object
        ServerTlsSettings:
          description: The TLS settings for the server.
          id: ServerTlsSettings
          properties:
            proxyTlsContext:
              $ref: '#/schemas/TlsContext'
              description: Configures the mechanism to obtain security certificates
                and identity information.
            subjectAltNames:
              description: A list of alternate names to verify the subject identity
                in the certificate presented by the client.
              items:
                type: string
              type: array
            tlsMode:
              description: |-
                Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following:  
                - SIMPLE Secure connections with standard TLS semantics.  
                - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
              enum:
              - INVALID
              - MUTUAL
              - SIMPLE
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        ServiceAccountJwtAccessCredentials:
          description: JWT credentials for a service account.
          id: ServiceAccountJwtAccessCredentials
          properties:
            jsonKey:
              description: Service account key.
              type: string
            tokenLifetimeSeconds:
              description: The token lifetime seconds.
              format: int64
              type: string
          type: object
        SslPolicy:
          description: A SSL policy specifies the server-side support for SSL features.
            This can be attached to a TargetHttpsProxy or a TargetSslProxy. This affects
            connections between clients and the HTTPS or SSL proxy load balancer.
            They do not affect the connection between the load balancers and the backends.
          id: SslPolicy
          properties:
            creationTimestamp:
              description: '[Output Only] Creation timestamp in RFC3339 text format.'
              type: string
            customFeatures:
              description: |-
                A list of features enabled when the selected profile is CUSTOM. The
                - method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
              items:
                type: string
              type: array
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            enabledFeatures:
              description: '[Output Only] The list of features enabled in the SSL
                policy.'
              items:
                type: string
              type: array
            fingerprint:
              description: |-
                Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a SslPolicy. An up-to-date fingerprint must be provided in order to update the SslPolicy, otherwise the request will fail with error 412 conditionNotMet.

                To see the latest fingerprint, make a get() request to retrieve an SslPolicy.
              format: byte
              type: string
            id:
              description: '[Output Only] The unique identifier for the resource.
                This identifier is defined by the server.'
              format: uint64
              type: string
            kind:
              default: compute#sslPolicy
              description: '[Output only] Type of the resource. Always compute#sslPolicyfor
                SSL policies.'
              type: string
            minTlsVersion:
              description: The minimum version of SSL protocol that can be used by
                the clients to establish a connection with the load balancer. This
                can be one of TLS_1_0, TLS_1_1, TLS_1_2.
              enum:
              - TLS_1_0
              - TLS_1_1
              - TLS_1_2
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
            name:
              description: Name of the resource. The name must be 1-63 characters
                long, and comply with RFC1035. Specifically, the name must be 1-63
                characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
                which means the first character must be a lowercase letter, and all
                following characters must be a dash, lowercase letter, or digit, except
                the last character, which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            profile:
              description: Profile specifies the set of SSL features that can be used
                by the load balancer when negotiating SSL with clients. This can be
                one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM,
                the set of SSL features to enable must be specified in the customFeatures
                field.
              enum:
              - COMPATIBLE
              - CUSTOM
              - MODERN
              - RESTRICTED
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              type: string
            selfLink:
              description: '[Output Only] Server-defined URL for the resource.'
              type: string
            selfLinkWithId:
              description: '[Output Only] Server-defined URL for this resource with
                the resource id.'
              type: string
            tlsSettings:
              $ref: '#/schemas/ServerTlsSettings'
              description: Security settings for the proxy. This field is only applicable
                to a global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
            warnings:
              description: '[Output Only] If potential misconfigurations are detected
                for this SSL policy, this field will be populated with warning messages.'
              items:
                properties:
                  code:
                    description: '[Output Only] A warning code, if applicable. For
                      example, Compute Engine returns NO_RESULTS_ON_PAGE if there
                      are no results in the response.'
                    enum:
                    - CLEANUP_FAILED
                    - DEPRECATED_RESOURCE_USED
                    - DEPRECATED_TYPE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - EXPERIMENTAL_TYPE_USED
                    - EXTERNAL_API_WARNING
                    - FIELD_VALUE_OVERRIDEN
                    - INJECTED_KERNELS_DEPRECATED
                    - MISSING_TYPE_DEPENDENCY
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NOT_CRITICAL_ERROR
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                    - RESOURCE_NOT_DELETED
                    - SCHEMA_VALIDATION_IGNORED
                    - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                    - UNDECLARED_PROPERTIES
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    type: string
                  data:
                    description: |-
                      [Output Only] Metadata about this warning in key: value format. For example:
                      "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                    items:
                      properties:
                        key:
                          description: '[Output Only] A key that provides more detail
                            on the warning being returned. For example, for warnings
                            where there are no results in a list request for a particular
                            zone, this key might be scope and the key value might
                            be the zone name. Other examples might be a key indicating
                            a deprecated resource and a suggested replacement, or
                            a warning about invalid network settings (for example,
                            if an instance attempts to perform IP forwarding but is
                            not enabled for IP forwarding).'
                          type: string
                        value:
                          description: '[Output Only] A warning data value corresponding
                            to the key.'
                          type: string
                      type: object
                    type: array
                  message:
                    description: '[Output Only] A human-readable description of the
                      warning code.'
                    type: string
                type: object
              type: array
          type: object
        TlsCertificateContext:
          description: Defines the mechanism to obtain the client or server certificate.
          id: TlsCertificateContext
          properties:
            certificatePaths:
              $ref: '#/schemas/TlsCertificatePaths'
              description: Specifies the certificate and private key paths. This field
                is applicable only if tlsCertificateSource is set to USE_PATH.
            certificateSource:
              description: Defines how TLS certificates are obtained.
              enum:
              - INVALID
              - USE_PATH
              - USE_SDS
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
            sdsConfig:
              $ref: '#/schemas/SdsConfig'
              description: Specifies the config to retrieve certificates through SDS.
                This field is applicable only if tlsCertificateSource is set to USE_SDS.
          type: object
        TlsCertificatePaths:
          description: The paths to the mounted TLS Certificates and private key.
          id: TlsCertificatePaths
          properties:
            certificatePath:
              description: The path to the file holding the client or server TLS certificate
                to use.
              type: string
            privateKeyPath:
              description: The path to the file holding the client or server private
                key.
              type: string
          type: object
        TlsContext:
          description: The TLS settings for the client or server.
          id: TlsContext
          properties:
            certificateContext:
              $ref: '#/schemas/TlsCertificateContext'
              description: Defines the mechanism to obtain the client or server certificate.
            validationContext:
              $ref: '#/schemas/TlsValidationContext'
              description: Defines the mechanism to obtain the Certificate Authority
                certificate to validate the client/server certificate. If omitted,
                the proxy will not validate the server or client certificate.
          type: object
        TlsValidationContext:
          description: Defines the mechanism to obtain the Certificate Authority certificate
            to validate the client/server certificate.
          id: TlsValidationContext
          properties:
            certificatePath:
              description: The path to the file holding the CA certificate to validate
                the client or server certificate.
              type: string
            sdsConfig:
              $ref: '#/schemas/SdsConfig'
              description: Specifies the config to retrieve certificates through SDS.
                This field is applicable only if tlsCertificateSource is set to USE_SDS.
            validationSource:
              description: Defines how TLS certificates are obtained.
              enum:
              - INVALID
              - USE_PATH
              - USE_SDS
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/compute-alpha/types/sslPolicies?alt=json
  title: Compute Engine API
