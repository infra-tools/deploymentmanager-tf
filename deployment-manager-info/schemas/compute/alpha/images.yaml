type_info:
  documentationLink: https://developers.google.com/compute/docs/reference/latest/
  kind: deploymentmanager#typeInfo
  name: images
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        properties:
          archiveSizeBytes:
            description: Size of the image tar.gz archive stored in Google Cloud Storage
              (in bytes).
            format: int64
            type: string
          deprecated:
            $ref: '#/schemas/DeprecationStatus'
            description: The deprecation status associated with this image.
          description:
            description: An optional description of this resource. Provide this property
              when you create the resource.
            type: string
          diskSizeGb:
            description: Size of the image when restored onto a persistent disk (in
              GB).
            format: int64
            type: string
          family:
            description: The name of the image family to which this image belongs.
              You can create disks by specifying an image family instead of a specific
              image name. The image family always returns its latest image that is
              not deprecated. The name of the image family must comply with RFC1035.
            type: string
          forceCreate:
            description: Force image creation if true.
            location: query
            type: boolean
          guestOsFeatures:
            description: A list of features to enable on the guest operating system.
              Applicable only for bootable images. Read  Enabling guest operating
              system features to see a list of available options.
            items:
              $ref: '#/schemas/GuestOsFeature'
            type: array
          imageEncryptionKey:
            $ref: '#/schemas/CustomerEncryptionKey'
            description: |-
              Encrypts the image using a customer-supplied encryption key.

              After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image).

              Customer-supplied encryption keys do not protect access to metadata of the disk.

              If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
          labelFingerprint:
            description: |-
              A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet.

              To see the latest fingerprint, make a get() request to retrieve an image.
            format: byte
            type: string
          labels:
            additionalProperties:
              type: string
            description: Labels to apply to this image. These can be later modified
              by the setLabels method.
            type: object
          licenseCodes:
            description: Integer license codes indicating which licenses are attached
              to this image.
            items:
              format: int64
              type: string
            type: array
          licenses:
            description: Any applicable license URI.
            items:
              type: string
            type: array
          name:
            annotations:
              required:
              - compute.images.insert
            description: Name of the resource; provided by the client when the resource
              is created. The name must be 1-63 characters long, and comply with RFC1035.
              Specifically, the name must be 1-63 characters long and match the regular
              expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
              must be a lowercase letter, and all following characters must be a dash,
              lowercase letter, or digit, except the last character, which cannot
              be a dash.
            pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
            type: string
          rawDisk:
            description: The parameters of the raw disk image.
            properties:
              containerType:
                description: The format used to encode and transmit the block device,
                  which should be TAR. This is just a container and transmission format
                  and not a runtime format. Provided by the client when the disk image
                  is created.
                enum:
                - TAR
                enumDescriptions:
                - ''
                type: string
              sha1Checksum:
                description: An optional SHA1 checksum of the disk image before unpackaging
                  provided by the client when the disk image is created.
                pattern: '[a-f0-9]{40}'
                type: string
              source:
                annotations:
                  required:
                  - compute.images.insert
                description: The full Google Cloud Storage URL where the disk image
                  is stored. You must provide either this property or the sourceDisk
                  property but not both.
                type: string
            type: object
          requestId:
            description: |-
              An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

              For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

              The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
            location: query
            type: string
          shieldedInstanceInitialState:
            $ref: '#/schemas/InitialStateConfig'
            description: Set the secure boot keys of shielded instance.
          sourceDisk:
            description: |-
              URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:  
              - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
              - projects/project/zones/zone/disks/disk 
              - zones/zone/disks/disk
            type: string
          sourceDiskEncryptionKey:
            $ref: '#/schemas/CustomerEncryptionKey'
            description: The customer-supplied encryption key of the source disk.
              Required if the source disk is protected by a customer-supplied encryption
              key.
          sourceImage:
            description: |-
              URL of the source image used to create this image. This can be a full or valid partial URL. You must provide exactly one of:  
              - this property, or  
              - the rawDisk.source property, or  
              - the sourceDisk property   in order to create an image.
            type: string
          sourceImageEncryptionKey:
            $ref: '#/schemas/CustomerEncryptionKey'
            description: The customer-supplied encryption key of the source image.
              Required if the source image is protected by a customer-supplied encryption
              key.
          sourceSnapshot:
            description: |-
              URL of the source snapshot used to create this image. This can be a full or valid partial URL. You must provide exactly one of:  
              - this property, or  
              - the sourceImage property, or  
              - the rawDisk.source property, or  
              - the sourceDisk property   in order to create an image.
            type: string
          sourceSnapshotEncryptionKey:
            $ref: '#/schemas/CustomerEncryptionKey'
            description: The customer-supplied encryption key of the source snapshot.
              Required if the source snapshot is protected by a customer-supplied
              encryption key.
          sourceType:
            default: RAW
            description: The type of the image used to create this disk. The default
              and only value is RAW
            enum:
            - RAW
            enumDescriptions:
            - ''
            type: string
          storageLocations:
            description: GCS bucket storage location of the image (regional or multi-regional).
            items:
              type: string
            type: array
        type: object
      methodName: insert
      schemas:
        CustomerEncryptionKey:
          description: Represents a customer-supplied encryption key
          id: CustomerEncryptionKey
          properties:
            kmsKeyName:
              description: The name of the encryption key that is stored in Google
                Cloud KMS.
              type: string
            kmsKeyServiceAccount:
              type: string
            rawKey:
              description: Specifies a 256-bit customer-supplied encryption key, encoded
                in RFC 4648 base64 to either encrypt or decrypt this resource.
              type: string
            rsaEncryptedKey:
              description: |-
                Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.

                The key must meet the following requirements before you can provide it to Compute Engine:  
                - The key is wrapped using a RSA public key certificate provided by Google. 
                - After being wrapped, the key must be encoded in RFC 4648 base64 encoding.  Gets the RSA public key certificate provided by Google at:
                https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
              type: string
          type: object
        DeprecationStatus:
          description: Deprecation status for a public resource.
          id: DeprecationStatus
          properties:
            deleted:
              description: An optional RFC3339 timestamp on or after which the state
                of this resource is intended to change to DELETED. This is only informational
                and the status will not change unless the client explicitly changes
                it.
              type: string
            deprecated:
              description: An optional RFC3339 timestamp on or after which the state
                of this resource is intended to change to DEPRECATED. This is only
                informational and the status will not change unless the client explicitly
                changes it.
              type: string
            obsolete:
              description: An optional RFC3339 timestamp on or after which the state
                of this resource is intended to change to OBSOLETE. This is only informational
                and the status will not change unless the client explicitly changes
                it.
              type: string
            replacement:
              description: The URL of the suggested replacement for a deprecated resource.
                The suggested replacement resource must be the same kind of resource
                as the deprecated resource.
              type: string
            state:
              description: The deprecation state of this resource. This can be ACTIVE,
                DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the
                end of life date for an image, can use ACTIVE. Operations which create
                a new resource using a DEPRECATED resource will return successfully,
                but with a warning indicating the deprecated resource and recommending
                its replacement. Operations which use OBSOLETE or DELETED resources
                will be rejected and result in an error.
              enum:
              - ACTIVE
              - DELETED
              - DEPRECATED
              - OBSOLETE
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              type: string
          type: object
        FileContentBuffer:
          id: FileContentBuffer
          properties:
            content:
              description: The raw content in the secure keys file.
              format: byte
              type: string
            fileType:
              enum:
              - BIN
              - UNDEFINED
              - X509
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        GuestOsFeature:
          description: Guest OS features.
          id: GuestOsFeature
          properties:
            type:
              description: The ID of a supported feature. Read  Enabling guest operating
                system features to see a list of available options.
              enum:
              - FEATURE_TYPE_UNSPECIFIED
              - GVNIC
              - MULTI_IP_SUBNET
              - SECURE_BOOT
              - UEFI_COMPATIBLE
              - VIRTIO_SCSI_MULTIQUEUE
              - WINDOWS
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              type: string
          type: object
        Image:
          description: An Image resource. (== resource_for beta.images ==) (== resource_for
            v1.images ==)
          id: Image
          properties:
            archiveSizeBytes:
              description: Size of the image tar.gz archive stored in Google Cloud
                Storage (in bytes).
              format: int64
              type: string
            deprecated:
              $ref: '#/schemas/DeprecationStatus'
              description: The deprecation status associated with this image.
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            diskSizeGb:
              description: Size of the image when restored onto a persistent disk
                (in GB).
              format: int64
              type: string
            family:
              description: The name of the image family to which this image belongs.
                You can create disks by specifying an image family instead of a specific
                image name. The image family always returns its latest image that
                is not deprecated. The name of the image family must comply with RFC1035.
              type: string
            guestOsFeatures:
              description: A list of features to enable on the guest operating system.
                Applicable only for bootable images. Read  Enabling guest operating
                system features to see a list of available options.
              items:
                $ref: '#/schemas/GuestOsFeature'
              type: array
            imageEncryptionKey:
              $ref: '#/schemas/CustomerEncryptionKey'
              description: |-
                Encrypts the image using a customer-supplied encryption key.

                After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image).

                Customer-supplied encryption keys do not protect access to metadata of the disk.

                If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
            labelFingerprint:
              description: |-
                A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet.

                To see the latest fingerprint, make a get() request to retrieve an image.
              format: byte
              type: string
            labels:
              additionalProperties:
                type: string
              description: Labels to apply to this image. These can be later modified
                by the setLabels method.
              type: object
            licenseCodes:
              description: Integer license codes indicating which licenses are attached
                to this image.
              items:
                format: int64
                type: string
              type: array
            licenses:
              description: Any applicable license URI.
              items:
                type: string
              type: array
            name:
              annotations:
                required:
                - compute.images.insert
              description: Name of the resource; provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            rawDisk:
              description: The parameters of the raw disk image.
              properties:
                containerType:
                  description: The format used to encode and transmit the block device,
                    which should be TAR. This is just a container and transmission
                    format and not a runtime format. Provided by the client when the
                    disk image is created.
                  enum:
                  - TAR
                  enumDescriptions:
                  - ''
                  type: string
                sha1Checksum:
                  description: An optional SHA1 checksum of the disk image before
                    unpackaging provided by the client when the disk image is created.
                  pattern: '[a-f0-9]{40}'
                  type: string
                source:
                  annotations:
                    required:
                    - compute.images.insert
                  description: The full Google Cloud Storage URL where the disk image
                    is stored. You must provide either this property or the sourceDisk
                    property but not both.
                  type: string
              type: object
            shieldedInstanceInitialState:
              $ref: '#/schemas/InitialStateConfig'
              description: Set the secure boot keys of shielded instance.
            sourceDisk:
              description: |-
                URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:  
                - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
                - projects/project/zones/zone/disks/disk 
                - zones/zone/disks/disk
              type: string
            sourceDiskEncryptionKey:
              $ref: '#/schemas/CustomerEncryptionKey'
              description: The customer-supplied encryption key of the source disk.
                Required if the source disk is protected by a customer-supplied encryption
                key.
            sourceImage:
              description: |-
                URL of the source image used to create this image. This can be a full or valid partial URL. You must provide exactly one of:  
                - this property, or  
                - the rawDisk.source property, or  
                - the sourceDisk property   in order to create an image.
              type: string
            sourceImageEncryptionKey:
              $ref: '#/schemas/CustomerEncryptionKey'
              description: The customer-supplied encryption key of the source image.
                Required if the source image is protected by a customer-supplied encryption
                key.
            sourceSnapshot:
              description: |-
                URL of the source snapshot used to create this image. This can be a full or valid partial URL. You must provide exactly one of:  
                - this property, or  
                - the sourceImage property, or  
                - the rawDisk.source property, or  
                - the sourceDisk property   in order to create an image.
              type: string
            sourceSnapshotEncryptionKey:
              $ref: '#/schemas/CustomerEncryptionKey'
              description: The customer-supplied encryption key of the source snapshot.
                Required if the source snapshot is protected by a customer-supplied
                encryption key.
            sourceType:
              default: RAW
              description: The type of the image used to create this disk. The default
                and only value is RAW
              enum:
              - RAW
              enumDescriptions:
              - ''
              type: string
            storageLocations:
              description: GCS bucket storage location of the image (regional or multi-regional).
              items:
                type: string
              type: array
          type: object
        InitialStateConfig:
          description: Initial State for shielded instance, these are public keys
            which are safe to store in public
          id: InitialStateConfig
          properties:
            dbs:
              description: The Key Database (db).
              items:
                $ref: '#/schemas/FileContentBuffer'
              type: array
            dbxs:
              description: The forbidden key database (dbx).
              items:
                $ref: '#/schemas/FileContentBuffer'
              type: array
            keks:
              description: The Key Exchange Key (KEK).
              items:
                $ref: '#/schemas/FileContentBuffer'
              type: array
            pk:
              $ref: '#/schemas/FileContentBuffer'
              description: The Platform Key (PK).
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Image'
      methodName: get
      schemas:
        CustomerEncryptionKey:
          description: Represents a customer-supplied encryption key
          id: CustomerEncryptionKey
          properties:
            kmsKeyName:
              description: The name of the encryption key that is stored in Google
                Cloud KMS.
              type: string
            kmsKeyServiceAccount:
              type: string
            rawKey:
              description: Specifies a 256-bit customer-supplied encryption key, encoded
                in RFC 4648 base64 to either encrypt or decrypt this resource.
              type: string
            rsaEncryptedKey:
              description: |-
                Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.

                The key must meet the following requirements before you can provide it to Compute Engine:  
                - The key is wrapped using a RSA public key certificate provided by Google. 
                - After being wrapped, the key must be encoded in RFC 4648 base64 encoding.  Gets the RSA public key certificate provided by Google at:
                https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
              type: string
            sha256:
              description: '[Output only] The RFC 4648 base64 encoded SHA-256 hash
                of the customer-supplied encryption key that protects this resource.'
              type: string
          type: object
        DeprecationStatus:
          description: Deprecation status for a public resource.
          id: DeprecationStatus
          properties:
            deleted:
              description: An optional RFC3339 timestamp on or after which the state
                of this resource is intended to change to DELETED. This is only informational
                and the status will not change unless the client explicitly changes
                it.
              type: string
            deprecated:
              description: An optional RFC3339 timestamp on or after which the state
                of this resource is intended to change to DEPRECATED. This is only
                informational and the status will not change unless the client explicitly
                changes it.
              type: string
            obsolete:
              description: An optional RFC3339 timestamp on or after which the state
                of this resource is intended to change to OBSOLETE. This is only informational
                and the status will not change unless the client explicitly changes
                it.
              type: string
            replacement:
              description: The URL of the suggested replacement for a deprecated resource.
                The suggested replacement resource must be the same kind of resource
                as the deprecated resource.
              type: string
            state:
              description: The deprecation state of this resource. This can be ACTIVE,
                DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the
                end of life date for an image, can use ACTIVE. Operations which create
                a new resource using a DEPRECATED resource will return successfully,
                but with a warning indicating the deprecated resource and recommending
                its replacement. Operations which use OBSOLETE or DELETED resources
                will be rejected and result in an error.
              enum:
              - ACTIVE
              - DELETED
              - DEPRECATED
              - OBSOLETE
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              type: string
          type: object
        FileContentBuffer:
          id: FileContentBuffer
          properties:
            content:
              description: The raw content in the secure keys file.
              format: byte
              type: string
            fileType:
              enum:
              - BIN
              - UNDEFINED
              - X509
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        GuestOsFeature:
          description: Guest OS features.
          id: GuestOsFeature
          properties:
            type:
              description: The ID of a supported feature. Read  Enabling guest operating
                system features to see a list of available options.
              enum:
              - FEATURE_TYPE_UNSPECIFIED
              - GVNIC
              - MULTI_IP_SUBNET
              - SECURE_BOOT
              - UEFI_COMPATIBLE
              - VIRTIO_SCSI_MULTIQUEUE
              - WINDOWS
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              type: string
          type: object
        Image:
          description: An Image resource. (== resource_for beta.images ==) (== resource_for
            v1.images ==)
          id: Image
          properties:
            archiveSizeBytes:
              description: Size of the image tar.gz archive stored in Google Cloud
                Storage (in bytes).
              format: int64
              type: string
            creationTimestamp:
              description: '[Output Only] Creation timestamp in RFC3339 text format.'
              type: string
            deprecated:
              $ref: '#/schemas/DeprecationStatus'
              description: The deprecation status associated with this image.
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            diskSizeGb:
              description: Size of the image when restored onto a persistent disk
                (in GB).
              format: int64
              type: string
            family:
              description: The name of the image family to which this image belongs.
                You can create disks by specifying an image family instead of a specific
                image name. The image family always returns its latest image that
                is not deprecated. The name of the image family must comply with RFC1035.
              type: string
            guestOsFeatures:
              description: A list of features to enable on the guest operating system.
                Applicable only for bootable images. Read  Enabling guest operating
                system features to see a list of available options.
              items:
                $ref: '#/schemas/GuestOsFeature'
              type: array
            id:
              description: '[Output Only] The unique identifier for the resource.
                This identifier is defined by the server.'
              format: uint64
              type: string
            imageEncryptionKey:
              $ref: '#/schemas/CustomerEncryptionKey'
              description: |-
                Encrypts the image using a customer-supplied encryption key.

                After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image).

                Customer-supplied encryption keys do not protect access to metadata of the disk.

                If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
            kind:
              default: compute#image
              description: '[Output Only] Type of the resource. Always compute#image
                for images.'
              type: string
            labelFingerprint:
              description: |-
                A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet.

                To see the latest fingerprint, make a get() request to retrieve an image.
              format: byte
              type: string
            labels:
              additionalProperties:
                type: string
              description: Labels to apply to this image. These can be later modified
                by the setLabels method.
              type: object
            licenseCodes:
              description: Integer license codes indicating which licenses are attached
                to this image.
              items:
                format: int64
                type: string
              type: array
            licenses:
              description: Any applicable license URI.
              items:
                type: string
              type: array
            name:
              annotations:
                required:
                - compute.images.insert
              description: Name of the resource; provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            rawDisk:
              description: The parameters of the raw disk image.
              properties:
                containerType:
                  description: The format used to encode and transmit the block device,
                    which should be TAR. This is just a container and transmission
                    format and not a runtime format. Provided by the client when the
                    disk image is created.
                  enum:
                  - TAR
                  enumDescriptions:
                  - ''
                  type: string
                sha1Checksum:
                  description: An optional SHA1 checksum of the disk image before
                    unpackaging provided by the client when the disk image is created.
                  pattern: '[a-f0-9]{40}'
                  type: string
                source:
                  annotations:
                    required:
                    - compute.images.insert
                  description: The full Google Cloud Storage URL where the disk image
                    is stored. You must provide either this property or the sourceDisk
                    property but not both.
                  type: string
              type: object
            selfLink:
              description: '[Output Only] Server-defined URL for the resource.'
              type: string
            selfLinkWithId:
              description: "[Output Only] Server-defined URL for this resource's resource\
                \ id."
              type: string
            shieldedInstanceInitialState:
              $ref: '#/schemas/InitialStateConfig'
              description: Set the secure boot keys of shielded instance.
            sourceDisk:
              description: |-
                URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:  
                - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
                - projects/project/zones/zone/disks/disk 
                - zones/zone/disks/disk
              type: string
            sourceDiskEncryptionKey:
              $ref: '#/schemas/CustomerEncryptionKey'
              description: The customer-supplied encryption key of the source disk.
                Required if the source disk is protected by a customer-supplied encryption
                key.
            sourceDiskId:
              description: '[Output Only] The ID value of the disk used to create
                this image. This value may be used to determine whether the image
                was taken from the current or a previous instance of a given disk
                name.'
              type: string
            sourceImage:
              description: |-
                URL of the source image used to create this image. This can be a full or valid partial URL. You must provide exactly one of:  
                - this property, or  
                - the rawDisk.source property, or  
                - the sourceDisk property   in order to create an image.
              type: string
            sourceImageEncryptionKey:
              $ref: '#/schemas/CustomerEncryptionKey'
              description: The customer-supplied encryption key of the source image.
                Required if the source image is protected by a customer-supplied encryption
                key.
            sourceImageId:
              description: '[Output Only] The ID value of the image used to create
                this image. This value may be used to determine whether the image
                was taken from the current or a previous instance of a given image
                name.'
              type: string
            sourceSnapshot:
              description: |-
                URL of the source snapshot used to create this image. This can be a full or valid partial URL. You must provide exactly one of:  
                - this property, or  
                - the sourceImage property, or  
                - the rawDisk.source property, or  
                - the sourceDisk property   in order to create an image.
              type: string
            sourceSnapshotEncryptionKey:
              $ref: '#/schemas/CustomerEncryptionKey'
              description: The customer-supplied encryption key of the source snapshot.
                Required if the source snapshot is protected by a customer-supplied
                encryption key.
            sourceSnapshotId:
              description: '[Output Only] The ID value of the snapshot used to create
                this image. This value may be used to determine whether the snapshot
                was taken from the current or a previous instance of a given snapshot
                name.'
              type: string
            sourceType:
              default: RAW
              description: The type of the image used to create this disk. The default
                and only value is RAW
              enum:
              - RAW
              enumDescriptions:
              - ''
              type: string
            status:
              description: '[Output Only] The status of the image. An image can be
                used to create other resources, such as instances, only after the
                image has been successfully created and the status is set to READY.
                Possible values are FAILED, PENDING, or READY.'
              enum:
              - DELETING
              - FAILED
              - PENDING
              - READY
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              type: string
            storageLocations:
              description: GCS bucket storage location of the image (regional or multi-regional).
              items:
                type: string
              type: array
          type: object
        InitialStateConfig:
          description: Initial State for shielded instance, these are public keys
            which are safe to store in public
          id: InitialStateConfig
          properties:
            dbs:
              description: The Key Database (db).
              items:
                $ref: '#/schemas/FileContentBuffer'
              type: array
            dbxs:
              description: The forbidden key database (dbx).
              items:
                $ref: '#/schemas/FileContentBuffer'
              type: array
            keks:
              description: The Key Exchange Key (KEK).
              items:
                $ref: '#/schemas/FileContentBuffer'
              type: array
            pk:
              $ref: '#/schemas/FileContentBuffer'
              description: The Platform Key (PK).
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/compute-alpha/types/images?alt=json
  title: Compute Engine API
