type_info:
  documentationLink: https://developers.google.com/compute/docs/reference/latest/
  kind: deploymentmanager#typeInfo
  name: regionUrlMaps
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        properties:
          defaultRouteAction:
            $ref: '#/schemas/HttpRouteAction'
            description: |-
              defaultRouteAction takes effect when none of the  hostRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any  weightedBackendServices.
              Only one of defaultRouteAction or defaultUrlRedirect must be set.
          defaultService:
            description: |-
              The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified.
              Only one of defaultService, defaultUrlRedirect  or defaultRouteAction.weightedBackendService must be set.
            type: string
          defaultUrlRedirect:
            $ref: '#/schemas/HttpRedirectAction'
            description: |-
              When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect.
              If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
          description:
            description: An optional description of this resource. Provide this property
              when you create the resource.
            type: string
          fingerprint:
            description: |-
              Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap, otherwise the request will fail with error 412 conditionNotMet.

              To see the latest fingerprint, make a get() request to retrieve a UrlMap.
            format: byte
            type: string
          headerAction:
            $ref: '#/schemas/HttpHeaderAction'
            description: |-
              Specifies changes to request and response headers that need to take effect for the selected backendService.
              The headerAction specified here take effect after headerAction specified under pathMatcher.
          hostRules:
            description: The list of HostRules to use against the URL.
            items:
              $ref: '#/schemas/HostRule'
            type: array
          name:
            description: Name of the resource. Provided by the client when the resource
              is created. The name must be 1-63 characters long, and comply with RFC1035.
              Specifically, the name must be 1-63 characters long and match the regular
              expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
              must be a lowercase letter, and all following characters must be a dash,
              lowercase letter, or digit, except the last character, which cannot
              be a dash.
            pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
            type: string
          pathMatchers:
            description: The list of named PathMatchers to use against the URL.
            items:
              $ref: '#/schemas/PathMatcher'
            type: array
          region:
            description: Name of the region scoping this request.
            location: path
            pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
            required: true
            type: string
          requestId:
            description: 'begin_interface: MixerMutationRequestBuilder Request ID
              to support idempotency.'
            location: query
            type: string
          tests:
            description: The list of expected URL mapping tests. Request to update
              this UrlMap will succeed only if all of the test cases pass. You can
              specify a maximum of 100 tests per UrlMap.
            items:
              $ref: '#/schemas/UrlMapTest'
            type: array
        type: object
      methodName: insert
      schemas:
        CorsPolicy:
          description: The specification for allowing client side cross-origin requests.
            Please see W3C Recommendation for Cross Origin Resource Sharing
          id: CorsPolicy
          properties:
            allowCredentials:
              description: |-
                In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header.
                Default is false.
              type: boolean
            allowHeaders:
              description: Specifies the content for the Access-Control-Allow-Headers
                header.
              items:
                type: string
              type: array
            allowMethods:
              description: Specifies the content for the Access-Control-Allow-Methods
                header.
              items:
                type: string
              type: array
            allowOriginRegexes:
              description: |-
                Specifies the regualar expression patterns that match allowed origins. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript 
                An origin is allowed if it matches either allow_origins or allow_origin_regex.
              items:
                type: string
              type: array
            allowOrigins:
              description: |-
                Specifies the list of origins that will be allowed to do CORS requests.
                An origin is allowed if it matches either allow_origins or allow_origin_regex.
              items:
                type: string
              type: array
            disabled:
              description: If true, specifies the CORS policy is disabled. The default
                value of false, which indicates that the CORS policy is in effect.
              type: boolean
            exposeHeaders:
              description: Specifies the content for the Access-Control-Expose-Headers
                header.
              items:
                type: string
              type: array
            maxAge:
              description: Specifies how long the results of a preflight request can
                be cached. This translates to the content for the Access-Control-Max-Age
                header.
              format: int32
              type: integer
          type: object
        Duration:
          description: A Duration represents a fixed-length span of time represented
            as a count of seconds and fractions of seconds at nanosecond resolution.
            It is independent of any calendar and concepts like "day" or "month".
            Range is approximately 10,000 years.
          id: Duration
          properties:
            nanos:
              description: Span of time that's a fraction of a second at nanosecond
                resolution. Durations less than one second are represented with a
                0 `seconds` field and a positive `nanos` field. Must be from 0 to
                999,999,999 inclusive.
              format: int32
              type: integer
            seconds:
              description: 'Span of time at a resolution of a second. Must be from
                0 to 315,576,000,000 inclusive. Note: these bounds are computed from:
                60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
              format: int64
              type: string
          type: object
        HostRule:
          description: UrlMaps A host-matching rule for a URL. If matched, will use
            the named PathMatcher to select the BackendService.
          id: HostRule
          properties:
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            hosts:
              description: The list of host patterns to match. They must be valid
                hostnames, except * will match any string of ([a-z0-9-.]*). In that
                case, * must be the first character and must be followed in the pattern
                by either - or ..
              items:
                type: string
              type: array
            pathMatcher:
              description: The name of the PathMatcher to use to match the path portion
                of the URL if the hostRule matches the URL's host portion.
              type: string
          type: object
        HttpFaultAbort:
          description: Specification for how requests are aborted as part of fault
            injection.
          id: HttpFaultAbort
          properties:
            httpStatus:
              description: |-
                The HTTP status code used to abort the request.
                The value must be between 200 and 599 inclusive.
              format: uint32
              type: integer
            percentage:
              description: |-
                The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection.
                The value must be between 0.0 and 100.0 inclusive.
              format: double
              type: number
          type: object
        HttpFaultDelay:
          description: Specifies the delay introduced by Loadbalancer before forwarding
            the request to the backend service as part of fault injection.
          id: HttpFaultDelay
          properties:
            fixedDelay:
              $ref: '#/schemas/Duration'
              description: Specifies the value of the fixed delay interval.
            percentage:
              description: |-
                The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection.
                The value must be between 0.0 and 100.0 inclusive.
              format: double
              type: number
          type: object
        HttpFaultInjection:
          description: The specification for fault injection introduced into traffic
            to test the resiliency of clients to backend service failure. As part
            of fault injection, when clients send requests to a backend service, delays
            can be introduced by Loadbalancer on a percentage of requests before sending
            those request to the backend service. Similarly requests from clients
            can be aborted by the Loadbalancer for a percentage of requests.
          id: HttpFaultInjection
          properties:
            abort:
              $ref: '#/schemas/HttpFaultAbort'
              description: The specification for how client requests are aborted as
                part of fault injection.
            delay:
              $ref: '#/schemas/HttpFaultDelay'
              description: The specification for how client requests are delayed as
                part of fault injection, before being sent to a backend service.
          type: object
        HttpHeaderAction:
          description: The request and response header transformations that take effect
            before the request is passed along to the selected backendService.
          id: HttpHeaderAction
          properties:
            requestHeadersToAdd:
              description: Headers to add to a matching request prior to forwarding
                the request to the backendService.
              items:
                $ref: '#/schemas/HttpHeaderOption'
              type: array
            requestHeadersToRemove:
              description: A list of header names for headers that need to be removed
                from the request prior to forwarding the request to the backendService.
              items:
                type: string
              type: array
            responseHeadersToAdd:
              description: Headers to add the response prior to sending the response
                back to the client.
              items:
                $ref: '#/schemas/HttpHeaderOption'
              type: array
            responseHeadersToRemove:
              description: A list of header names for headers that need to be removed
                from the response prior to sending the response back to the client.
              items:
                type: string
              type: array
          type: object
        HttpHeaderMatch:
          description: matchRule criteria for request header matches.
          id: HttpHeaderMatch
          properties:
            exactMatch:
              description: |-
                The value should exactly match contents of exactMatch.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: string
            headerName:
              description: |-
                The name of the HTTP header to match.
                For matching against the HTTP request's authority, use a headerMatch with the header name ":authority".
                For matching a request's method, use the headerName ":method".
              type: string
            invertMatch:
              description: |-
                If set to false, the headerMatch is considered a match if the match criteria above are met. If set to true, the headerMatch is considered a match if the match criteria above are NOT met.
                The default setting is false.
              type: boolean
            prefixMatch:
              description: |-
                The value of the header must start with the contents of prefixMatch.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: string
            presentMatch:
              description: |-
                A header with the contents of headerName must exist. The match takes place whether or not the request's header has a value or not.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: boolean
            rangeMatch:
              $ref: '#/schemas/Int64RangeMatch'
              description: |-
                The header value must be an integer and its value must be in the range specified in rangeMatch. If the header does not contain an integer, number or is empty, the match fails.
                For example for a range [-5, 0]  
                - -3 will match. 
                - 0 will not match. 
                - 0.25 will not match. 
                - -3someString will not match.  
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
            regexMatch:
              description: |-
                The value of the header must match the regualar expression specified in regexMatch. For regular expression grammar, please see:  en.cppreference.com/w/cpp/regex/ecmascript 
                For matching against a port specified in the HTTP request, use a headerMatch with headerName set to PORT and a regular expression that satisfies the RFC2616 Host header's port specifier.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: string
            suffixMatch:
              description: |-
                The value of the header must end with the contents of suffixMatch.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: string
          type: object
        HttpHeaderOption:
          description: Specification determining how headers are added to requests
            or responses.
          id: HttpHeaderOption
          properties:
            headerName:
              description: The name of the header.
              type: string
            headerValue:
              description: The value of the header to add.
              type: string
            replace:
              description: |-
                If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.
                The default value is false.
              type: boolean
          type: object
        HttpQueryParameterMatch:
          description: HttpRouteRuleMatch criteria for a request's query parameter.
          id: HttpQueryParameterMatch
          properties:
            exactMatch:
              description: |-
                The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch.
                Only one of presentMatch, exactMatch and regexMatch must be set.
              type: string
            name:
              description: The name of the query parameter to match. The query parameter
                must exist in the request, in the absence of which the request match
                fails.
              type: string
            presentMatch:
              description: |-
                Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not.
                Only one of presentMatch, exactMatch and regexMatch must be set.
              type: boolean
            regexMatch:
              description: |-
                The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For the regular expression grammar, please see en.cppreference.com/w/cpp/regex/ecmascript 
                Only one of presentMatch, exactMatch and regexMatch must be set.
              type: string
          type: object
        HttpRedirectAction:
          description: Specifies settings for an HTTP redirect.
          id: HttpRedirectAction
          properties:
            hostRedirect:
              description: |-
                The host that will be used in the redirect response instead of the one that was supplied in the request.
                The value must be between 1 and 255 characters.
              type: string
            httpsRedirect:
              description: |-
                If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request.
                This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted.
                The default is set to false.
              type: boolean
            pathRedirect:
              description: |-
                The path that will be used in the redirect response instead of the one that was supplied in the request.
                Only one of pathRedirect or prefixRedirect must be specified.
                The value must be between 1 and 1024 characters.
              type: string
            prefixRedirect:
              description: The prefix that replaces the prefixMatch specified in the
                HttpRouteRuleMatch, retaining the remaining portion of the URL before
                redirecting the request.
              type: string
            redirectResponseCode:
              description: |-
                The HTTP Status code to use for this RedirectAction.
                Supported values are:  
                - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. 
                - FOUND, which corresponds to 302. 
                - SEE_OTHER which corresponds to 303. 
                - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained. 
                - PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.
              enum:
              - FOUND
              - MOVED_PERMANENTLY_DEFAULT
              - PERMANENT_REDIRECT
              - SEE_OTHER
              - TEMPORARY_REDIRECT
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              type: string
            stripQuery:
              description: |-
                If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained.
                The default is set to false.
              type: boolean
          type: object
        HttpRetryPolicy:
          description: The retry policy associates with HttpRouteRule
          id: HttpRetryPolicy
          properties:
            numRetries:
              description: Specifies the allowed number retries. This number must
                be > 0.
              format: uint32
              type: integer
            perTryTimeout:
              $ref: '#/schemas/Duration'
              description: Specifies a non-zero timeout per retry attempt.
            retryConditions:
              description: |-
                Specfies one or more conditions when this retry rule applies. Valid values are:  
                - 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams. 
                - gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.
                - 
                - connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts. 
                - retriable-4xx: Loadbalancer will retry for retriable 4xx response codes. Currently the only retriable error supported is 409. 
                - refused-stream:Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. 
                - cancelledLoadbalancer will retry if the gRPC status code in the response header is set to cancelled 
                - deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded 
                - resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted 
                - unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable
              items:
                type: string
              type: array
          type: object
        HttpRouteAction:
          id: HttpRouteAction
          properties:
            corsPolicy:
              $ref: '#/schemas/CorsPolicy'
              description: The specification for allowing client side cross-origin
                requests. Please see W3C Recommendation for Cross Origin Resource
                Sharing
            faultInjectionPolicy:
              $ref: '#/schemas/HttpFaultInjection'
              description: |-
                The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests.
                timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy.
            requestMirrorPolicy:
              $ref: '#/schemas/RequestMirrorPolicy'
              description: Specifies the policy on how requests intended for the route's
                backends are shadowed to a separate mirrored backend service. Loadbalancer
                does not wait for responses from the shadow service. Prior to sending
                traffic to the shadow service, the host / authority header is suffixed
                with -shadow.
            retryPolicy:
              $ref: '#/schemas/HttpRetryPolicy'
              description: Specifies the retry policy associated with this route.
            timeout:
              $ref: '#/schemas/Duration'
              description: |-
                Specifies the timeout for the selected route. Timeout is computed from the time the request is has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
                If not specified, the default value is 15 seconds.
            urlRewrite:
              $ref: '#/schemas/UrlRewrite'
              description: The spec to modify the URL of the request, prior to forwarding
                the request to the matched service
            weightedBackendServices:
              description: |-
                A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one  weightedBackendService with weight set to a non 0 number.
                Once a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.
              items:
                $ref: '#/schemas/WeightedBackendService'
              type: array
          type: object
        HttpRouteRule:
          description: An HttpRouteRule specifies how to match an HTTP request and
            the corresponding routing action that load balancing proxies will perform.
          id: HttpRouteRule
          properties:
            headerAction:
              $ref: '#/schemas/HttpHeaderAction'
              description: |-
                Specifies changes to request and response headers that need to take effect for the selected backendService.
                The headerAction specified here are applied before the matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].routeAction.weightedBackendService.backendServiceWeightAction[].headerAction
            matchRules:
              items:
                $ref: '#/schemas/HttpRouteRuleMatch'
              type: array
            routeAction:
              $ref: '#/schemas/HttpRouteAction'
              description: |-
                In response to a matching matchRule, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If  routeAction specifies any  weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any  weightedBackendServices.
                Only one of routeAction or urlRedirect must be set.
            urlRedirect:
              $ref: '#/schemas/HttpRedirectAction'
              description: |-
                When this rule is matched, the request is redirected to a URL specified by urlRedirect.
                If urlRedirect is specified, service or routeAction must not be set.
          type: object
        HttpRouteRuleMatch:
          description: HttpRouteRuleMatch specifies a set of criteria for matching
            requests to an HttpRouteRule. All specified criteria must be satisfied
            for a match to occur.
          id: HttpRouteRuleMatch
          properties:
            fullPathMatch:
              description: |-
                For satifying the matchRule condition, the path of the request must exactly match the value specified in fullPathMatch after removing any query parameters and anchor that may be part of the original URL.
                FullPathMatch must be between 1 and 1024 characters.
                Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
              type: string
            headerMatches:
              description: Specifies a list of header match criteria, all of which
                must match corresponding headers in the request.
              items:
                $ref: '#/schemas/HttpHeaderMatch'
              type: array
            ignoreCase:
              description: |-
                Specifies that prefixMatch and fullPathMatch matches are case sensitive.
                The default value is false.
                caseSensitive must not be used with regexMatch.
              type: boolean
            metadataFilters:
              description: |-
                Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant routing configuration is made available to those proxies.
                For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata.
                metadataFilters specified here can be overrides those specified in ForwardingRule that refers to this UrlMap.
                metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.
              items:
                $ref: '#/schemas/MetadataFilter'
              type: array
            prefixMatch:
              description: |-
                For satifying the matchRule condition, the request's path must begin with the specified prefixMatch. prefixMatch must begin with a /.
                The value must be between 1 and 1024 characters.
                Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
              type: string
            queryParameterMatches:
              description: Specifies a list of query parameter match criteria, all
                of which must match corresponding query parameters in the request.
              items:
                $ref: '#/schemas/HttpQueryParameterMatch'
              type: array
            regexMatch:
              description: |-
                For satifying the matchRule condition, the path of the request must satisfy the regular expression specified in regexMatch after removing any query parameters and anchor supplied with the original URL. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript 
                Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
              type: string
          type: object
        Int64RangeMatch:
          description: HttpRouteRuleMatch criteria for field values that must stay
            within the specified integer range.
          id: Int64RangeMatch
          properties:
            rangeEnd:
              description: The end of the range (exclusive) in signed long integer
                format.
              format: int64
              type: string
            rangeStart:
              description: The start of the range (inclusive) in signed long integer
                format.
              format: int64
              type: string
          type: object
        MetadataFilter:
          description: |-
            Opaque filter criteria used by loadbalancers to restrict routing configuration to a limited set of loadbalancing proxies. Proxies and sidecars involved in loadbalancing would typically present metadata to the loadbalancers which need to match criteria specified here. If a match takes place, the relevant routing configuration is made available to those proxies.
            For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata.
            An example for using metadataFilters would be: if loadbalancing involves  Envoys, they will only receive routing configuration when values in metadataFilters match values supplied in <a href="https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/core/base.proto#envoy-api-msg-core-node" Node metadata of their XDS requests to loadbalancers.
          id: MetadataFilter
          properties:
            filterLabels:
              description: |-
                The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria 
                This list must not be empty and can have at the most 64 entries.
              items:
                $ref: '#/schemas/MetadataFilterLabelMatch'
              type: array
            filterMatchCriteria:
              description: |-
                Specifies how individual filterLabel matches within the list of filterLabels contribute towards the overall metadataFilter match.
                Supported values are:  
                - MATCH_ANY: At least one of the filterLabels must have a matching label in the provided metadata. 
                - MATCH_ALL: All filterLabels must have matching labels in the provided metadata.
              enum:
              - MATCH_ALL
              - MATCH_ANY
              - NOT_SET
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        MetadataFilterLabelMatch:
          description: MetadataFilter label name value pairs that are expected to
            match corresponding labels presented as metadata to the loadbalancer.
          id: MetadataFilterLabelMatch
          properties:
            name:
              description: |-
                Name of metadata label.
                The name can have a maximum length of 1024 characters and must be at least 1 character long.
              type: string
            value:
              description: |-
                The value of the label must match the specified value.
                value can have a maximum length of 1024 characters.
              type: string
          type: object
        PathMatcher:
          description: A matcher for the path portion of the URL. The BackendService
            from the longest-matched rule will serve the URL. If no rule was matched,
            the default service will be used.
          id: PathMatcher
          properties:
            defaultRouteAction:
              $ref: '#/schemas/HttpRouteAction'
              description: |-
                defaultRouteAction takes effect when none of the  pathRules or routeRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any  weightedBackendServices.
                Only one of defaultRouteAction or defaultUrlRedirect must be set.
            defaultService:
              description: |-
                The full or partial URL to the BackendService resource. This will be used if none of the pathRules or routeRules defined by this PathMatcher are matched. For example, the following are all valid URLs to a BackendService resource:  
                - https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService 
                - compute/v1/projects/project/global/backendServices/backendService 
                - global/backendServices/backendService  If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if defaultRouteAction specifies any weightedBackendServices, defaultService must not be specified.
                Only one of defaultService, defaultUrlRedirect  or defaultRouteAction.weightedBackendService must be set.
                Authorization requires one or more of the following Google IAM permissions on the specified resource default_service:  
                - compute.backendBuckets.use 
                - compute.backendServices.use
              type: string
            defaultUrlRedirect:
              $ref: '#/schemas/HttpRedirectAction'
              description: |-
                When when none of the specified pathRules or routeRules match, the request is redirected to a URL specified by defaultUrlRedirect.
                If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            headerAction:
              $ref: '#/schemas/HttpHeaderAction'
              description: |-
                Specifies changes to request and response headers that need to take effect for the selected backendService.
                HeaderAction specified here are applied after the matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
            name:
              description: The name to which this PathMatcher is referred by the HostRule.
              type: string
            pathRules:
              description: |-
                The list of path rules. Use this list instead of routeRules when routing based on simple path matching is all that's required. The order by which path rules are specified does not matter. Matches are always done on the longest-path-first basis.
                For example: a pathRule with a path /a/b/c/* will match before /a/b/* irrespective of the order in which those paths appear in this list.
                Only one of pathRules or routeRules must be set.
              items:
                $ref: '#/schemas/PathRule'
              type: array
            routeRules:
              description: |-
                The list of ordered HTTP route rules. Use this list instead of pathRules when advanced route matching and routing actions are desired. The order of specifying routeRules matters: the first rule that matches will cause its specified routing action to take effect.
                Only one of pathRules or routeRules must be set.
              items:
                $ref: '#/schemas/HttpRouteRule'
              type: array
          type: object
        PathRule:
          description: A path-matching rule for a URL. If matched, will use the specified
            BackendService to handle the traffic arriving at this URL.
          id: PathRule
          properties:
            paths:
              description: 'The list of path patterns to match. Each must start with
                / and the only place a * is allowed is at the end following a /. The
                string fed to the path matcher does not include any text after the
                first ? or #, and those chars are not allowed here.'
              items:
                type: string
              type: array
            routeAction:
              $ref: '#/schemas/HttpRouteAction'
              description: |-
                In response to a matching path, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If routeAction specifies any  weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any  weightedBackendServices.
                Only one of routeAction or urlRedirect must be set.
            service:
              description: |-
                The full or partial URL of the backend service resource to which traffic is directed if this rule is matched. If routeAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendService s. Conversely, if routeAction specifies any  weightedBackendServices, service must not be specified.
                Only one of urlRedirect, service or routeAction.weightedBackendService must be set.
              type: string
            urlRedirect:
              $ref: '#/schemas/HttpRedirectAction'
              description: |-
                When a path pattern is matched, the request is redirected to a URL specified by urlRedirect.
                If urlRedirect is specified, service or routeAction must not be set.
          type: object
        RequestMirrorPolicy:
          description: A policy that specifies how requests intended for the route's
            backends are shadowed to a separate mirrored backend service. Loadbalancer
            does not wait for responses from the shadow service. Prior to sending
            traffic to the shadow service, the host / authority header is suffixed
            with -shadow.
          id: RequestMirrorPolicy
          properties:
            backendService:
              description: The full or partial URL to the BackendService resource
                being mirrored to.
              type: string
          type: object
        UrlMap:
          description: A UrlMap resource. This resource defines the mapping from URL
            to the BackendService resource, based on the "longest-match" of the URL's
            host and path.
          id: UrlMap
          properties:
            defaultRouteAction:
              $ref: '#/schemas/HttpRouteAction'
              description: |-
                defaultRouteAction takes effect when none of the  hostRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any  weightedBackendServices.
                Only one of defaultRouteAction or defaultUrlRedirect must be set.
            defaultService:
              description: |-
                The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified.
                Only one of defaultService, defaultUrlRedirect  or defaultRouteAction.weightedBackendService must be set.
              type: string
            defaultUrlRedirect:
              $ref: '#/schemas/HttpRedirectAction'
              description: |-
                When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect.
                If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            fingerprint:
              description: |-
                Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap, otherwise the request will fail with error 412 conditionNotMet.

                To see the latest fingerprint, make a get() request to retrieve a UrlMap.
              format: byte
              type: string
            headerAction:
              $ref: '#/schemas/HttpHeaderAction'
              description: |-
                Specifies changes to request and response headers that need to take effect for the selected backendService.
                The headerAction specified here take effect after headerAction specified under pathMatcher.
            hostRules:
              description: The list of HostRules to use against the URL.
              items:
                $ref: '#/schemas/HostRule'
              type: array
            name:
              description: Name of the resource. Provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            pathMatchers:
              description: The list of named PathMatchers to use against the URL.
              items:
                $ref: '#/schemas/PathMatcher'
              type: array
            tests:
              description: The list of expected URL mapping tests. Request to update
                this UrlMap will succeed only if all of the test cases pass. You can
                specify a maximum of 100 tests per UrlMap.
              items:
                $ref: '#/schemas/UrlMapTest'
              type: array
          type: object
        UrlMapTest:
          description: Message for the expected URL mappings.
          id: UrlMapTest
          properties:
            backendServiceWeight:
              description: The weight to use for the supplied host and path when using
                advanced routing rules that involve traffic splitting.
              format: uint32
              type: integer
            description:
              description: Description of this test case.
              type: string
            expectedUrlRedirect:
              description: The expected URL that should be redirected to for the host
                and path being tested.
              type: string
            host:
              description: Host portion of the URL.
              type: string
            path:
              description: Path portion of the URL.
              type: string
            service:
              description: Expected BackendService resource the given URL should be
                mapped to.
              type: string
          type: object
        UrlRewrite:
          description: The spec for modifying the path before sending the request
            to the matched backend service.
          id: UrlRewrite
          properties:
            hostRewrite:
              description: |-
                Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite.
                The value must be between 1 and 255 characters.
              type: string
            pathPrefixRewrite:
              description: |-
                Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite.
                The value must be between 1 and 1024 characters.
              type: string
          type: object
        WeightedBackendService:
          description: In contrast to a single BackendService in  HttpRouteAction
            to which all matching traffic is directed to, WeightedBackendService allows
            traffic to be split across multiple BackendServices. The volume of traffic
            for each BackendService is proportional to the weight specified in each
            WeightedBackendService
          id: WeightedBackendService
          properties:
            backendService:
              description: The full or partial URL to the default BackendService resource.
                Before forwarding the request to backendService, the loadbalancer
                applies any relevant headerActions specified as part of this backendServiceWeight.
              type: string
            headerAction:
              $ref: '#/schemas/HttpHeaderAction'
              description: |-
                Specifies changes to request and response headers that need to take effect for the selected backendService.
                headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
            weight:
              description: |-
                Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) .
                The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.
                The value must be between 0 and 1000
              format: uint32
              type: integer
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/UrlMap'
      methodName: get
      schemas:
        CorsPolicy:
          description: The specification for allowing client side cross-origin requests.
            Please see W3C Recommendation for Cross Origin Resource Sharing
          id: CorsPolicy
          properties:
            allowCredentials:
              description: |-
                In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header.
                Default is false.
              type: boolean
            allowHeaders:
              description: Specifies the content for the Access-Control-Allow-Headers
                header.
              items:
                type: string
              type: array
            allowMethods:
              description: Specifies the content for the Access-Control-Allow-Methods
                header.
              items:
                type: string
              type: array
            allowOriginRegexes:
              description: |-
                Specifies the regualar expression patterns that match allowed origins. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript 
                An origin is allowed if it matches either allow_origins or allow_origin_regex.
              items:
                type: string
              type: array
            allowOrigins:
              description: |-
                Specifies the list of origins that will be allowed to do CORS requests.
                An origin is allowed if it matches either allow_origins or allow_origin_regex.
              items:
                type: string
              type: array
            disabled:
              description: If true, specifies the CORS policy is disabled. The default
                value of false, which indicates that the CORS policy is in effect.
              type: boolean
            exposeHeaders:
              description: Specifies the content for the Access-Control-Expose-Headers
                header.
              items:
                type: string
              type: array
            maxAge:
              description: Specifies how long the results of a preflight request can
                be cached. This translates to the content for the Access-Control-Max-Age
                header.
              format: int32
              type: integer
          type: object
        Duration:
          description: A Duration represents a fixed-length span of time represented
            as a count of seconds and fractions of seconds at nanosecond resolution.
            It is independent of any calendar and concepts like "day" or "month".
            Range is approximately 10,000 years.
          id: Duration
          properties:
            nanos:
              description: Span of time that's a fraction of a second at nanosecond
                resolution. Durations less than one second are represented with a
                0 `seconds` field and a positive `nanos` field. Must be from 0 to
                999,999,999 inclusive.
              format: int32
              type: integer
            seconds:
              description: 'Span of time at a resolution of a second. Must be from
                0 to 315,576,000,000 inclusive. Note: these bounds are computed from:
                60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
              format: int64
              type: string
          type: object
        HostRule:
          description: UrlMaps A host-matching rule for a URL. If matched, will use
            the named PathMatcher to select the BackendService.
          id: HostRule
          properties:
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            hosts:
              description: The list of host patterns to match. They must be valid
                hostnames, except * will match any string of ([a-z0-9-.]*). In that
                case, * must be the first character and must be followed in the pattern
                by either - or ..
              items:
                type: string
              type: array
            pathMatcher:
              description: The name of the PathMatcher to use to match the path portion
                of the URL if the hostRule matches the URL's host portion.
              type: string
          type: object
        HttpFaultAbort:
          description: Specification for how requests are aborted as part of fault
            injection.
          id: HttpFaultAbort
          properties:
            httpStatus:
              description: |-
                The HTTP status code used to abort the request.
                The value must be between 200 and 599 inclusive.
              format: uint32
              type: integer
            percentage:
              description: |-
                The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection.
                The value must be between 0.0 and 100.0 inclusive.
              format: double
              type: number
          type: object
        HttpFaultDelay:
          description: Specifies the delay introduced by Loadbalancer before forwarding
            the request to the backend service as part of fault injection.
          id: HttpFaultDelay
          properties:
            fixedDelay:
              $ref: '#/schemas/Duration'
              description: Specifies the value of the fixed delay interval.
            percentage:
              description: |-
                The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection.
                The value must be between 0.0 and 100.0 inclusive.
              format: double
              type: number
          type: object
        HttpFaultInjection:
          description: The specification for fault injection introduced into traffic
            to test the resiliency of clients to backend service failure. As part
            of fault injection, when clients send requests to a backend service, delays
            can be introduced by Loadbalancer on a percentage of requests before sending
            those request to the backend service. Similarly requests from clients
            can be aborted by the Loadbalancer for a percentage of requests.
          id: HttpFaultInjection
          properties:
            abort:
              $ref: '#/schemas/HttpFaultAbort'
              description: The specification for how client requests are aborted as
                part of fault injection.
            delay:
              $ref: '#/schemas/HttpFaultDelay'
              description: The specification for how client requests are delayed as
                part of fault injection, before being sent to a backend service.
          type: object
        HttpHeaderAction:
          description: The request and response header transformations that take effect
            before the request is passed along to the selected backendService.
          id: HttpHeaderAction
          properties:
            requestHeadersToAdd:
              description: Headers to add to a matching request prior to forwarding
                the request to the backendService.
              items:
                $ref: '#/schemas/HttpHeaderOption'
              type: array
            requestHeadersToRemove:
              description: A list of header names for headers that need to be removed
                from the request prior to forwarding the request to the backendService.
              items:
                type: string
              type: array
            responseHeadersToAdd:
              description: Headers to add the response prior to sending the response
                back to the client.
              items:
                $ref: '#/schemas/HttpHeaderOption'
              type: array
            responseHeadersToRemove:
              description: A list of header names for headers that need to be removed
                from the response prior to sending the response back to the client.
              items:
                type: string
              type: array
          type: object
        HttpHeaderMatch:
          description: matchRule criteria for request header matches.
          id: HttpHeaderMatch
          properties:
            exactMatch:
              description: |-
                The value should exactly match contents of exactMatch.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: string
            headerName:
              description: |-
                The name of the HTTP header to match.
                For matching against the HTTP request's authority, use a headerMatch with the header name ":authority".
                For matching a request's method, use the headerName ":method".
              type: string
            invertMatch:
              description: |-
                If set to false, the headerMatch is considered a match if the match criteria above are met. If set to true, the headerMatch is considered a match if the match criteria above are NOT met.
                The default setting is false.
              type: boolean
            prefixMatch:
              description: |-
                The value of the header must start with the contents of prefixMatch.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: string
            presentMatch:
              description: |-
                A header with the contents of headerName must exist. The match takes place whether or not the request's header has a value or not.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: boolean
            rangeMatch:
              $ref: '#/schemas/Int64RangeMatch'
              description: |-
                The header value must be an integer and its value must be in the range specified in rangeMatch. If the header does not contain an integer, number or is empty, the match fails.
                For example for a range [-5, 0]  
                - -3 will match. 
                - 0 will not match. 
                - 0.25 will not match. 
                - -3someString will not match.  
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
            regexMatch:
              description: |-
                The value of the header must match the regualar expression specified in regexMatch. For regular expression grammar, please see:  en.cppreference.com/w/cpp/regex/ecmascript 
                For matching against a port specified in the HTTP request, use a headerMatch with headerName set to PORT and a regular expression that satisfies the RFC2616 Host header's port specifier.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: string
            suffixMatch:
              description: |-
                The value of the header must end with the contents of suffixMatch.
                Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
              type: string
          type: object
        HttpHeaderOption:
          description: Specification determining how headers are added to requests
            or responses.
          id: HttpHeaderOption
          properties:
            headerName:
              description: The name of the header.
              type: string
            headerValue:
              description: The value of the header to add.
              type: string
            replace:
              description: |-
                If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.
                The default value is false.
              type: boolean
          type: object
        HttpQueryParameterMatch:
          description: HttpRouteRuleMatch criteria for a request's query parameter.
          id: HttpQueryParameterMatch
          properties:
            exactMatch:
              description: |-
                The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch.
                Only one of presentMatch, exactMatch and regexMatch must be set.
              type: string
            name:
              description: The name of the query parameter to match. The query parameter
                must exist in the request, in the absence of which the request match
                fails.
              type: string
            presentMatch:
              description: |-
                Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not.
                Only one of presentMatch, exactMatch and regexMatch must be set.
              type: boolean
            regexMatch:
              description: |-
                The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For the regular expression grammar, please see en.cppreference.com/w/cpp/regex/ecmascript 
                Only one of presentMatch, exactMatch and regexMatch must be set.
              type: string
          type: object
        HttpRedirectAction:
          description: Specifies settings for an HTTP redirect.
          id: HttpRedirectAction
          properties:
            hostRedirect:
              description: |-
                The host that will be used in the redirect response instead of the one that was supplied in the request.
                The value must be between 1 and 255 characters.
              type: string
            httpsRedirect:
              description: |-
                If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request.
                This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted.
                The default is set to false.
              type: boolean
            pathRedirect:
              description: |-
                The path that will be used in the redirect response instead of the one that was supplied in the request.
                Only one of pathRedirect or prefixRedirect must be specified.
                The value must be between 1 and 1024 characters.
              type: string
            prefixRedirect:
              description: The prefix that replaces the prefixMatch specified in the
                HttpRouteRuleMatch, retaining the remaining portion of the URL before
                redirecting the request.
              type: string
            redirectResponseCode:
              description: |-
                The HTTP Status code to use for this RedirectAction.
                Supported values are:  
                - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. 
                - FOUND, which corresponds to 302. 
                - SEE_OTHER which corresponds to 303. 
                - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained. 
                - PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.
              enum:
              - FOUND
              - MOVED_PERMANENTLY_DEFAULT
              - PERMANENT_REDIRECT
              - SEE_OTHER
              - TEMPORARY_REDIRECT
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              type: string
            stripQuery:
              description: |-
                If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained.
                The default is set to false.
              type: boolean
          type: object
        HttpRetryPolicy:
          description: The retry policy associates with HttpRouteRule
          id: HttpRetryPolicy
          properties:
            numRetries:
              description: Specifies the allowed number retries. This number must
                be > 0.
              format: uint32
              type: integer
            perTryTimeout:
              $ref: '#/schemas/Duration'
              description: Specifies a non-zero timeout per retry attempt.
            retryConditions:
              description: |-
                Specfies one or more conditions when this retry rule applies. Valid values are:  
                - 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams. 
                - gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.
                - 
                - connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts. 
                - retriable-4xx: Loadbalancer will retry for retriable 4xx response codes. Currently the only retriable error supported is 409. 
                - refused-stream:Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. 
                - cancelledLoadbalancer will retry if the gRPC status code in the response header is set to cancelled 
                - deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded 
                - resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted 
                - unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable
              items:
                type: string
              type: array
          type: object
        HttpRouteAction:
          id: HttpRouteAction
          properties:
            corsPolicy:
              $ref: '#/schemas/CorsPolicy'
              description: The specification for allowing client side cross-origin
                requests. Please see W3C Recommendation for Cross Origin Resource
                Sharing
            faultInjectionPolicy:
              $ref: '#/schemas/HttpFaultInjection'
              description: |-
                The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests.
                timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy.
            requestMirrorPolicy:
              $ref: '#/schemas/RequestMirrorPolicy'
              description: Specifies the policy on how requests intended for the route's
                backends are shadowed to a separate mirrored backend service. Loadbalancer
                does not wait for responses from the shadow service. Prior to sending
                traffic to the shadow service, the host / authority header is suffixed
                with -shadow.
            retryPolicy:
              $ref: '#/schemas/HttpRetryPolicy'
              description: Specifies the retry policy associated with this route.
            timeout:
              $ref: '#/schemas/Duration'
              description: |-
                Specifies the timeout for the selected route. Timeout is computed from the time the request is has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
                If not specified, the default value is 15 seconds.
            urlRewrite:
              $ref: '#/schemas/UrlRewrite'
              description: The spec to modify the URL of the request, prior to forwarding
                the request to the matched service
            weightedBackendServices:
              description: |-
                A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one  weightedBackendService with weight set to a non 0 number.
                Once a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.
              items:
                $ref: '#/schemas/WeightedBackendService'
              type: array
          type: object
        HttpRouteRule:
          description: An HttpRouteRule specifies how to match an HTTP request and
            the corresponding routing action that load balancing proxies will perform.
          id: HttpRouteRule
          properties:
            headerAction:
              $ref: '#/schemas/HttpHeaderAction'
              description: |-
                Specifies changes to request and response headers that need to take effect for the selected backendService.
                The headerAction specified here are applied before the matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].routeAction.weightedBackendService.backendServiceWeightAction[].headerAction
            matchRules:
              items:
                $ref: '#/schemas/HttpRouteRuleMatch'
              type: array
            routeAction:
              $ref: '#/schemas/HttpRouteAction'
              description: |-
                In response to a matching matchRule, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If  routeAction specifies any  weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any  weightedBackendServices.
                Only one of routeAction or urlRedirect must be set.
            urlRedirect:
              $ref: '#/schemas/HttpRedirectAction'
              description: |-
                When this rule is matched, the request is redirected to a URL specified by urlRedirect.
                If urlRedirect is specified, service or routeAction must not be set.
          type: object
        HttpRouteRuleMatch:
          description: HttpRouteRuleMatch specifies a set of criteria for matching
            requests to an HttpRouteRule. All specified criteria must be satisfied
            for a match to occur.
          id: HttpRouteRuleMatch
          properties:
            fullPathMatch:
              description: |-
                For satifying the matchRule condition, the path of the request must exactly match the value specified in fullPathMatch after removing any query parameters and anchor that may be part of the original URL.
                FullPathMatch must be between 1 and 1024 characters.
                Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
              type: string
            headerMatches:
              description: Specifies a list of header match criteria, all of which
                must match corresponding headers in the request.
              items:
                $ref: '#/schemas/HttpHeaderMatch'
              type: array
            ignoreCase:
              description: |-
                Specifies that prefixMatch and fullPathMatch matches are case sensitive.
                The default value is false.
                caseSensitive must not be used with regexMatch.
              type: boolean
            metadataFilters:
              description: |-
                Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant routing configuration is made available to those proxies.
                For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata.
                metadataFilters specified here can be overrides those specified in ForwardingRule that refers to this UrlMap.
                metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.
              items:
                $ref: '#/schemas/MetadataFilter'
              type: array
            prefixMatch:
              description: |-
                For satifying the matchRule condition, the request's path must begin with the specified prefixMatch. prefixMatch must begin with a /.
                The value must be between 1 and 1024 characters.
                Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
              type: string
            queryParameterMatches:
              description: Specifies a list of query parameter match criteria, all
                of which must match corresponding query parameters in the request.
              items:
                $ref: '#/schemas/HttpQueryParameterMatch'
              type: array
            regexMatch:
              description: |-
                For satifying the matchRule condition, the path of the request must satisfy the regular expression specified in regexMatch after removing any query parameters and anchor supplied with the original URL. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript 
                Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
              type: string
          type: object
        Int64RangeMatch:
          description: HttpRouteRuleMatch criteria for field values that must stay
            within the specified integer range.
          id: Int64RangeMatch
          properties:
            rangeEnd:
              description: The end of the range (exclusive) in signed long integer
                format.
              format: int64
              type: string
            rangeStart:
              description: The start of the range (inclusive) in signed long integer
                format.
              format: int64
              type: string
          type: object
        MetadataFilter:
          description: |-
            Opaque filter criteria used by loadbalancers to restrict routing configuration to a limited set of loadbalancing proxies. Proxies and sidecars involved in loadbalancing would typically present metadata to the loadbalancers which need to match criteria specified here. If a match takes place, the relevant routing configuration is made available to those proxies.
            For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata.
            An example for using metadataFilters would be: if loadbalancing involves  Envoys, they will only receive routing configuration when values in metadataFilters match values supplied in <a href="https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/core/base.proto#envoy-api-msg-core-node" Node metadata of their XDS requests to loadbalancers.
          id: MetadataFilter
          properties:
            filterLabels:
              description: |-
                The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria 
                This list must not be empty and can have at the most 64 entries.
              items:
                $ref: '#/schemas/MetadataFilterLabelMatch'
              type: array
            filterMatchCriteria:
              description: |-
                Specifies how individual filterLabel matches within the list of filterLabels contribute towards the overall metadataFilter match.
                Supported values are:  
                - MATCH_ANY: At least one of the filterLabels must have a matching label in the provided metadata. 
                - MATCH_ALL: All filterLabels must have matching labels in the provided metadata.
              enum:
              - MATCH_ALL
              - MATCH_ANY
              - NOT_SET
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        MetadataFilterLabelMatch:
          description: MetadataFilter label name value pairs that are expected to
            match corresponding labels presented as metadata to the loadbalancer.
          id: MetadataFilterLabelMatch
          properties:
            name:
              description: |-
                Name of metadata label.
                The name can have a maximum length of 1024 characters and must be at least 1 character long.
              type: string
            value:
              description: |-
                The value of the label must match the specified value.
                value can have a maximum length of 1024 characters.
              type: string
          type: object
        PathMatcher:
          description: A matcher for the path portion of the URL. The BackendService
            from the longest-matched rule will serve the URL. If no rule was matched,
            the default service will be used.
          id: PathMatcher
          properties:
            defaultRouteAction:
              $ref: '#/schemas/HttpRouteAction'
              description: |-
                defaultRouteAction takes effect when none of the  pathRules or routeRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any  weightedBackendServices.
                Only one of defaultRouteAction or defaultUrlRedirect must be set.
            defaultService:
              description: |-
                The full or partial URL to the BackendService resource. This will be used if none of the pathRules or routeRules defined by this PathMatcher are matched. For example, the following are all valid URLs to a BackendService resource:  
                - https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService 
                - compute/v1/projects/project/global/backendServices/backendService 
                - global/backendServices/backendService  If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if defaultRouteAction specifies any weightedBackendServices, defaultService must not be specified.
                Only one of defaultService, defaultUrlRedirect  or defaultRouteAction.weightedBackendService must be set.
                Authorization requires one or more of the following Google IAM permissions on the specified resource default_service:  
                - compute.backendBuckets.use 
                - compute.backendServices.use
              type: string
            defaultUrlRedirect:
              $ref: '#/schemas/HttpRedirectAction'
              description: |-
                When when none of the specified pathRules or routeRules match, the request is redirected to a URL specified by defaultUrlRedirect.
                If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            headerAction:
              $ref: '#/schemas/HttpHeaderAction'
              description: |-
                Specifies changes to request and response headers that need to take effect for the selected backendService.
                HeaderAction specified here are applied after the matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
            name:
              description: The name to which this PathMatcher is referred by the HostRule.
              type: string
            pathRules:
              description: |-
                The list of path rules. Use this list instead of routeRules when routing based on simple path matching is all that's required. The order by which path rules are specified does not matter. Matches are always done on the longest-path-first basis.
                For example: a pathRule with a path /a/b/c/* will match before /a/b/* irrespective of the order in which those paths appear in this list.
                Only one of pathRules or routeRules must be set.
              items:
                $ref: '#/schemas/PathRule'
              type: array
            routeRules:
              description: |-
                The list of ordered HTTP route rules. Use this list instead of pathRules when advanced route matching and routing actions are desired. The order of specifying routeRules matters: the first rule that matches will cause its specified routing action to take effect.
                Only one of pathRules or routeRules must be set.
              items:
                $ref: '#/schemas/HttpRouteRule'
              type: array
          type: object
        PathRule:
          description: A path-matching rule for a URL. If matched, will use the specified
            BackendService to handle the traffic arriving at this URL.
          id: PathRule
          properties:
            paths:
              description: 'The list of path patterns to match. Each must start with
                / and the only place a * is allowed is at the end following a /. The
                string fed to the path matcher does not include any text after the
                first ? or #, and those chars are not allowed here.'
              items:
                type: string
              type: array
            routeAction:
              $ref: '#/schemas/HttpRouteAction'
              description: |-
                In response to a matching path, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If routeAction specifies any  weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any  weightedBackendServices.
                Only one of routeAction or urlRedirect must be set.
            service:
              description: |-
                The full or partial URL of the backend service resource to which traffic is directed if this rule is matched. If routeAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendService s. Conversely, if routeAction specifies any  weightedBackendServices, service must not be specified.
                Only one of urlRedirect, service or routeAction.weightedBackendService must be set.
              type: string
            urlRedirect:
              $ref: '#/schemas/HttpRedirectAction'
              description: |-
                When a path pattern is matched, the request is redirected to a URL specified by urlRedirect.
                If urlRedirect is specified, service or routeAction must not be set.
          type: object
        RequestMirrorPolicy:
          description: A policy that specifies how requests intended for the route's
            backends are shadowed to a separate mirrored backend service. Loadbalancer
            does not wait for responses from the shadow service. Prior to sending
            traffic to the shadow service, the host / authority header is suffixed
            with -shadow.
          id: RequestMirrorPolicy
          properties:
            backendService:
              description: The full or partial URL to the BackendService resource
                being mirrored to.
              type: string
          type: object
        UrlMap:
          description: A UrlMap resource. This resource defines the mapping from URL
            to the BackendService resource, based on the "longest-match" of the URL's
            host and path.
          id: UrlMap
          properties:
            creationTimestamp:
              description: '[Output Only] Creation timestamp in RFC3339 text format.'
              type: string
            defaultRouteAction:
              $ref: '#/schemas/HttpRouteAction'
              description: |-
                defaultRouteAction takes effect when none of the  hostRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any  weightedBackendServices.
                Only one of defaultRouteAction or defaultUrlRedirect must be set.
            defaultService:
              description: |-
                The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified.
                Only one of defaultService, defaultUrlRedirect  or defaultRouteAction.weightedBackendService must be set.
              type: string
            defaultUrlRedirect:
              $ref: '#/schemas/HttpRedirectAction'
              description: |-
                When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect.
                If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            fingerprint:
              description: |-
                Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap, otherwise the request will fail with error 412 conditionNotMet.

                To see the latest fingerprint, make a get() request to retrieve a UrlMap.
              format: byte
              type: string
            headerAction:
              $ref: '#/schemas/HttpHeaderAction'
              description: |-
                Specifies changes to request and response headers that need to take effect for the selected backendService.
                The headerAction specified here take effect after headerAction specified under pathMatcher.
            hostRules:
              description: The list of HostRules to use against the URL.
              items:
                $ref: '#/schemas/HostRule'
              type: array
            id:
              description: '[Output Only] The unique identifier for the resource.
                This identifier is defined by the server.'
              format: uint64
              type: string
            kind:
              default: compute#urlMap
              description: '[Output Only] Type of the resource. Always compute#urlMaps
                for url maps.'
              type: string
            name:
              description: Name of the resource. Provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            pathMatchers:
              description: The list of named PathMatchers to use against the URL.
              items:
                $ref: '#/schemas/PathMatcher'
              type: array
            region:
              description: '[Output Only] URL of the region where the regional URL
                map resides. This field is not applicable to global URL maps. You
                must specify this field as part of the HTTP request URL. It is not
                settable as a field in the request body.'
              type: string
            selfLink:
              description: '[Output Only] Server-defined URL for the resource.'
              type: string
            tests:
              description: The list of expected URL mapping tests. Request to update
                this UrlMap will succeed only if all of the test cases pass. You can
                specify a maximum of 100 tests per UrlMap.
              items:
                $ref: '#/schemas/UrlMapTest'
              type: array
          type: object
        UrlMapTest:
          description: Message for the expected URL mappings.
          id: UrlMapTest
          properties:
            backendServiceWeight:
              description: The weight to use for the supplied host and path when using
                advanced routing rules that involve traffic splitting.
              format: uint32
              type: integer
            description:
              description: Description of this test case.
              type: string
            expectedUrlRedirect:
              description: The expected URL that should be redirected to for the host
                and path being tested.
              type: string
            host:
              description: Host portion of the URL.
              type: string
            path:
              description: Path portion of the URL.
              type: string
            service:
              description: Expected BackendService resource the given URL should be
                mapped to.
              type: string
          type: object
        UrlRewrite:
          description: The spec for modifying the path before sending the request
            to the matched backend service.
          id: UrlRewrite
          properties:
            hostRewrite:
              description: |-
                Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite.
                The value must be between 1 and 255 characters.
              type: string
            pathPrefixRewrite:
              description: |-
                Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite.
                The value must be between 1 and 1024 characters.
              type: string
          type: object
        WeightedBackendService:
          description: In contrast to a single BackendService in  HttpRouteAction
            to which all matching traffic is directed to, WeightedBackendService allows
            traffic to be split across multiple BackendServices. The volume of traffic
            for each BackendService is proportional to the weight specified in each
            WeightedBackendService
          id: WeightedBackendService
          properties:
            backendService:
              description: The full or partial URL to the default BackendService resource.
                Before forwarding the request to backendService, the loadbalancer
                applies any relevant headerActions specified as part of this backendServiceWeight.
              type: string
            headerAction:
              $ref: '#/schemas/HttpHeaderAction'
              description: |-
                Specifies changes to request and response headers that need to take effect for the selected backendService.
                headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
            weight:
              description: |-
                Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) .
                The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.
                The value must be between 0 and 1000
              format: uint32
              type: integer
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/compute-alpha/types/regionUrlMaps?alt=json
  title: Compute Engine API
