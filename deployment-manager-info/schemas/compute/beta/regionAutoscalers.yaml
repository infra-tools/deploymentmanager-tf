type_info:
  documentationLink: https://developers.google.com/compute/docs/reference/latest/
  kind: deploymentmanager#typeInfo
  name: regionAutoscalers
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        properties:
          autoscalingPolicy:
            $ref: '#/schemas/AutoscalingPolicy'
            description: |-
              The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.

              If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
          description:
            description: An optional description of this resource. Provide this property
              when you create the resource.
            type: string
          name:
            annotations:
              required:
              - compute.instanceGroups.insert
            description: Name of the resource. Provided by the client when the resource
              is created. The name must be 1-63 characters long, and comply with RFC1035.
              Specifically, the name must be 1-63 characters long and match the regular
              expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
              must be a lowercase letter, and all following characters must be a dash,
              lowercase letter, or digit, except the last character, which cannot
              be a dash.
            pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
            type: string
          region:
            description: Name of the region scoping this request.
            location: path
            pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
            required: true
            type: string
          requestId:
            description: |-
              An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

              For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

              The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
            location: query
            type: string
          target:
            description: URL of the managed instance group that this autoscaler will
              scale.
            type: string
        type: object
      methodName: insert
      schemas:
        Autoscaler:
          description: Represents an Autoscaler resource. Autoscalers allow you to
            automatically scale virtual machine instances in managed instance groups
            according to an autoscaling policy that you define. For more information,
            read Autoscaling Groups of Instances. (== resource_for beta.autoscalers
            ==) (== resource_for v1.autoscalers ==) (== resource_for beta.regionAutoscalers
            ==) (== resource_for v1.regionAutoscalers ==)
          id: Autoscaler
          properties:
            autoscalingPolicy:
              $ref: '#/schemas/AutoscalingPolicy'
              description: |-
                The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.

                If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            name:
              annotations:
                required:
                - compute.instanceGroups.insert
              description: Name of the resource. Provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            target:
              description: URL of the managed instance group that this autoscaler
                will scale.
              type: string
          type: object
        AutoscalerStatusDetails:
          id: AutoscalerStatusDetails
          properties:
            message:
              description: The status message.
              type: string
            type:
              description: The type of error returned.
              enum:
              - ALL_INSTANCES_UNHEALTHY
              - BACKEND_SERVICE_DOES_NOT_EXIST
              - CAPPED_AT_MAX_NUM_REPLICAS
              - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE
              - CUSTOM_METRIC_INVALID
              - MIN_EQUALS_MAX
              - MISSING_CUSTOM_METRIC_DATA_POINTS
              - MISSING_LOAD_BALANCING_DATA_POINTS
              - MORE_THAN_ONE_BACKEND_SERVICE
              - NOT_ENOUGH_QUOTA_AVAILABLE
              - REGION_RESOURCE_STOCKOUT
              - SCALING_TARGET_DOES_NOT_EXIST
              - UNKNOWN
              - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION
              - ZONE_RESOURCE_STOCKOUT
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              type: string
          type: object
        AutoscalingPolicy:
          description: Cloud Autoscaler policy.
          id: AutoscalingPolicy
          properties:
            coolDownPeriodSec:
              description: |-
                The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds.

                Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
              format: int32
              type: integer
            cpuUtilization:
              $ref: '#/schemas/AutoscalingPolicyCpuUtilization'
              description: Defines the CPU utilization policy that allows the autoscaler
                to scale based on the average CPU utilization of a managed instance
                group.
            customMetricUtilizations:
              description: Configuration parameters of autoscaling based on a custom
                metric.
              items:
                $ref: '#/schemas/AutoscalingPolicyCustomMetricUtilization'
              type: array
            loadBalancingUtilization:
              $ref: '#/schemas/AutoscalingPolicyLoadBalancingUtilization'
              description: Configuration parameters of autoscaling based on load balancer.
            maxNumReplicas:
              description: The maximum number of instances that the autoscaler can
                scale up to. This is required when creating or updating an autoscaler.
                The maximum number of replicas should not be lower than minimal number
                of replicas.
              format: int32
              type: integer
            minNumReplicas:
              description: The minimum number of replicas that the autoscaler can
                scale down to. This cannot be less than 0. If not provided, autoscaler
                will choose a default value depending on maximum number of instances
                allowed.
              format: int32
              type: integer
          type: object
        AutoscalingPolicyCpuUtilization:
          description: CPU utilization policy.
          id: AutoscalingPolicyCpuUtilization
          properties:
            utilizationTarget:
              description: |-
                The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6.

                If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization.

                If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
              format: double
              type: number
          type: object
        AutoscalingPolicyCustomMetricUtilization:
          description: Custom utilization metric policy.
          id: AutoscalingPolicyCustomMetricUtilization
          properties:
            filter:
              description: |-
                A filter string, compatible with a Stackdriver Monitoring filter string for TimeSeries.list API call. This filter is used to select a specific TimeSeries for the purpose of autoscaling and to determine whether the metric is exporting per-instance or per-group data.

                For the filter to be valid for autoscaling purposes, the following rules apply:  
                - You can only use the AND operator for joining selectors. 
                - You can only use direct equality comparison operator (=) without any functions for each selector. 
                - You can specify the metric in both the filter string and in the metric field. However, if specified in both places, the metric must be identical. 
                - The monitored resource type determines what kind of values are expected for the metric. If it is a gce_instance, the autoscaler expects the metric to include a separate TimeSeries for each instance in a group. In such a case, you cannot filter on resource labels.
                If the resource type is any other value, the autoscaler expects this metric to contain values that apply to the entire autoscaled instance group and resource label filtering can be performed to point autoscaler at the correct TimeSeries to scale upon. This is called a per-group metric for the purpose of autoscaling.

                If not specified, the type defaults to gce_instance.  

                You should provide a filter that is selective enough to pick just one TimeSeries for the autoscaled group or for each of the instances (if you are using gce_instance resource type). If multiple TimeSeries are returned upon the query execution, the autoscaler will sum their respective values to obtain its scaling value.
              type: string
            metric:
              description: |-
                The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values.

                The metric must have a value type of INT64 or DOUBLE.
              type: string
            singleInstanceAssignment:
              description: |-
                If scaling is based on a per-group metric value that represents the total amount of work to be done or resource usage, set this value to an amount assigned for a single instance of the scaled group. Autoscaler will keep the number of instances proportional to the value of this metric, the metric itself should not change value due to group resizing.

                A good metric to use with the target is for example pubsub.googleapis.com/subscription/num_undelivered_messages or a custom metric exporting the total number of requests coming to your instances.

                A bad example would be a metric exporting an average or median latency, since this value can't include a chunk assignable to a single instance, it could be better used with utilization_target instead.
              format: double
              type: number
            utilizationTarget:
              description: |-
                The target value of the metric that autoscaler should maintain. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric.

                For example, a good metric to use as a utilization_target is compute.googleapis.com/instance/network/received_bytes_count. The autoscaler will work to keep this value constant for each of the instances.
              format: double
              type: number
            utilizationTargetType:
              description: Defines how target utilization value is expressed for a
                Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or
                DELTA_PER_MINUTE.
              enum:
              - DELTA_PER_MINUTE
              - DELTA_PER_SECOND
              - GAUGE
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        AutoscalingPolicyLoadBalancingUtilization:
          description: Configuration parameters of autoscaling based on load balancing.
          id: AutoscalingPolicyLoadBalancingUtilization
          properties:
            utilizationTarget:
              description: Fraction of backend capacity utilization (set in HTTP(S)
                load balancing configuration) that autoscaler should maintain. Must
                be a positive float value. If not defined, the default is 0.8.
              format: double
              type: number
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Autoscaler'
      methodName: get
      schemas:
        Autoscaler:
          description: Represents an Autoscaler resource. Autoscalers allow you to
            automatically scale virtual machine instances in managed instance groups
            according to an autoscaling policy that you define. For more information,
            read Autoscaling Groups of Instances. (== resource_for beta.autoscalers
            ==) (== resource_for v1.autoscalers ==) (== resource_for beta.regionAutoscalers
            ==) (== resource_for v1.regionAutoscalers ==)
          id: Autoscaler
          properties:
            autoscalingPolicy:
              $ref: '#/schemas/AutoscalingPolicy'
              description: |-
                The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.

                If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
            creationTimestamp:
              description: '[Output Only] Creation timestamp in RFC3339 text format.'
              type: string
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            id:
              description: '[Output Only] The unique identifier for the resource.
                This identifier is defined by the server.'
              format: uint64
              type: string
            kind:
              default: compute#autoscaler
              description: '[Output Only] Type of the resource. Always compute#autoscaler
                for autoscalers.'
              type: string
            name:
              annotations:
                required:
                - compute.instanceGroups.insert
              description: Name of the resource. Provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            region:
              description: '[Output Only] URL of the region where the instance group
                resides (for autoscalers living in regional scope).'
              type: string
            selfLink:
              description: '[Output Only] Server-defined URL for the resource.'
              type: string
            status:
              description: '[Output Only] The status of the autoscaler configuration.'
              enum:
              - ACTIVE
              - DELETING
              - ERROR
              - PENDING
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              type: string
            statusDetails:
              description: '[Output Only] Human-readable details about the current
                state of the autoscaler. Read the documentation for Commonly returned
                status messages for examples of status messages you might encounter.'
              items:
                $ref: '#/schemas/AutoscalerStatusDetails'
              type: array
            target:
              description: URL of the managed instance group that this autoscaler
                will scale.
              type: string
            zone:
              description: '[Output Only] URL of the zone where the instance group
                resides (for autoscalers living in zonal scope).'
              type: string
          type: object
        AutoscalerStatusDetails:
          id: AutoscalerStatusDetails
          properties:
            message:
              description: The status message.
              type: string
            type:
              description: The type of error returned.
              enum:
              - ALL_INSTANCES_UNHEALTHY
              - BACKEND_SERVICE_DOES_NOT_EXIST
              - CAPPED_AT_MAX_NUM_REPLICAS
              - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE
              - CUSTOM_METRIC_INVALID
              - MIN_EQUALS_MAX
              - MISSING_CUSTOM_METRIC_DATA_POINTS
              - MISSING_LOAD_BALANCING_DATA_POINTS
              - MORE_THAN_ONE_BACKEND_SERVICE
              - NOT_ENOUGH_QUOTA_AVAILABLE
              - REGION_RESOURCE_STOCKOUT
              - SCALING_TARGET_DOES_NOT_EXIST
              - UNKNOWN
              - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION
              - ZONE_RESOURCE_STOCKOUT
              enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              type: string
          type: object
        AutoscalingPolicy:
          description: Cloud Autoscaler policy.
          id: AutoscalingPolicy
          properties:
            coolDownPeriodSec:
              description: |-
                The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds.

                Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
              format: int32
              type: integer
            cpuUtilization:
              $ref: '#/schemas/AutoscalingPolicyCpuUtilization'
              description: Defines the CPU utilization policy that allows the autoscaler
                to scale based on the average CPU utilization of a managed instance
                group.
            customMetricUtilizations:
              description: Configuration parameters of autoscaling based on a custom
                metric.
              items:
                $ref: '#/schemas/AutoscalingPolicyCustomMetricUtilization'
              type: array
            loadBalancingUtilization:
              $ref: '#/schemas/AutoscalingPolicyLoadBalancingUtilization'
              description: Configuration parameters of autoscaling based on load balancer.
            maxNumReplicas:
              description: The maximum number of instances that the autoscaler can
                scale up to. This is required when creating or updating an autoscaler.
                The maximum number of replicas should not be lower than minimal number
                of replicas.
              format: int32
              type: integer
            minNumReplicas:
              description: The minimum number of replicas that the autoscaler can
                scale down to. This cannot be less than 0. If not provided, autoscaler
                will choose a default value depending on maximum number of instances
                allowed.
              format: int32
              type: integer
          type: object
        AutoscalingPolicyCpuUtilization:
          description: CPU utilization policy.
          id: AutoscalingPolicyCpuUtilization
          properties:
            utilizationTarget:
              description: |-
                The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6.

                If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization.

                If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
              format: double
              type: number
          type: object
        AutoscalingPolicyCustomMetricUtilization:
          description: Custom utilization metric policy.
          id: AutoscalingPolicyCustomMetricUtilization
          properties:
            filter:
              description: |-
                A filter string, compatible with a Stackdriver Monitoring filter string for TimeSeries.list API call. This filter is used to select a specific TimeSeries for the purpose of autoscaling and to determine whether the metric is exporting per-instance or per-group data.

                For the filter to be valid for autoscaling purposes, the following rules apply:  
                - You can only use the AND operator for joining selectors. 
                - You can only use direct equality comparison operator (=) without any functions for each selector. 
                - You can specify the metric in both the filter string and in the metric field. However, if specified in both places, the metric must be identical. 
                - The monitored resource type determines what kind of values are expected for the metric. If it is a gce_instance, the autoscaler expects the metric to include a separate TimeSeries for each instance in a group. In such a case, you cannot filter on resource labels.
                If the resource type is any other value, the autoscaler expects this metric to contain values that apply to the entire autoscaled instance group and resource label filtering can be performed to point autoscaler at the correct TimeSeries to scale upon. This is called a per-group metric for the purpose of autoscaling.

                If not specified, the type defaults to gce_instance.  

                You should provide a filter that is selective enough to pick just one TimeSeries for the autoscaled group or for each of the instances (if you are using gce_instance resource type). If multiple TimeSeries are returned upon the query execution, the autoscaler will sum their respective values to obtain its scaling value.
              type: string
            metric:
              description: |-
                The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values.

                The metric must have a value type of INT64 or DOUBLE.
              type: string
            singleInstanceAssignment:
              description: |-
                If scaling is based on a per-group metric value that represents the total amount of work to be done or resource usage, set this value to an amount assigned for a single instance of the scaled group. Autoscaler will keep the number of instances proportional to the value of this metric, the metric itself should not change value due to group resizing.

                A good metric to use with the target is for example pubsub.googleapis.com/subscription/num_undelivered_messages or a custom metric exporting the total number of requests coming to your instances.

                A bad example would be a metric exporting an average or median latency, since this value can't include a chunk assignable to a single instance, it could be better used with utilization_target instead.
              format: double
              type: number
            utilizationTarget:
              description: |-
                The target value of the metric that autoscaler should maintain. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric.

                For example, a good metric to use as a utilization_target is compute.googleapis.com/instance/network/received_bytes_count. The autoscaler will work to keep this value constant for each of the instances.
              format: double
              type: number
            utilizationTargetType:
              description: Defines how target utilization value is expressed for a
                Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or
                DELTA_PER_MINUTE.
              enum:
              - DELTA_PER_MINUTE
              - DELTA_PER_SECOND
              - GAUGE
              enumDescriptions:
              - ''
              - ''
              - ''
              type: string
          type: object
        AutoscalingPolicyLoadBalancingUtilization:
          description: Configuration parameters of autoscaling based on load balancing.
          id: AutoscalingPolicyLoadBalancingUtilization
          properties:
            utilizationTarget:
              description: Fraction of backend capacity utilization (set in HTTP(S)
                load balancing configuration) that autoscaler should maintain. Must
                be a positive float value. If not defined, the default is 0.8.
              format: double
              type: number
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/compute-beta/types/regionAutoscalers?alt=json
  title: Compute Engine API
