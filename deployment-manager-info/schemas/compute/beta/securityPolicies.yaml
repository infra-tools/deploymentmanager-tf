type_info:
  documentationLink: https://developers.google.com/compute/docs/reference/latest/
  kind: deploymentmanager#typeInfo
  name: securityPolicies
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        properties:
          description:
            description: An optional description of this resource. Provide this property
              when you create the resource.
            type: string
          fingerprint:
            description: |-
              Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet.

              To see the latest fingerprint, make get() request to the security policy.
            format: byte
            type: string
          labelFingerprint:
            description: |-
              A fingerprint for the labels being applied to this security policy, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.

              To see the latest fingerprint, make get() request to the security policy.
            format: byte
            type: string
          labels:
            additionalProperties:
              type: string
            description: Labels to apply to this security policy resource. These can
              be later modified by the setLabels method. Each label key/value must
              comply with RFC1035. Label values may be empty.
            type: object
          name:
            description: Name of the resource. Provided by the client when the resource
              is created. The name must be 1-63 characters long, and comply with RFC1035.
              Specifically, the name must be 1-63 characters long and match the regular
              expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
              must be a lowercase letter, and all following characters must be a dash,
              lowercase letter, or digit, except the last character, which cannot
              be a dash.
            pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
            type: string
          requestId:
            description: |-
              An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

              For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

              The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
            location: query
            type: string
          rules:
            description: A list of rules that belong to this policy. There must always
              be a default rule (rule with priority 2147483647 and match "*"). If
              no rules are provided when creating a security policy, a default rule
              with action "allow" will be added.
            items:
              $ref: '#/schemas/SecurityPolicyRule'
            type: array
          validateOnly:
            description: If true, the request will not be committed.
            location: query
            type: boolean
        type: object
      methodName: insert
      schemas:
        Expr:
          description: |-
            Represents an expression text. Example:

            title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
          id: Expr
          properties:
            description:
              description: An optional description of the expression. This is a longer
                text which describes the expression, e.g. when hovered over it in
                a UI.
              type: string
            expression:
              description: |-
                Textual representation of an expression in Common Expression Language syntax.

                The application context of the containing message determines which well-known feature set of CEL is supported.
              type: string
            location:
              description: An optional string indicating the location of the expression
                for error reporting, e.g. a file name and a position in the file.
              type: string
            title:
              description: An optional title for the expression, i.e. a short string
                describing its purpose. This can be used e.g. in UIs which allow to
                enter the expression.
              type: string
          type: object
        SecurityPolicy:
          description: A security policy is comprised of one or more rules. It can
            also be associated with one or more 'targets'. (== resource_for v1.securityPolicies
            ==) (== resource_for beta.securityPolicies ==)
          id: SecurityPolicy
          properties:
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            fingerprint:
              description: |-
                Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet.

                To see the latest fingerprint, make get() request to the security policy.
              format: byte
              type: string
            labelFingerprint:
              description: |-
                A fingerprint for the labels being applied to this security policy, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.

                To see the latest fingerprint, make get() request to the security policy.
              format: byte
              type: string
            labels:
              additionalProperties:
                type: string
              description: Labels to apply to this security policy resource. These
                can be later modified by the setLabels method. Each label key/value
                must comply with RFC1035. Label values may be empty.
              type: object
            name:
              description: Name of the resource. Provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            rules:
              description: A list of rules that belong to this policy. There must
                always be a default rule (rule with priority 2147483647 and match
                "*"). If no rules are provided when creating a security policy, a
                default rule with action "allow" will be added.
              items:
                $ref: '#/schemas/SecurityPolicyRule'
              type: array
          type: object
        SecurityPolicyRule:
          description: Represents a rule that describes one or more match conditions
            along with the action to be taken when traffic matches this condition
            (allow or deny).
          id: SecurityPolicyRule
          properties:
            action:
              description: The Action to preform when the client connection triggers
                the rule. Can currently be either "allow" or "deny()" where valid
                values for status are 403, 404, and 502.
              type: string
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            match:
              $ref: '#/schemas/SecurityPolicyRuleMatcher'
              description: A match condition that incoming traffic is evaluated against.
                If it evaluates to true, the corresponding ?action? is enforced.
            preview:
              description: If set to true, the specified action is not enforced.
              type: boolean
            priority:
              description: An integer indicating the priority of a rule in the list.
                The priority must be a positive value between 0 and 2147483647. Rules
                are evaluated from highest to lowest priority where 0 is the highest
                priority and 2147483647 is the lowest prority.
              format: int32
              type: integer
          type: object
        SecurityPolicyRuleMatcher:
          description: Represents a match condition that incoming traffic is evaluated
            against. Exactly one field must be specified.
          id: SecurityPolicyRuleMatcher
          properties:
            config:
              $ref: '#/schemas/SecurityPolicyRuleMatcherConfig'
              description: The configuration options available when specifying versioned_expr.
                This field must be specified if versioned_expr is specified and cannot
                be specified if versioned_expr is not specified.
            expr:
              $ref: '#/schemas/Expr'
              description: User defined CEVAL expression. A CEVAL expression is used
                to specify match criteria such as origin.ip, source.region_code and
                contents in the request header.
            versionedExpr:
              description: 'Preconfigured versioned expression. If this field is specified,
                config must also be specified. Available preconfigured expressions
                along with their requirements are: SRC_IPS_V1 - must specify the corresponding
                src_ip_range field in config.'
              enum:
              - SRC_IPS_V1
              enumDescriptions:
              - ''
              type: string
          type: object
        SecurityPolicyRuleMatcherConfig:
          id: SecurityPolicyRuleMatcherConfig
          properties:
            srcIpRanges:
              description: CIDR IP address range.
              items:
                type: string
              type: array
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/SecurityPolicy'
      methodName: get
      schemas:
        Expr:
          description: |-
            Represents an expression text. Example:

            title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
          id: Expr
          properties:
            description:
              description: An optional description of the expression. This is a longer
                text which describes the expression, e.g. when hovered over it in
                a UI.
              type: string
            expression:
              description: |-
                Textual representation of an expression in Common Expression Language syntax.

                The application context of the containing message determines which well-known feature set of CEL is supported.
              type: string
            location:
              description: An optional string indicating the location of the expression
                for error reporting, e.g. a file name and a position in the file.
              type: string
            title:
              description: An optional title for the expression, i.e. a short string
                describing its purpose. This can be used e.g. in UIs which allow to
                enter the expression.
              type: string
          type: object
        SecurityPolicy:
          description: A security policy is comprised of one or more rules. It can
            also be associated with one or more 'targets'. (== resource_for v1.securityPolicies
            ==) (== resource_for beta.securityPolicies ==)
          id: SecurityPolicy
          properties:
            creationTimestamp:
              description: '[Output Only] Creation timestamp in RFC3339 text format.'
              type: string
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            fingerprint:
              description: |-
                Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet.

                To see the latest fingerprint, make get() request to the security policy.
              format: byte
              type: string
            id:
              description: '[Output Only] The unique identifier for the resource.
                This identifier is defined by the server.'
              format: uint64
              type: string
            kind:
              default: compute#securityPolicy
              description: '[Output only] Type of the resource. Always compute#securityPolicyfor
                security policies'
              type: string
            labelFingerprint:
              description: |-
                A fingerprint for the labels being applied to this security policy, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.

                To see the latest fingerprint, make get() request to the security policy.
              format: byte
              type: string
            labels:
              additionalProperties:
                type: string
              description: Labels to apply to this security policy resource. These
                can be later modified by the setLabels method. Each label key/value
                must comply with RFC1035. Label values may be empty.
              type: object
            name:
              description: Name of the resource. Provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            rules:
              description: A list of rules that belong to this policy. There must
                always be a default rule (rule with priority 2147483647 and match
                "*"). If no rules are provided when creating a security policy, a
                default rule with action "allow" will be added.
              items:
                $ref: '#/schemas/SecurityPolicyRule'
              type: array
            selfLink:
              description: '[Output Only] Server-defined URL for the resource.'
              type: string
          type: object
        SecurityPolicyRule:
          description: Represents a rule that describes one or more match conditions
            along with the action to be taken when traffic matches this condition
            (allow or deny).
          id: SecurityPolicyRule
          properties:
            action:
              description: The Action to preform when the client connection triggers
                the rule. Can currently be either "allow" or "deny()" where valid
                values for status are 403, 404, and 502.
              type: string
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            kind:
              default: compute#securityPolicyRule
              description: '[Output only] Type of the resource. Always compute#securityPolicyRule
                for security policy rules'
              type: string
            match:
              $ref: '#/schemas/SecurityPolicyRuleMatcher'
              description: A match condition that incoming traffic is evaluated against.
                If it evaluates to true, the corresponding ?action? is enforced.
            preview:
              description: If set to true, the specified action is not enforced.
              type: boolean
            priority:
              description: An integer indicating the priority of a rule in the list.
                The priority must be a positive value between 0 and 2147483647. Rules
                are evaluated from highest to lowest priority where 0 is the highest
                priority and 2147483647 is the lowest prority.
              format: int32
              type: integer
          type: object
        SecurityPolicyRuleMatcher:
          description: Represents a match condition that incoming traffic is evaluated
            against. Exactly one field must be specified.
          id: SecurityPolicyRuleMatcher
          properties:
            config:
              $ref: '#/schemas/SecurityPolicyRuleMatcherConfig'
              description: The configuration options available when specifying versioned_expr.
                This field must be specified if versioned_expr is specified and cannot
                be specified if versioned_expr is not specified.
            expr:
              $ref: '#/schemas/Expr'
              description: User defined CEVAL expression. A CEVAL expression is used
                to specify match criteria such as origin.ip, source.region_code and
                contents in the request header.
            versionedExpr:
              description: 'Preconfigured versioned expression. If this field is specified,
                config must also be specified. Available preconfigured expressions
                along with their requirements are: SRC_IPS_V1 - must specify the corresponding
                src_ip_range field in config.'
              enum:
              - SRC_IPS_V1
              enumDescriptions:
              - ''
              type: string
          type: object
        SecurityPolicyRuleMatcherConfig:
          id: SecurityPolicyRuleMatcherConfig
          properties:
            srcIpRanges:
              description: CIDR IP address range.
              items:
                type: string
              type: array
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/compute-beta/types/securityPolicies?alt=json
  title: Compute Engine API
