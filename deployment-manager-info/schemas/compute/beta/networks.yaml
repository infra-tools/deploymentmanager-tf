type_info:
  documentationLink: https://developers.google.com/compute/docs/reference/latest/
  kind: deploymentmanager#typeInfo
  name: networks
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        properties:
          IPv4Range:
            description: 'Deprecated in favor of subnet mode networks. The range of
              internal addresses that are legal on this network. This range is a CIDR
              specification, for example: 192.168.0.0/16. Provided by the client when
              the network is created.'
            pattern: '[0-9]{1,3}(?:\.[0-9]{1,3}){3}/[0-9]{1,2}'
            type: string
          autoCreateSubnetworks:
            description: |-
              When set to true, the VPC network is created in "auto" mode. When set to false, the VPC network is created in "custom" mode.

              An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges.
            type: boolean
          description:
            description: An optional description of this resource. Provide this property
              when you create the resource.
            type: string
          name:
            annotations:
              required:
              - compute.networks.insert
            description: Name of the resource. Provided by the client when the resource
              is created. The name must be 1-63 characters long, and comply with RFC1035.
              Specifically, the name must be 1-63 characters long and match the regular
              expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
              must be a lowercase letter, and all following characters must be a dash,
              lowercase letter, or digit, except the last character, which cannot
              be a dash.
            pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
            type: string
          requestId:
            description: |-
              An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

              For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

              The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
            location: query
            type: string
          routingConfig:
            $ref: '#/schemas/NetworkRoutingConfig'
            description: The network-level routing configuration for this network.
              Used by Cloud Router to determine what type of network-wide routing
              behavior to enforce.
        type: object
      methodName: insert
      schemas:
        Network:
          description: Represents a Network resource. Read Virtual Private Cloud (VPC)
            Network Overview for more information. (== resource_for v1.networks ==)
            (== resource_for beta.networks ==)
          id: Network
          properties:
            IPv4Range:
              description: 'Deprecated in favor of subnet mode networks. The range
                of internal addresses that are legal on this network. This range is
                a CIDR specification, for example: 192.168.0.0/16. Provided by the
                client when the network is created.'
              pattern: '[0-9]{1,3}(?:\.[0-9]{1,3}){3}/[0-9]{1,2}'
              type: string
            autoCreateSubnetworks:
              description: |-
                When set to true, the VPC network is created in "auto" mode. When set to false, the VPC network is created in "custom" mode.

                An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges.
              type: boolean
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            name:
              annotations:
                required:
                - compute.networks.insert
              description: Name of the resource. Provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            routingConfig:
              $ref: '#/schemas/NetworkRoutingConfig'
              description: The network-level routing configuration for this network.
                Used by Cloud Router to determine what type of network-wide routing
                behavior to enforce.
          type: object
        NetworkPeering:
          description: A network peering attached to a network resource. The message
            includes the peering name, peer network, peering state, and a flag indicating
            whether Google Compute Engine should automatically create routes for the
            peering.
          id: NetworkPeering
          properties:
            autoCreateRoutes:
              description: This field will be deprecated soon. Prefer using exchange_subnet_routes
                instead. Indicates whether full mesh connectivity is created and managed
                automatically. When it is set to true, Google Compute Engine will
                automatically create and manage the routes between two networks when
                the state is ACTIVE. Otherwise, user needs to create routes manually
                to route packets to peer network.
              type: boolean
            exchangeSubnetRoutes:
              description: Whether full mesh connectivity is created and managed automatically.
                When it is set to true, Google Compute Engine will automatically create
                and manage the routes between two networks when the peering state
                is ACTIVE. Otherwise, user needs to create routes manually to route
                packets to peer network.
              type: boolean
            exportCustomRoutes:
              description: Whether to export the custom routes to peer network.
              type: boolean
            importCustomRoutes:
              description: Whether to import the custom routes from peer network.
              type: boolean
            name:
              description: Name of this peering. Provided by the client when the peering
                is created. The name must comply with RFC1035. Specifically, the name
                must be 1-63 characters long and match regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
                which means the first character must be a lowercase letter, and all
                the following characters must be a dash, lowercase letter, or digit,
                except the last character, which cannot be a dash.
              type: string
            network:
              description: The URL of the peer network. It can be either full URL
                or partial URL. The peer network may belong to a different project.
                If the partial URL does not contain project, it is assumed that the
                peer network is in the same project as the current network.
              type: string
          type: object
        NetworkRoutingConfig:
          description: A routing configuration attached to a network resource. The
            message includes the list of routers associated with the network, and
            a flag indicating the type of routing behavior to enforce network-wide.
          id: NetworkRoutingConfig
          properties:
            routingMode:
              description: The network-wide routing mode to use. If set to REGIONAL,
                this network's cloud routers will only advertise routes with subnets
                of this network in the same region as the router. If set to GLOBAL,
                this network's cloud routers will advertise routes with all subnets
                of this network, across regions.
              enum:
              - GLOBAL
              - REGIONAL
              enumDescriptions:
              - ''
              - ''
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Network'
      methodName: get
      schemas:
        Network:
          description: Represents a Network resource. Read Virtual Private Cloud (VPC)
            Network Overview for more information. (== resource_for v1.networks ==)
            (== resource_for beta.networks ==)
          id: Network
          properties:
            IPv4Range:
              description: 'Deprecated in favor of subnet mode networks. The range
                of internal addresses that are legal on this network. This range is
                a CIDR specification, for example: 192.168.0.0/16. Provided by the
                client when the network is created.'
              pattern: '[0-9]{1,3}(?:\.[0-9]{1,3}){3}/[0-9]{1,2}'
              type: string
            autoCreateSubnetworks:
              description: |-
                When set to true, the VPC network is created in "auto" mode. When set to false, the VPC network is created in "custom" mode.

                An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges.
              type: boolean
            creationTimestamp:
              description: '[Output Only] Creation timestamp in RFC3339 text format.'
              type: string
            description:
              description: An optional description of this resource. Provide this
                property when you create the resource.
              type: string
            gatewayIPv4:
              description: '[Output Only] The gateway address for default routing
                out of the network. This value is read only and is selected by GCP.'
              pattern: '[0-9]{1,3}(?:\.[0-9]{1,3}){3}'
              type: string
            id:
              description: '[Output Only] The unique identifier for the resource.
                This identifier is defined by the server.'
              format: uint64
              type: string
            kind:
              default: compute#network
              description: '[Output Only] Type of the resource. Always compute#network
                for networks.'
              type: string
            name:
              annotations:
                required:
                - compute.networks.insert
              description: Name of the resource. Provided by the client when the resource
                is created. The name must be 1-63 characters long, and comply with
                RFC1035. Specifically, the name must be 1-63 characters long and match
                the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                first character must be a lowercase letter, and all following characters
                must be a dash, lowercase letter, or digit, except the last character,
                which cannot be a dash.
              pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              type: string
            peerings:
              description: '[Output Only] A list of network peerings for the resource.'
              items:
                $ref: '#/schemas/NetworkPeering'
              type: array
            routingConfig:
              $ref: '#/schemas/NetworkRoutingConfig'
              description: The network-level routing configuration for this network.
                Used by Cloud Router to determine what type of network-wide routing
                behavior to enforce.
            selfLink:
              description: '[Output Only] Server-defined URL for the resource.'
              type: string
            subnetworks:
              description: '[Output Only] Server-defined fully-qualified URLs for
                all subnetworks in this VPC network.'
              items:
                type: string
              type: array
          type: object
        NetworkPeering:
          description: A network peering attached to a network resource. The message
            includes the peering name, peer network, peering state, and a flag indicating
            whether Google Compute Engine should automatically create routes for the
            peering.
          id: NetworkPeering
          properties:
            autoCreateRoutes:
              description: This field will be deprecated soon. Prefer using exchange_subnet_routes
                instead. Indicates whether full mesh connectivity is created and managed
                automatically. When it is set to true, Google Compute Engine will
                automatically create and manage the routes between two networks when
                the state is ACTIVE. Otherwise, user needs to create routes manually
                to route packets to peer network.
              type: boolean
            exchangeSubnetRoutes:
              description: Whether full mesh connectivity is created and managed automatically.
                When it is set to true, Google Compute Engine will automatically create
                and manage the routes between two networks when the peering state
                is ACTIVE. Otherwise, user needs to create routes manually to route
                packets to peer network.
              type: boolean
            exportCustomRoutes:
              description: Whether to export the custom routes to peer network.
              type: boolean
            importCustomRoutes:
              description: Whether to import the custom routes from peer network.
              type: boolean
            name:
              description: Name of this peering. Provided by the client when the peering
                is created. The name must comply with RFC1035. Specifically, the name
                must be 1-63 characters long and match regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
                which means the first character must be a lowercase letter, and all
                the following characters must be a dash, lowercase letter, or digit,
                except the last character, which cannot be a dash.
              type: string
            network:
              description: The URL of the peer network. It can be either full URL
                or partial URL. The peer network may belong to a different project.
                If the partial URL does not contain project, it is assumed that the
                peer network is in the same project as the current network.
              type: string
            state:
              description: '[Output Only] State for the peering.'
              enum:
              - ACTIVE
              - INACTIVE
              enumDescriptions:
              - ''
              - ''
              type: string
            stateDetails:
              description: '[Output Only] Details about the current state of the peering.'
              type: string
          type: object
        NetworkRoutingConfig:
          description: A routing configuration attached to a network resource. The
            message includes the list of routers associated with the network, and
            a flag indicating the type of routing behavior to enforce network-wide.
          id: NetworkRoutingConfig
          properties:
            routingMode:
              description: The network-wide routing mode to use. If set to REGIONAL,
                this network's cloud routers will only advertise routes with subnets
                of this network in the same region as the router. If set to GLOBAL,
                this network's cloud routers will advertise routes with all subnets
                of this network, across regions.
              enum:
              - GLOBAL
              - REGIONAL
              enumDescriptions:
              - ''
              - ''
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/compute-beta/types/networks?alt=json
  title: Compute Engine API
