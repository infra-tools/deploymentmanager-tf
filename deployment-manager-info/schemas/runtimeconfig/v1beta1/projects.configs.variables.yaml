type_info:
  documentationLink: https://cloud.google.com/deployment-manager/runtime-configurator/
  kind: deploymentmanager#typeInfo
  name: projects.configs.variables
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          name:
            description: |-
              The name of the variable resource, in the format:

                  projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]

              The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a
              valid RuntimeConfig resource and `[VARIABLE_NAME]` follows Unix file system
              file path naming.

              The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and
              dashes. Slashes are used as path element separators and are not part of the
              `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one
              non-slash character. Multiple slashes are coalesced into single slash
              character. Each path segment should match
              [0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])? regular expression.
              The length of a `[VARIABLE_NAME]` must be less than 256 characters.

              Once you create a variable, you cannot change the variable name.
            type: string
          parent:
            description: |-
              The path to the RutimeConfig resource that this variable should belong to.
              The configuration must exist beforehand; the path must be in the format:

              `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
            location: path
            pattern: ^projects/[^/]+/configs/[^/]+$
            required: true
            type: string
          requestId:
            description: |-
              An optional but recommended unique `request_id`. If the server
              receives two `create()` requests  with the same
              `request_id`, then the second request will be ignored and the
              first resource created and stored in the backend is returned.
              Empty `request_id` fields are ignored.

              It is responsibility of the client to ensure uniqueness of the
              `request_id` strings.

              `request_id` strings are limited to 64 characters.
            location: query
            type: string
          state:
            description: |-
              Output only. The current state of the variable. The variable state
              indicates the outcome of the `variables().watch` call and is visible
              through the `get` and `list` calls.
            enum:
            - VARIABLE_STATE_UNSPECIFIED
            - UPDATED
            - DELETED
            enumDescriptions:
            - Default variable state.
            - The variable was updated, while `variables().watch` was executing.
            - The variable was deleted, while `variables().watch` was executing.
            type: string
          text:
            description: |-
              The string value of the variable. The length of the value must be less
              than 4096 bytes. Empty values are also accepted. For example,
              `text: "my text value"`. The string must be valid UTF-8.
            type: string
          updateTime:
            description: |-
              Output only. The time of the last variable update.
              Timestamp will be UTC timestamp.
            format: google-datetime
            type: string
          value:
            description: |-
              The binary value of the variable. The length of the value must be less
              than 4096 bytes. Empty values are also accepted. The value must be
              base64 encoded, and must comply with IETF RFC4648
              (https://www.ietf.org/rfc/rfc4648.txt). Only one of `value` or `text`
              can be set.
            format: byte
            type: string
        type: object
      methodName: create
      schemas:
        Variable:
          description: |-
            Describes a single variable within a RuntimeConfig resource.
            The name denotes the hierarchical variable name. For example,
            `ports/serving_port` is a valid variable name. The variable value is an
            opaque string and only leaf variables can have values (that is, variables
            that do not have any child variables).
          id: Variable
          properties:
            name:
              description: |-
                The name of the variable resource, in the format:

                    projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]

                The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a
                valid RuntimeConfig resource and `[VARIABLE_NAME]` follows Unix file system
                file path naming.

                The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and
                dashes. Slashes are used as path element separators and are not part of the
                `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one
                non-slash character. Multiple slashes are coalesced into single slash
                character. Each path segment should match
                [0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])? regular expression.
                The length of a `[VARIABLE_NAME]` must be less than 256 characters.

                Once you create a variable, you cannot change the variable name.
              type: string
            state:
              description: |-
                Output only. The current state of the variable. The variable state
                indicates the outcome of the `variables().watch` call and is visible
                through the `get` and `list` calls.
              enum:
              - VARIABLE_STATE_UNSPECIFIED
              - UPDATED
              - DELETED
              enumDescriptions:
              - Default variable state.
              - The variable was updated, while `variables().watch` was executing.
              - The variable was deleted, while `variables().watch` was executing.
              type: string
            text:
              description: |-
                The string value of the variable. The length of the value must be less
                than 4096 bytes. Empty values are also accepted. For example,
                `text: "my text value"`. The string must be valid UTF-8.
              type: string
            updateTime:
              description: |-
                Output only. The time of the last variable update.
                Timestamp will be UTC timestamp.
              format: google-datetime
              type: string
            value:
              description: |-
                The binary value of the variable. The length of the value must be less
                than 4096 bytes. Empty values are also accepted. The value must be
                base64 encoded, and must comply with IETF RFC4648
                (https://www.ietf.org/rfc/rfc4648.txt). Only one of `value` or `text`
                can be set.
              format: byte
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Variable'
      methodName: get
      schemas:
        Variable:
          description: |-
            Describes a single variable within a RuntimeConfig resource.
            The name denotes the hierarchical variable name. For example,
            `ports/serving_port` is a valid variable name. The variable value is an
            opaque string and only leaf variables can have values (that is, variables
            that do not have any child variables).
          id: Variable
          properties:
            name:
              description: |-
                The name of the variable resource, in the format:

                    projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]

                The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a
                valid RuntimeConfig resource and `[VARIABLE_NAME]` follows Unix file system
                file path naming.

                The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and
                dashes. Slashes are used as path element separators and are not part of the
                `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one
                non-slash character. Multiple slashes are coalesced into single slash
                character. Each path segment should match
                [0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])? regular expression.
                The length of a `[VARIABLE_NAME]` must be less than 256 characters.

                Once you create a variable, you cannot change the variable name.
              type: string
            state:
              description: |-
                Output only. The current state of the variable. The variable state
                indicates the outcome of the `variables().watch` call and is visible
                through the `get` and `list` calls.
              enum:
              - VARIABLE_STATE_UNSPECIFIED
              - UPDATED
              - DELETED
              enumDescriptions:
              - Default variable state.
              - The variable was updated, while `variables().watch` was executing.
              - The variable was deleted, while `variables().watch` was executing.
              type: string
            text:
              description: |-
                The string value of the variable. The length of the value must be less
                than 4096 bytes. Empty values are also accepted. For example,
                `text: "my text value"`. The string must be valid UTF-8.
              type: string
            updateTime:
              description: |-
                Output only. The time of the last variable update.
                Timestamp will be UTC timestamp.
              format: google-datetime
              type: string
            value:
              description: |-
                The binary value of the variable. The length of the value must be less
                than 4096 bytes. Empty values are also accepted. The value must be
                base64 encoded, and must comply with IETF RFC4648
                (https://www.ietf.org/rfc/rfc4648.txt). Only one of `value` or `text`
                can be set.
              format: byte
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/runtimeconfig-v1beta1/types/projects.configs.variables?alt=json
  title: Cloud Runtime Configuration API
