type_info:
  documentationLink: https://cloud.google.com/bigquery/
  kind: deploymentmanager#typeInfo
  name: models
  schema:
    input: '{}'
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Model'
      methodName: get
      schemas:
        AggregateClassificationMetrics:
          description: |-
            Aggregate metrics for classification/classifier models. For multi-class
            models, the metrics are either macro-averaged or micro-averaged. When
            macro-averaged, the metrics are calculated for each label and then an
            unweighted average is taken of those values. When micro-averaged, the
            metric is calculated globally by counting the total number of correctly
            predicted rows.
          id: AggregateClassificationMetrics
          properties:
            accuracy:
              description: |-
                Accuracy is the fraction of predictions given the correct label. For
                multiclass this is a micro-averaged metric.
              format: double
              type: number
            f1Score:
              description: |-
                The F1 score is an average of recall and precision. For multiclass
                this is a macro-averaged metric.
              format: double
              type: number
            logLoss:
              description: Logarithmic Loss. For multiclass this is a macro-averaged
                metric.
              format: double
              type: number
            precision:
              description: |-
                Precision is the fraction of actual positive predictions that had
                positive actual labels. For multiclass this is a macro-averaged
                metric treating each class as a binary classifier.
              format: double
              type: number
            recall:
              description: |-
                Recall is the fraction of actual positive labels that were given a
                positive prediction. For multiclass this is a macro-averaged metric.
              format: double
              type: number
            rocAuc:
              description: |-
                Area Under a ROC Curve. For multiclass this is a macro-averaged
                metric.
              format: double
              type: number
            threshold:
              description: |-
                Threshold at which the metrics are computed. For binary
                classification models this is the positive class threshold.
                For multi-class classfication models this is the confidence
                threshold.
              format: double
              type: number
          type: object
        BinaryClassificationMetrics:
          description: Evaluation metrics for binary classification/classifier models.
          id: BinaryClassificationMetrics
          properties:
            aggregateClassificationMetrics:
              $ref: '#/schemas/AggregateClassificationMetrics'
              description: Aggregate classification metrics.
            binaryConfusionMatrixList:
              description: Binary confusion matrix at multiple thresholds.
              items:
                $ref: '#/schemas/BinaryConfusionMatrix'
              type: array
          type: object
        BinaryConfusionMatrix:
          description: Confusion matrix for binary classification models.
          id: BinaryConfusionMatrix
          properties:
            falseNegatives:
              description: Number of false samples predicted as false.
              format: int64
              type: string
            falsePositives:
              description: Number of false samples predicted as true.
              format: int64
              type: string
            positiveClassThreshold:
              description: Threshold value used when computing each of the following
                metric.
              format: double
              type: number
            precision:
              description: Aggregate precision.
              format: double
              type: number
            recall:
              description: Aggregate recall.
              format: double
              type: number
            trueNegatives:
              description: Number of true samples predicted as false.
              format: int64
              type: string
            truePositives:
              description: Number of true samples predicted as true.
              format: int64
              type: string
          type: object
        ClusterInfo:
          description: Information about a single cluster for clustering model.
          id: ClusterInfo
          properties:
            centroidId:
              description: Centroid id.
              format: int64
              type: string
            clusterRadius:
              description: |-
                Cluster radius, the average distance from centroid
                to each point assigned to the cluster.
              format: double
              type: number
            clusterSize:
              description: Cluster size, the total number of points assigned to the
                cluster.
              format: int64
              type: string
          type: object
        ClusteringMetrics:
          description: Evaluation metrics for clustering models.
          id: ClusteringMetrics
          properties:
            daviesBouldinIndex:
              description: Davies-Bouldin index.
              format: double
              type: number
            meanSquaredDistance:
              description: Mean of squared distances between each sample to its cluster
                centroid.
              format: double
              type: number
          type: object
        ConfusionMatrix:
          description: Confusion matrix for multi-class classification models.
          id: ConfusionMatrix
          properties:
            confidenceThreshold:
              description: |-
                Confidence threshold used when computing the entries of the
                confusion matrix.
              format: double
              type: number
            rows:
              description: One row per actual label.
              items:
                $ref: '#/schemas/Row'
              type: array
          type: object
        Entry:
          description: A single entry in the confusion matrix.
          id: Entry
          properties:
            itemCount:
              description: Number of items being predicted as this label.
              format: int64
              type: string
            predictedLabel:
              description: |-
                The predicted label. For confidence_threshold > 0, we will
                also add an entry indicating the number of items under the
                confidence threshold.
              type: string
          type: object
        EvaluationMetrics:
          description: |-
            Evaluation metrics of a model. These are either computed on all training
            data or just the eval data based on whether eval data was used during
            training. These are not present for imported models.
          id: EvaluationMetrics
          properties:
            binaryClassificationMetrics:
              $ref: '#/schemas/BinaryClassificationMetrics'
              description: Populated for binary classification/classifier models.
            clusteringMetrics:
              $ref: '#/schemas/ClusteringMetrics'
              description: '[Beta] Populated for clustering models.'
            multiClassClassificationMetrics:
              $ref: '#/schemas/MultiClassClassificationMetrics'
              description: Populated for multi-class classification/classifier models.
            regressionMetrics:
              $ref: '#/schemas/RegressionMetrics'
              description: Populated for regression models.
          type: object
        IterationResult:
          description: Information about a single iteration of the training run.
          id: IterationResult
          properties:
            clusterInfos:
              description: '[Beta] Information about top clusters for clustering models.'
              items:
                $ref: '#/schemas/ClusterInfo'
              type: array
            durationMs:
              description: Time taken to run the iteration in milliseconds.
              format: int64
              type: string
            evalLoss:
              description: Loss computed on the eval data at the end of iteration.
              format: double
              type: number
            index:
              description: Index of the iteration, 0 based.
              format: int32
              type: integer
            learnRate:
              description: Learn rate used for this iteration.
              format: double
              type: number
            trainingLoss:
              description: Loss computed on the training data at the end of iteration.
              format: double
              type: number
          type: object
        Model:
          id: Model
          properties:
            creationTime:
              description: |-
                Output only. The time when this model was created, in millisecs since the
                epoch.
              format: int64
              type: string
            description:
              description: |-
                [Optional] A user-friendly description of this model.
                @mutable bigquery.models.patch
              type: string
            etag:
              description: Output only. A hash of this resource.
              type: string
            expirationTime:
              description: |-
                [Optional] The time when this model expires, in milliseconds since the
                epoch. If not present, the model will persist indefinitely. Expired models
                will be deleted and their storage reclaimed.  The defaultTableExpirationMs
                property of the encapsulating dataset can be used to set a default
                expirationTime on newly created models.
                @mutable bigquery.models.patch
              format: int64
              type: string
            featureColumns:
              description: Output only. Input feature columns that were used to train
                this model.
              items:
                $ref: '#/schemas/StandardSqlField'
              type: array
            friendlyName:
              description: |-
                [Optional] A descriptive name for this model.
                @mutable bigquery.models.patch
              type: string
            labelColumns:
              description: |-
                Output only. Label columns that were used to train this model.
                The output of the model will have a "predicted_" prefix to these columns.
              items:
                $ref: '#/schemas/StandardSqlField'
              type: array
            labels:
              additionalProperties:
                type: string
              description: |-
                [Optional] The labels associated with this model. You can use these to
                organize and group your models. Label keys and values can be no longer
                than 63 characters, can only contain lowercase letters, numeric
                characters, underscores and dashes. International characters are allowed.
                Label values are optional. Label keys must start with a letter and each
                label in the list must have a different key.
                @mutable bigquery.models.patch
              type: object
            lastModifiedTime:
              description: |-
                Output only. The time when this model was last modified, in millisecs
                since the epoch.
              format: int64
              type: string
            location:
              description: |-
                Output only. The geographic location where the model resides. This value
                is inherited from the dataset.
              type: string
            modelReference:
              $ref: '#/schemas/ModelReference'
              description: Required. Unique identifier for this model.
            modelType:
              description: Output only. Type of the model resource.
              enum:
              - MODEL_TYPE_UNSPECIFIED
              - LINEAR_REGRESSION
              - LOGISTIC_REGRESSION
              - KMEANS
              - TENSORFLOW
              enumDescriptions:
              - ''
              - Linear regression model.
              - Logistic regression based classification model.
              - '[Beta] K-means clustering model.'
              - '[Beta] An imported TensorFlow model.'
              type: string
            trainingRuns:
              description: |-
                Output only. Information for all training runs in increasing order of
                start_time.
              items:
                $ref: '#/schemas/TrainingRun'
              type: array
          type: object
        ModelReference:
          description: Id path of a model.
          id: ModelReference
          properties:
            datasetId:
              description: '[Required] The ID of the dataset containing this model.'
              type: string
            modelId:
              description: |-
                [Required] The ID of the model. The ID must contain only
                letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                length is 1,024 characters.
              type: string
            projectId:
              description: '[Required] The ID of the project containing this model.'
              type: string
          type: object
        MultiClassClassificationMetrics:
          description: Evaluation metrics for multi-class classification/classifier
            models.
          id: MultiClassClassificationMetrics
          properties:
            aggregateClassificationMetrics:
              $ref: '#/schemas/AggregateClassificationMetrics'
              description: Aggregate classification metrics.
            confusionMatrixList:
              description: Confusion matrix at different thresholds.
              items:
                $ref: '#/schemas/ConfusionMatrix'
              type: array
          type: object
        RegressionMetrics:
          description: Evaluation metrics for regression models.
          id: RegressionMetrics
          properties:
            meanAbsoluteError:
              description: Mean absolute error.
              format: double
              type: number
            meanSquaredError:
              description: Mean squared error.
              format: double
              type: number
            meanSquaredLogError:
              description: Mean squared log error.
              format: double
              type: number
            medianAbsoluteError:
              description: Median absolute error.
              format: double
              type: number
            rSquared:
              description: R^2 score.
              format: double
              type: number
          type: object
        Row:
          description: A single row in the confusion matrix.
          id: Row
          properties:
            actualLabel:
              description: The original label of this row.
              type: string
            entries:
              description: Info describing predicted label distribution.
              items:
                $ref: '#/schemas/Entry'
              type: array
          type: object
        StandardSqlDataType:
          description: |-
            The type of a variable, e.g., a function argument.
            Examples:
            INT64: {type_kind="INT64"}
            ARRAY<STRING>: {type_kind="ARRAY", array_element_type="STRING"}
            STRUCT<x STRING, y ARRAY<DATE>>:
              {type_kind="STRUCT",
               struct_type={fields=[
                 {name="x", type={type_kind="STRING"}},
                 {name="y", type={type_kind="ARRAY", array_element_type="DATE"}}
               ]}}
          id: StandardSqlDataType
          properties:
            arrayElementType:
              $ref: '#/schemas/StandardSqlDataType'
              description: The type of the array's elements, if type_kind = "ARRAY".
            structType:
              $ref: '#/schemas/StandardSqlStructType'
              description: The fields of this struct, in order, if type_kind = "STRUCT".
            typeKind:
              description: |-
                Required. The top level type of this field.
                Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
              enum:
              - TYPE_KIND_UNSPECIFIED
              - INT64
              - BOOL
              - FLOAT64
              - STRING
              - BYTES
              - TIMESTAMP
              - DATE
              - TIME
              - DATETIME
              - GEOGRAPHY
              - NUMERIC
              - ARRAY
              - STRUCT
              enumDescriptions:
              - Invalid type.
              - Encoded as a string in decimal format.
              - Encoded as a boolean "false" or "true".
              - Encoded as a number, or string "NaN", "Infinity" or "-Infinity".
              - Encoded as a string value.
              - Encoded as a base64 string per RFC 4648, section 4.
              - |-
                Encoded as an RFC 3339 timestamp with mandatory "Z" time zone string:
                1985-04-12T23:20:50.52Z
              - 'Encoded as RFC 3339 full-date format string: 1985-04-12'
              - 'Encoded as RFC 3339 partial-time format string: 23:20:50.52'
              - 'Encoded as RFC 3339 full-date "T" partial-time: 1985-04-12T23:20:50.52'
              - Encoded as WKT
              - Encoded as a decimal string.
              - Encoded as a list with types matching Type.array_type.
              - |-
                Encoded as a list with fields of type Type.struct_type[i]. List is used
                because a JSON object cannot have duplicate field names.
              type: string
          type: object
        StandardSqlField:
          description: A field or a column.
          id: StandardSqlField
          properties:
            name:
              description: Optional. The name of this field. Can be absent for struct
                fields.
              type: string
            type:
              $ref: '#/schemas/StandardSqlDataType'
              description: |-
                Optional. The type of this parameter. Absent if not explicitly
                specified (e.g., CREATE FUNCTION statement can omit the return type;
                in this case the output parameter does not have this "type" field).
          type: object
        StandardSqlStructType:
          id: StandardSqlStructType
          properties:
            fields:
              items:
                $ref: '#/schemas/StandardSqlField'
              type: array
          type: object
        TrainingOptions:
          id: TrainingOptions
          properties:
            dataSplitColumn:
              description: |-
                The column to split data with. This column won't be used as a
                feature.
                1. When data_split_method is CUSTOM, the corresponding column should
                be boolean. The rows with true value tag are eval data, and the false
                are training data.
                2. When data_split_method is SEQ, the first DATA_SPLIT_EVAL_FRACTION
                rows (from smallest to largest) in the corresponding column are used
                as training data, and the rest are eval data. It respects the order
                in Orderable data types:
                https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#data-type-properties
              type: string
            dataSplitEvalFraction:
              description: |-
                The fraction of evaluation data over the whole input data. The rest
                of data will be used as training data. The format should be double.
                Accurate to two decimal places.
                Default value is 0.2.
              format: double
              type: number
            dataSplitMethod:
              description: The data split type for training and evaluation, e.g. RANDOM.
              enum:
              - DATA_SPLIT_METHOD_UNSPECIFIED
              - RANDOM
              - CUSTOM
              - SEQUENTIAL
              - NO_SPLIT
              - AUTO_SPLIT
              enumDescriptions:
              - ''
              - Splits data randomly.
              - Splits data with the user provided tags.
              - Splits data sequentially.
              - Data split will be skipped.
              - |-
                Splits data automatically: Uses NO_SPLIT if the data size is small.
                Otherwise uses RANDOM.
              type: string
            distanceType:
              description: '[Beta] Distance type for clustering models.'
              enum:
              - DISTANCE_TYPE_UNSPECIFIED
              - EUCLIDEAN
              - COSINE
              enumDescriptions:
              - ''
              - Eculidean distance.
              - Cosine distance.
              type: string
            earlyStop:
              description: |-
                Whether to stop early when the loss doesn't improve significantly
                any more (compared to min_relative_progress). Used only for iterative
                training algorithms.
              type: boolean
            initialLearnRate:
              description: |-
                Specifies the initial learning rate for the line search learn rate
                strategy.
              format: double
              type: number
            inputLabelColumns:
              description: Name of input label columns in training data.
              items:
                type: string
              type: array
            l1Regularization:
              description: L1 regularization coefficient.
              format: double
              type: number
            l2Regularization:
              description: L2 regularization coefficient.
              format: double
              type: number
            labelClassWeights:
              additionalProperties:
                format: double
                type: number
              description: |-
                Weights associated with each label class, for rebalancing the
                training data. Only applicable for classification models.
              type: object
            learnRate:
              description: Learning rate in training. Used only for iterative training
                algorithms.
              format: double
              type: number
            learnRateStrategy:
              description: The strategy to determine learn rate for the current iteration.
              enum:
              - LEARN_RATE_STRATEGY_UNSPECIFIED
              - LINE_SEARCH
              - CONSTANT
              enumDescriptions:
              - ''
              - Use line search to determine learning rate.
              - Use a constant learning rate.
              type: string
            lossType:
              description: Type of loss function used during training run.
              enum:
              - LOSS_TYPE_UNSPECIFIED
              - MEAN_SQUARED_LOSS
              - MEAN_LOG_LOSS
              enumDescriptions:
              - ''
              - Mean squared loss, used for linear regression.
              - Mean log loss, used for logistic regression.
              type: string
            maxIterations:
              description: |-
                The maximum number of iterations in training. Used only for iterative
                training algorithms.
              format: int64
              type: string
            minRelativeProgress:
              description: |-
                When early_stop is true, stops training when accuracy improvement is
                less than 'min_relative_progress'. Used only for iterative training
                algorithms.
              format: double
              type: number
            modelUri:
              description: |-
                [Beta] Google Cloud Storage URI from which the model was imported. Only
                applicable for imported models.
              type: string
            numClusters:
              description: '[Beta] Number of clusters for clustering models.'
              format: int64
              type: string
            optimizationStrategy:
              description: Optimization strategy for training linear regression models.
              enum:
              - OPTIMIZATION_STRATEGY_UNSPECIFIED
              - BATCH_GRADIENT_DESCENT
              - NORMAL_EQUATION
              enumDescriptions:
              - ''
              - Uses an iterative batch gradient descent algorithm.
              - Uses a normal equation to solve linear regression problem.
              type: string
            warmStart:
              description: Whether to train a model from the last checkpoint.
              type: boolean
          type: object
        TrainingRun:
          description: Information about a single training query run for the model.
          id: TrainingRun
          properties:
            evaluationMetrics:
              $ref: '#/schemas/EvaluationMetrics'
              description: |-
                The evaluation metrics over training/eval data that were computed at the
                end of training.
            results:
              description: Output of each iteration run, results.size() <= max_iterations.
              items:
                $ref: '#/schemas/IterationResult'
              type: array
            startTime:
              description: The start time of this training run.
              format: google-datetime
              type: string
            trainingOptions:
              $ref: '#/schemas/TrainingOptions'
              description: |-
                Options that were used for this training run, includes
                user specified and default options that were used.
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/bigquery-v2/types/models?alt=json
  title: BigQuery API
