type_info:
  documentationLink: https://cloud.google.com/bigquery/
  kind: deploymentmanager#typeInfo
  name: jobs
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        properties:
          configuration:
            $ref: '#/schemas/JobConfiguration'
            description: '[Required] Describes the job configuration.'
          etag:
            description: '[Output-only] A hash of this resource.'
            type: string
          id:
            description: '[Output-only] Opaque ID field of the job'
            type: string
          jobReference:
            $ref: '#/schemas/JobReference'
            description: '[Optional] Reference describing the unique-per-user name
              of the job.'
          kind:
            default: bigquery#job
            description: '[Output-only] The type of the resource.'
            type: string
          selfLink:
            description: '[Output-only] A URL that can be used to access this resource
              again.'
            type: string
          statistics:
            $ref: '#/schemas/JobStatistics'
            description: '[Output-only] Information about the job, including starting
              time and ending time of the job.'
          status:
            $ref: '#/schemas/JobStatus'
            description: '[Output-only] The status of this job. Examine this value
              when polling an asynchronous job to see if the job is complete.'
          user_email:
            description: '[Output-only] Email address of the user who ran the job.'
            type: string
        type: object
      methodName: insert
      schemas:
        BigQueryModelTraining:
          id: BigQueryModelTraining
          properties:
            currentIteration:
              description: '[Output-only, Beta] Index of current ML training iteration.
                Updated during create model query job to show job progress.'
              format: int32
              type: integer
            expectedTotalIterations:
              description: '[Output-only, Beta] Expected number of iterations for
                the create model query job specified as num_iterations in the input
                query. The actual total number of iterations may be less than this
                number due to early stop.'
              format: int64
              type: string
          type: object
        BigtableColumn:
          id: BigtableColumn
          properties:
            encoding:
              description: "[Optional] The encoding of the values when the type is\
                \ not STRING. Acceptable encoding values are: TEXT - indicates values\
                \ are alphanumeric text strings. BINARY - indicates values are encoded\
                \ using HBase Bytes.toBytes family of functions. 'encoding' can also\
                \ be set at the column family level. However, the setting at this\
                \ level takes precedence if 'encoding' is set at both levels."
              type: string
            fieldName:
              description: '[Optional] If the qualifier is not a valid BigQuery field
                identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier
                must be provided as the column field name and is used as field name
                in queries.'
              type: string
            onlyReadLatest:
              description: "[Optional] If this is set, only the latest version of\
                \ value in this column are exposed. 'onlyReadLatest' can also be set\
                \ at the column family level. However, the setting at this level takes\
                \ precedence if 'onlyReadLatest' is set at both levels."
              type: boolean
            qualifierEncoded:
              description: '[Required] Qualifier of the column. Columns in the parent
                column family that has this exact qualifier are exposed as . field.
                If the qualifier is valid UTF-8 string, it can be specified in the
                qualifier_string field. Otherwise, a base-64 encoded value must be
                set to qualifier_encoded. The column field name is the same as the
                column qualifier. However, if the qualifier is not a valid BigQuery
                field identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid
                identifier must be provided as field_name.'
              format: byte
              type: string
            qualifierString:
              type: string
            type:
              description: "[Optional] The type to convert the value in cells of this\
                \ column. The values are expected to be encoded using HBase Bytes.toBytes\
                \ function when using the BINARY encoding value. Following BigQuery\
                \ types are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT\
                \ BOOLEAN Default type is BYTES. 'type' can also be set at the column\
                \ family level. However, the setting at this level takes precedence\
                \ if 'type' is set at both levels."
              type: string
          type: object
        BigtableColumnFamily:
          id: BigtableColumnFamily
          properties:
            columns:
              description: '[Optional] Lists of columns that should be exposed as
                individual fields as opposed to a list of (column name, value) pairs.
                All columns whose qualifier matches a qualifier in this list can be
                accessed as .. Other columns can be accessed as a list through .Column
                field.'
              items:
                $ref: '#/schemas/BigtableColumn'
              type: array
            encoding:
              description: "[Optional] The encoding of the values when the type is\
                \ not STRING. Acceptable encoding values are: TEXT - indicates values\
                \ are alphanumeric text strings. BINARY - indicates values are encoded\
                \ using HBase Bytes.toBytes family of functions. This can be overridden\
                \ for a specific column by listing that column in 'columns' and specifying\
                \ an encoding for it."
              type: string
            familyId:
              description: Identifier of the column family.
              type: string
            onlyReadLatest:
              description: "[Optional] If this is set only the latest version of value\
                \ are exposed for all columns in this column family. This can be overridden\
                \ for a specific column by listing that column in 'columns' and specifying\
                \ a different setting for that column."
              type: boolean
            type:
              description: "[Optional] The type to convert the value in cells of this\
                \ column family. The values are expected to be encoded using HBase\
                \ Bytes.toBytes function when using the BINARY encoding value. Following\
                \ BigQuery types are allowed (case-sensitive) - BYTES STRING INTEGER\
                \ FLOAT BOOLEAN Default type is BYTES. This can be overridden for\
                \ a specific column by listing that column in 'columns' and specifying\
                \ a type for it."
              type: string
          type: object
        BigtableOptions:
          id: BigtableOptions
          properties:
            columnFamilies:
              description: "[Optional] List of column families to expose in the table\
                \ schema along with their types. This list restricts the column families\
                \ that can be referenced in queries and specifies their value types.\
                \ You can use this list to do type conversions - see the 'type' field\
                \ for more details. If you leave this list empty, all column families\
                \ are present in the table schema and their values are read as BYTES.\
                \ During a query only the column families referenced in that query\
                \ are read from Bigtable."
              items:
                $ref: '#/schemas/BigtableColumnFamily'
              type: array
            ignoreUnspecifiedColumnFamilies:
              description: '[Optional] If field is true, then the column families
                that are not specified in columnFamilies list are not exposed in the
                table schema. Otherwise, they are read with BYTES type values. The
                default value is false.'
              type: boolean
            readRowkeyAsString:
              description: '[Optional] If field is true, then the rowkey column families
                will be read and converted to string. Otherwise they are read with
                BYTES type values and users need to manually cast them with CAST if
                necessary. The default value is false.'
              type: boolean
          type: object
        Clustering:
          id: Clustering
          properties:
            fields:
              description: '[Repeated] One or more fields on which data should be
                clustered. Only top-level, non-repeated, simple-type fields are supported.
                When you cluster a table using multiple columns, the order of columns
                you specify is important. The order of the specified columns determines
                the sort order of the data.'
              items:
                type: string
              type: array
          type: object
        CsvOptions:
          id: CsvOptions
          properties:
            allowJaggedRows:
              description: '[Optional] Indicates if BigQuery should accept rows that
                are missing trailing optional columns. If true, BigQuery treats missing
                trailing columns as null values. If false, records with missing trailing
                columns are treated as bad records, and if there are too many bad
                records, an invalid error is returned in the job result. The default
                value is false.'
              type: boolean
            allowQuotedNewlines:
              description: '[Optional] Indicates if BigQuery should allow quoted data
                sections that contain newline characters in a CSV file. The default
                value is false.'
              type: boolean
            encoding:
              description: '[Optional] The character encoding of the data. The supported
                values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery
                decodes the data after the raw, binary data has been split using the
                values of the quote and fieldDelimiter properties.'
              type: string
            fieldDelimiter:
              description: "[Optional] The separator for fields in a CSV file. BigQuery\
                \ converts the string to ISO-8859-1 encoding, and then uses the first\
                \ byte of the encoded string to split the data in its raw, binary\
                \ state. BigQuery also supports the escape sequence \"\\t\" to specify\
                \ a tab separator. The default value is a comma (',')."
              type: string
            quote:
              default: '"'
              description: "[Optional] The value that is used to quote data sections\
                \ in a CSV file. BigQuery converts the string to ISO-8859-1 encoding,\
                \ and then uses the first byte of the encoded string to split the\
                \ data in its raw, binary state. The default value is a double-quote\
                \ ('\"'). If your data does not contain quoted sections, set the property\
                \ value to an empty string. If your data contains quoted newline characters,\
                \ you must also set the allowQuotedNewlines property to true."
              pattern: .?
              type: string
            skipLeadingRows:
              description: '[Optional] The number of rows at the top of a CSV file
                that BigQuery will skip when reading the data. The default value is
                0. This property is useful if you have header rows in the file that
                should be skipped.'
              format: int64
              type: string
          type: object
        DatasetReference:
          id: DatasetReference
          properties:
            datasetId:
              annotations:
                required:
                - bigquery.datasets.update
              description: '[Required] A unique ID for this dataset, without the project
                name. The ID must contain only letters (a-z, A-Z), numbers (0-9),
                or underscores (_). The maximum length is 1,024 characters.'
              type: string
            projectId:
              annotations:
                required:
                - bigquery.datasets.update
              description: '[Optional] The ID of the project containing this dataset.'
              type: string
          type: object
        DestinationTableProperties:
          id: DestinationTableProperties
          properties:
            description:
              description: '[Optional] The description for the destination table.
                This will only be used if the destination table is newly created.
                If the table already exists and a value different than the current
                description is provided, the job will fail.'
              type: string
            friendlyName:
              description: '[Optional] The friendly name for the destination table.
                This will only be used if the destination table is newly created.
                If the table already exists and a value different than the current
                friendly name is provided, the job will fail.'
              type: string
            labels:
              additionalProperties:
                type: string
              description: '[Optional] The labels associated with this table. You
                can use these to organize and group your tables. This will only be
                used if the destination table is newly created. If the table already
                exists and labels are different than the current labels are provided,
                the job will fail.'
              type: object
          type: object
        EncryptionConfiguration:
          id: EncryptionConfiguration
          properties:
            kmsKeyName:
              description: '[Optional] Describes the Cloud KMS encryption key that
                will be used to protect destination BigQuery table. The BigQuery Service
                Account associated with your project requires access to this encryption
                key.'
              type: string
          type: object
        ErrorProto:
          id: ErrorProto
          properties:
            debugInfo:
              description: Debugging information. This property is internal to Google
                and should not be used.
              type: string
            location:
              description: Specifies where the error occurred, if present.
              type: string
            message:
              description: A human-readable description of the error.
              type: string
            reason:
              description: A short error code that summarizes the error.
              type: string
          type: object
        ExplainQueryStage:
          id: ExplainQueryStage
          properties:
            completedParallelInputs:
              description: Number of parallel input segments completed.
              format: int64
              type: string
            computeMsAvg:
              description: Milliseconds the average shard spent on CPU-bound tasks.
              format: int64
              type: string
            computeMsMax:
              description: Milliseconds the slowest shard spent on CPU-bound tasks.
              format: int64
              type: string
            computeRatioAvg:
              description: Relative amount of time the average shard spent on CPU-bound
                tasks.
              format: double
              type: number
            computeRatioMax:
              description: Relative amount of time the slowest shard spent on CPU-bound
                tasks.
              format: double
              type: number
            endMs:
              description: Stage end time represented as milliseconds since epoch.
              format: int64
              type: string
            id:
              description: Unique ID for stage within plan.
              format: int64
              type: string
            inputStages:
              description: IDs for stages that are inputs to this stage.
              items:
                format: int64
                type: string
              type: array
            name:
              description: Human-readable name for stage.
              type: string
            parallelInputs:
              description: Number of parallel input segments to be processed.
              format: int64
              type: string
            readMsAvg:
              description: Milliseconds the average shard spent reading input.
              format: int64
              type: string
            readMsMax:
              description: Milliseconds the slowest shard spent reading input.
              format: int64
              type: string
            readRatioAvg:
              description: Relative amount of time the average shard spent reading
                input.
              format: double
              type: number
            readRatioMax:
              description: Relative amount of time the slowest shard spent reading
                input.
              format: double
              type: number
            recordsRead:
              description: Number of records read into the stage.
              format: int64
              type: string
            recordsWritten:
              description: Number of records written by the stage.
              format: int64
              type: string
            shuffleOutputBytes:
              description: Total number of bytes written to shuffle.
              format: int64
              type: string
            shuffleOutputBytesSpilled:
              description: Total number of bytes written to shuffle and spilled to
                disk.
              format: int64
              type: string
            startMs:
              description: Stage start time represented as milliseconds since epoch.
              format: int64
              type: string
            status:
              description: Current status for the stage.
              type: string
            steps:
              description: List of operations within the stage in dependency order
                (approximately chronological).
              items:
                $ref: '#/schemas/ExplainQueryStep'
              type: array
            waitMsAvg:
              description: Milliseconds the average shard spent waiting to be scheduled.
              format: int64
              type: string
            waitMsMax:
              description: Milliseconds the slowest shard spent waiting to be scheduled.
              format: int64
              type: string
            waitRatioAvg:
              description: Relative amount of time the average shard spent waiting
                to be scheduled.
              format: double
              type: number
            waitRatioMax:
              description: Relative amount of time the slowest shard spent waiting
                to be scheduled.
              format: double
              type: number
            writeMsAvg:
              description: Milliseconds the average shard spent on writing output.
              format: int64
              type: string
            writeMsMax:
              description: Milliseconds the slowest shard spent on writing output.
              format: int64
              type: string
            writeRatioAvg:
              description: Relative amount of time the average shard spent on writing
                output.
              format: double
              type: number
            writeRatioMax:
              description: Relative amount of time the slowest shard spent on writing
                output.
              format: double
              type: number
          type: object
        ExplainQueryStep:
          id: ExplainQueryStep
          properties:
            kind:
              description: Machine-readable operation type.
              type: string
            substeps:
              description: Human-readable stage descriptions.
              items:
                type: string
              type: array
          type: object
        ExternalDataConfiguration:
          id: ExternalDataConfiguration
          properties:
            autodetect:
              description: Try to detect schema and format options automatically.
                Any option specified explicitly will be honored.
              type: boolean
            bigtableOptions:
              $ref: '#/schemas/BigtableOptions'
              description: '[Optional] Additional options if sourceFormat is set to
                BIGTABLE.'
            compression:
              description: '[Optional] The compression type of the data source. Possible
                values include GZIP and NONE. The default value is NONE. This setting
                is ignored for Google Cloud Bigtable, Google Cloud Datastore backups
                and Avro formats.'
              type: string
            csvOptions:
              $ref: '#/schemas/CsvOptions'
              description: Additional properties to set if sourceFormat is set to
                CSV.
            googleSheetsOptions:
              $ref: '#/schemas/GoogleSheetsOptions'
              description: '[Optional] Additional options if sourceFormat is set to
                GOOGLE_SHEETS.'
            hivePartitioningMode:
              description: '[Optional, Experimental] If hive partitioning is enabled,
                which mode to use. Two modes are supported: - AUTO: automatically
                infer partition key name(s) and type(s). - STRINGS: automatic infer
                partition key name(s). All types are strings. Not all storage formats
                support hive partitioning -- requesting hive partitioning on an unsupported
                format will lead to an error.'
              type: string
            ignoreUnknownValues:
              description: "[Optional] Indicates if BigQuery should allow extra values\
                \ that are not represented in the table schema. If true, the extra\
                \ values are ignored. If false, records with extra columns are treated\
                \ as bad records, and if there are too many bad records, an invalid\
                \ error is returned in the job result. The default value is false.\
                \ The sourceFormat property determines what BigQuery treats as an\
                \ extra value: CSV: Trailing columns JSON: Named values that don't\
                \ match any column names Google Cloud Bigtable: This setting is ignored.\
                \ Google Cloud Datastore backups: This setting is ignored. Avro: This\
                \ setting is ignored."
              type: boolean
            maxBadRecords:
              description: '[Optional] The maximum number of bad records that BigQuery
                can ignore when reading data. If the number of bad records exceeds
                this value, an invalid error is returned in the job result. This is
                only valid for CSV, JSON, and Google Sheets. The default value is
                0, which requires that all records are valid. This setting is ignored
                for Google Cloud Bigtable, Google Cloud Datastore backups and Avro
                formats.'
              format: int32
              type: integer
            schema:
              $ref: '#/schemas/TableSchema'
              description: '[Optional] The schema for the data. Schema is required
                for CSV and JSON formats. Schema is disallowed for Google Cloud Bigtable,
                Cloud Datastore backups, and Avro formats.'
            sourceFormat:
              description: '[Required] The data format. For CSV files, specify "CSV".
                For Google sheets, specify "GOOGLE_SHEETS". For newline-delimited
                JSON, specify "NEWLINE_DELIMITED_JSON". For Avro files, specify "AVRO".
                For Google Cloud Datastore backups, specify "DATASTORE_BACKUP". [Beta]
                For Google Cloud Bigtable, specify "BIGTABLE".'
              type: string
            sourceUris:
              description: "[Required] The fully-qualified URIs that point to your\
                \ data in Google Cloud. For Google Cloud Storage URIs: Each URI can\
                \ contain one '*' wildcard character and it must come after the 'bucket'\
                \ name. Size limits related to load jobs apply to external data sources.\
                \ For Google Cloud Bigtable URIs: Exactly one URI can be specified\
                \ and it has be a fully specified and valid HTTPS URL for a Google\
                \ Cloud Bigtable table. For Google Cloud Datastore backups, exactly\
                \ one URI can be specified. Also, the '*' wildcard character is not\
                \ allowed."
              items:
                type: string
              type: array
          type: object
        GoogleSheetsOptions:
          id: GoogleSheetsOptions
          properties:
            range:
              description: '[Beta] [Optional] Range of a sheet to query from. Only
                used when non-empty. Typical format: sheet_name!top_left_cell_id:bottom_right_cell_id
                For example: sheet1!A1:B20'
              type: string
            skipLeadingRows:
              description: '[Optional] The number of rows at the top of a sheet that
                BigQuery will skip when reading the data. The default value is 0.
                This property is useful if you have header rows that should be skipped.
                When autodetect is on, behavior is the following: * skipLeadingRows
                unspecified - Autodetect tries to detect headers in the first row.
                If they are not detected, the row is read as data. Otherwise data
                is read starting from the second row. * skipLeadingRows is 0 - Instructs
                autodetect that there are no headers and data should be read starting
                from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1
                rows and tries to detect headers in row N. If headers are not detected,
                row N is just skipped. Otherwise row N is used to extract column names
                for the detected schema.'
              format: int64
              type: string
          type: object
        Job:
          id: Job
          properties:
            configuration:
              $ref: '#/schemas/JobConfiguration'
              description: '[Required] Describes the job configuration.'
            etag:
              description: '[Output-only] A hash of this resource.'
              type: string
            id:
              description: '[Output-only] Opaque ID field of the job'
              type: string
            jobReference:
              $ref: '#/schemas/JobReference'
              description: '[Optional] Reference describing the unique-per-user name
                of the job.'
            kind:
              default: bigquery#job
              description: '[Output-only] The type of the resource.'
              type: string
            selfLink:
              description: '[Output-only] A URL that can be used to access this resource
                again.'
              type: string
            statistics:
              $ref: '#/schemas/JobStatistics'
              description: '[Output-only] Information about the job, including starting
                time and ending time of the job.'
            status:
              $ref: '#/schemas/JobStatus'
              description: '[Output-only] The status of this job. Examine this value
                when polling an asynchronous job to see if the job is complete.'
            user_email:
              description: '[Output-only] Email address of the user who ran the job.'
              type: string
          type: object
        JobConfiguration:
          id: JobConfiguration
          properties:
            copy:
              $ref: '#/schemas/JobConfigurationTableCopy'
              description: '[Pick one] Copies a table.'
            dryRun:
              description: "[Optional] If set, don't actually run this job. A valid\
                \ query will return a mostly empty response with some processing statistics,\
                \ while an invalid query will return the same error it would if it\
                \ wasn't a dry run. Behavior of non-query jobs is undefined."
              type: boolean
            extract:
              $ref: '#/schemas/JobConfigurationExtract'
              description: '[Pick one] Configures an extract job.'
            jobTimeoutMs:
              description: '[Optional] Job timeout in milliseconds. If this time limit
                is exceeded, BigQuery may attempt to terminate the job.'
              format: int64
              type: string
            jobType:
              description: '[Output-only] The type of the job. Can be QUERY, LOAD,
                EXTRACT, COPY or UNKNOWN.'
              type: string
            labels:
              additionalProperties:
                type: string
              description: The labels associated with this job. You can use these
                to organize and group your jobs. Label keys and values can be no longer
                than 63 characters, can only contain lowercase letters, numeric characters,
                underscores and dashes. International characters are allowed. Label
                values are optional. Label keys must start with a letter and each
                label in the list must have a different key.
              type: object
            load:
              $ref: '#/schemas/JobConfigurationLoad'
              description: '[Pick one] Configures a load job.'
            query:
              $ref: '#/schemas/JobConfigurationQuery'
              description: '[Pick one] Configures a query job.'
          type: object
        JobConfigurationExtract:
          id: JobConfigurationExtract
          properties:
            compression:
              description: '[Optional] The compression type to use for exported files.
                Possible values include GZIP, DEFLATE, SNAPPY, and NONE. The default
                value is NONE. DEFLATE and SNAPPY are only supported for Avro.'
              type: string
            destinationFormat:
              description: '[Optional] The exported file format. Possible values include
                CSV, NEWLINE_DELIMITED_JSON and AVRO. The default value is CSV. Tables
                with nested or repeated fields cannot be exported as CSV.'
              type: string
            destinationUri:
              description: '[Pick one] DEPRECATED: Use destinationUris instead, passing
                only one URI as necessary. The fully-qualified Google Cloud Storage
                URI where the extracted table should be written.'
              type: string
            destinationUris:
              description: '[Pick one] A list of fully-qualified Google Cloud Storage
                URIs where the extracted table should be written.'
              items:
                type: string
              type: array
            fieldDelimiter:
              description: "[Optional] Delimiter to use between fields in the exported\
                \ data. Default is ','"
              type: string
            printHeader:
              default: 'true'
              description: '[Optional] Whether to print out a header row in the results.
                Default is true.'
              type: boolean
            sourceTable:
              $ref: '#/schemas/TableReference'
              description: '[Required] A reference to the table being exported.'
          type: object
        JobConfigurationLoad:
          id: JobConfigurationLoad
          properties:
            allowJaggedRows:
              description: '[Optional] Accept rows that are missing trailing optional
                columns. The missing values are treated as nulls. If false, records
                with missing trailing columns are treated as bad records, and if there
                are too many bad records, an invalid error is returned in the job
                result. The default value is false. Only applicable to CSV, ignored
                for other formats.'
              type: boolean
            allowQuotedNewlines:
              description: Indicates if BigQuery should allow quoted data sections
                that contain newline characters in a CSV file. The default value is
                false.
              type: boolean
            autodetect:
              description: '[Optional] Indicates if we should automatically infer
                the options and schema for CSV and JSON sources.'
              type: boolean
            clustering:
              $ref: '#/schemas/Clustering'
              description: '[Beta] Clustering specification for the destination table.
                Must be specified with time-based partitioning, data in the table
                will be first partitioned and subsequently clustered.'
            createDisposition:
              description: "[Optional] Specifies whether the job is allowed to create\
                \ new tables. The following values are supported: CREATE_IF_NEEDED:\
                \ If the table does not exist, BigQuery creates the table. CREATE_NEVER:\
                \ The table must already exist. If it does not, a 'notFound' error\
                \ is returned in the job result. The default value is CREATE_IF_NEEDED.\
                \ Creation, truncation and append actions occur as one atomic update\
                \ upon job completion."
              type: string
            destinationEncryptionConfiguration:
              $ref: '#/schemas/EncryptionConfiguration'
              description: Custom encryption configuration (e.g., Cloud KMS keys).
            destinationTable:
              $ref: '#/schemas/TableReference'
              description: '[Required] The destination table to load the data into.'
            destinationTableProperties:
              $ref: '#/schemas/DestinationTableProperties'
              description: '[Beta] [Optional] Properties with which to create the
                destination table if it is new.'
            encoding:
              description: '[Optional] The character encoding of the data. The supported
                values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery
                decodes the data after the raw, binary data has been split using the
                values of the quote and fieldDelimiter properties.'
              type: string
            fieldDelimiter:
              description: "[Optional] The separator for fields in a CSV file. The\
                \ separator can be any ISO-8859-1 single-byte character. To use a\
                \ character in the range 128-255, you must encode the character as\
                \ UTF8. BigQuery converts the string to ISO-8859-1 encoding, and then\
                \ uses the first byte of the encoded string to split the data in its\
                \ raw, binary state. BigQuery also supports the escape sequence \"\
                \\t\" to specify a tab separator. The default value is a comma (',')."
              type: string
            hivePartitioningMode:
              description: '[Optional, Experimental] If hive partitioning is enabled,
                which mode to use. Two modes are supported: - AUTO: automatically
                infer partition key name(s) and type(s). - STRINGS: automatic infer
                partition key name(s). All types are strings. Not all storage formats
                support hive partitioning -- requesting hive partitioning on an unsupported
                format will lead to an error.'
              type: string
            ignoreUnknownValues:
              description: "[Optional] Indicates if BigQuery should allow extra values\
                \ that are not represented in the table schema. If true, the extra\
                \ values are ignored. If false, records with extra columns are treated\
                \ as bad records, and if there are too many bad records, an invalid\
                \ error is returned in the job result. The default value is false.\
                \ The sourceFormat property determines what BigQuery treats as an\
                \ extra value: CSV: Trailing columns JSON: Named values that don't\
                \ match any column names"
              type: boolean
            maxBadRecords:
              description: '[Optional] The maximum number of bad records that BigQuery
                can ignore when running the job. If the number of bad records exceeds
                this value, an invalid error is returned in the job result. This is
                only valid for CSV and JSON. The default value is 0, which requires
                that all records are valid.'
              format: int32
              type: integer
            nullMarker:
              description: '[Optional] Specifies a string that represents a null value
                in a CSV file. For example, if you specify "\N", BigQuery interprets
                "\N" as a null value when loading a CSV file. The default value is
                the empty string. If you set this property to a custom value, BigQuery
                throws an error if an empty string is present for all data types except
                for STRING and BYTE. For STRING and BYTE columns, BigQuery interprets
                the empty string as an empty value.'
              type: string
            projectionFields:
              description: If sourceFormat is set to "DATASTORE_BACKUP", indicates
                which entity properties to load into BigQuery from a Cloud Datastore
                backup. Property names are case sensitive and must be top-level properties.
                If no properties are specified, BigQuery loads all properties. If
                any named property isn't found in the Cloud Datastore backup, an invalid
                error is returned in the job result.
              items:
                type: string
              type: array
            quote:
              default: '"'
              description: "[Optional] The value that is used to quote data sections\
                \ in a CSV file. BigQuery converts the string to ISO-8859-1 encoding,\
                \ and then uses the first byte of the encoded string to split the\
                \ data in its raw, binary state. The default value is a double-quote\
                \ ('\"'). If your data does not contain quoted sections, set the property\
                \ value to an empty string. If your data contains quoted newline characters,\
                \ you must also set the allowQuotedNewlines property to true."
              pattern: .?
              type: string
            rangePartitioning:
              $ref: '#/schemas/RangePartitioning'
              description: '[TrustedTester] Range partitioning specification for this
                table. Only one of timePartitioning and rangePartitioning should be
                specified.'
            schema:
              $ref: '#/schemas/TableSchema'
              description: "[Optional] The schema for the destination table. The schema\
                \ can be omitted if the destination table already exists, or if you're\
                \ loading data from Google Cloud Datastore."
            schemaInline:
              description: '[Deprecated] The inline schema. For CSV schemas, specify
                as "Field1:Type1[,Field2:Type2]*". For example, "foo:STRING, bar:INTEGER,
                baz:FLOAT".'
              type: string
            schemaInlineFormat:
              description: '[Deprecated] The format of the schemaInline property.'
              type: string
            schemaUpdateOptions:
              description: 'Allows the schema of the destination table to be updated
                as a side effect of the load job if a schema is autodetected or supplied
                in the job configuration. Schema update options are supported in two
                cases: when writeDisposition is WRITE_APPEND; when writeDisposition
                is WRITE_TRUNCATE and the destination table is a partition of a table,
                specified by partition decorators. For normal tables, WRITE_TRUNCATE
                will always overwrite the schema. One or more of the following values
                are specified: ALLOW_FIELD_ADDITION: allow adding a nullable field
                to the schema. ALLOW_FIELD_RELAXATION: allow relaxing a required field
                in the original schema to nullable.'
              items:
                type: string
              type: array
            skipLeadingRows:
              description: '[Optional] The number of rows at the top of a CSV file
                that BigQuery will skip when loading the data. The default value is
                0. This property is useful if you have header rows in the file that
                should be skipped.'
              format: int32
              type: integer
            sourceFormat:
              description: '[Optional] The format of the data files. For CSV files,
                specify "CSV". For datastore backups, specify "DATASTORE_BACKUP".
                For newline-delimited JSON, specify "NEWLINE_DELIMITED_JSON". For
                Avro, specify "AVRO". For parquet, specify "PARQUET". For orc, specify
                "ORC". The default value is CSV.'
              type: string
            sourceUris:
              description: "[Required] The fully-qualified URIs that point to your\
                \ data in Google Cloud. For Google Cloud Storage URIs: Each URI can\
                \ contain one '*' wildcard character and it must come after the 'bucket'\
                \ name. Size limits related to load jobs apply to external data sources.\
                \ For Google Cloud Bigtable URIs: Exactly one URI can be specified\
                \ and it has be a fully specified and valid HTTPS URL for a Google\
                \ Cloud Bigtable table. For Google Cloud Datastore backups: Exactly\
                \ one URI can be specified. Also, the '*' wildcard character is not\
                \ allowed."
              items:
                type: string
              type: array
            timePartitioning:
              $ref: '#/schemas/TimePartitioning'
              description: Time-based partitioning specification for the destination
                table. Only one of timePartitioning and rangePartitioning should be
                specified.
            useAvroLogicalTypes:
              description: '[Optional] If sourceFormat is set to "AVRO", indicates
                whether to enable interpreting logical types into their corresponding
                types (ie. TIMESTAMP), instead of only using their raw types (ie.
                INTEGER).'
              type: boolean
            writeDisposition:
              description: "[Optional] Specifies the action that occurs if the destination\
                \ table already exists. The following values are supported: WRITE_TRUNCATE:\
                \ If the table already exists, BigQuery overwrites the table data.\
                \ WRITE_APPEND: If the table already exists, BigQuery appends the\
                \ data to the table. WRITE_EMPTY: If the table already exists and\
                \ contains data, a 'duplicate' error is returned in the job result.\
                \ The default value is WRITE_APPEND. Each action is atomic and only\
                \ occurs if BigQuery is able to complete the job successfully. Creation,\
                \ truncation and append actions occur as one atomic update upon job\
                \ completion."
              type: string
          type: object
        JobConfigurationQuery:
          id: JobConfigurationQuery
          properties:
            allowLargeResults:
              default: 'false'
              description: '[Optional] If true and query uses legacy SQL dialect,
                allows the query to produce arbitrarily large result tables at a slight
                cost in performance. Requires destinationTable to be set. For standard
                SQL queries, this flag is ignored and large results are always allowed.
                However, you must still set destinationTable when result size exceeds
                the allowed maximum response size.'
              type: boolean
            clustering:
              $ref: '#/schemas/Clustering'
              description: '[Beta] Clustering specification for the destination table.
                Must be specified with time-based partitioning, data in the table
                will be first partitioned and subsequently clustered.'
            createDisposition:
              description: "[Optional] Specifies whether the job is allowed to create\
                \ new tables. The following values are supported: CREATE_IF_NEEDED:\
                \ If the table does not exist, BigQuery creates the table. CREATE_NEVER:\
                \ The table must already exist. If it does not, a 'notFound' error\
                \ is returned in the job result. The default value is CREATE_IF_NEEDED.\
                \ Creation, truncation and append actions occur as one atomic update\
                \ upon job completion."
              type: string
            defaultDataset:
              $ref: '#/schemas/DatasetReference'
              description: '[Optional] Specifies the default dataset to use for unqualified
                table names in the query. Note that this does not alter behavior of
                unqualified dataset names.'
            destinationEncryptionConfiguration:
              $ref: '#/schemas/EncryptionConfiguration'
              description: Custom encryption configuration (e.g., Cloud KMS keys).
            destinationTable:
              $ref: '#/schemas/TableReference'
              description: '[Optional] Describes the table where the query results
                should be stored. If not present, a new table will be created to store
                the results. This property must be set for large results that exceed
                the maximum response size.'
            flattenResults:
              default: 'true'
              description: '[Optional] If true and query uses legacy SQL dialect,
                flattens all nested and repeated fields in the query results. allowLargeResults
                must be true if this is set to false. For standard SQL queries, this
                flag is ignored and results are never flattened.'
              type: boolean
            maximumBillingTier:
              default: '1'
              description: '[Optional] Limits the billing tier for this job. Queries
                that have resource usage beyond this tier will fail (without incurring
                a charge). If unspecified, this will be set to your project default.'
              format: int32
              type: integer
            maximumBytesBilled:
              description: '[Optional] Limits the bytes billed for this job. Queries
                that will have bytes billed beyond this limit will fail (without incurring
                a charge). If unspecified, this will be set to your project default.'
              format: int64
              type: string
            parameterMode:
              description: Standard SQL only. Set to POSITIONAL to use positional
                (?) query parameters or to NAMED to use named (@myparam) query parameters
                in this query.
              type: string
            preserveNulls:
              description: '[Deprecated] This property is deprecated.'
              type: boolean
            priority:
              description: '[Optional] Specifies a priority for the query. Possible
                values include INTERACTIVE and BATCH. The default value is INTERACTIVE.'
              type: string
            query:
              description: '[Required] SQL query text to execute. The useLegacySql
                field can be used to indicate whether the query uses legacy SQL or
                standard SQL.'
              type: string
            queryParameters:
              description: Query parameters for standard SQL queries.
              items:
                $ref: '#/schemas/QueryParameter'
              type: array
            rangePartitioning:
              $ref: '#/schemas/RangePartitioning'
              description: '[TrustedTester] Range partitioning specification for this
                table. Only one of timePartitioning and rangePartitioning should be
                specified.'
            schemaUpdateOptions:
              description: 'Allows the schema of the destination table to be updated
                as a side effect of the query job. Schema update options are supported
                in two cases: when writeDisposition is WRITE_APPEND; when writeDisposition
                is WRITE_TRUNCATE and the destination table is a partition of a table,
                specified by partition decorators. For normal tables, WRITE_TRUNCATE
                will always overwrite the schema. One or more of the following values
                are specified: ALLOW_FIELD_ADDITION: allow adding a nullable field
                to the schema. ALLOW_FIELD_RELAXATION: allow relaxing a required field
                in the original schema to nullable.'
              items:
                type: string
              type: array
            tableDefinitions:
              additionalProperties:
                $ref: '#/schemas/ExternalDataConfiguration'
              description: '[Optional] If querying an external data source outside
                of BigQuery, describes the data format, location and other properties
                of the data source. By defining these properties, the data source
                can then be queried as if it were a standard BigQuery table.'
              type: object
            timePartitioning:
              $ref: '#/schemas/TimePartitioning'
              description: Time-based partitioning specification for the destination
                table. Only one of timePartitioning and rangePartitioning should be
                specified.
            useLegacySql:
              default: 'true'
              description: "Specifies whether to use BigQuery's legacy SQL dialect\
                \ for this query. The default value is true. If set to false, the\
                \ query will use BigQuery's standard SQL: https://cloud.google.com/bigquery/sql-reference/\
                \ When useLegacySql is set to false, the value of flattenResults is\
                \ ignored; query will be run as if flattenResults is false."
              type: boolean
            useQueryCache:
              default: 'true'
              description: '[Optional] Whether to look for the result in the query
                cache. The query cache is a best-effort cache that will be flushed
                whenever tables in the query are modified. Moreover, the query cache
                is only available when a query does not have a destination table specified.
                The default value is true.'
              type: boolean
            userDefinedFunctionResources:
              description: Describes user-defined function resources used in the query.
              items:
                $ref: '#/schemas/UserDefinedFunctionResource'
              type: array
            writeDisposition:
              description: "[Optional] Specifies the action that occurs if the destination\
                \ table already exists. The following values are supported: WRITE_TRUNCATE:\
                \ If the table already exists, BigQuery overwrites the table data\
                \ and uses the schema from the query result. WRITE_APPEND: If the\
                \ table already exists, BigQuery appends the data to the table. WRITE_EMPTY:\
                \ If the table already exists and contains data, a 'duplicate' error\
                \ is returned in the job result. The default value is WRITE_EMPTY.\
                \ Each action is atomic and only occurs if BigQuery is able to complete\
                \ the job successfully. Creation, truncation and append actions occur\
                \ as one atomic update upon job completion."
              type: string
          type: object
        JobConfigurationTableCopy:
          id: JobConfigurationTableCopy
          properties:
            createDisposition:
              description: "[Optional] Specifies whether the job is allowed to create\
                \ new tables. The following values are supported: CREATE_IF_NEEDED:\
                \ If the table does not exist, BigQuery creates the table. CREATE_NEVER:\
                \ The table must already exist. If it does not, a 'notFound' error\
                \ is returned in the job result. The default value is CREATE_IF_NEEDED.\
                \ Creation, truncation and append actions occur as one atomic update\
                \ upon job completion."
              type: string
            destinationEncryptionConfiguration:
              $ref: '#/schemas/EncryptionConfiguration'
              description: Custom encryption configuration (e.g., Cloud KMS keys).
            destinationTable:
              $ref: '#/schemas/TableReference'
              description: '[Required] The destination table'
            sourceTable:
              $ref: '#/schemas/TableReference'
              description: '[Pick one] Source table to copy.'
            sourceTables:
              description: '[Pick one] Source tables to copy.'
              items:
                $ref: '#/schemas/TableReference'
              type: array
            writeDisposition:
              description: "[Optional] Specifies the action that occurs if the destination\
                \ table already exists. The following values are supported: WRITE_TRUNCATE:\
                \ If the table already exists, BigQuery overwrites the table data.\
                \ WRITE_APPEND: If the table already exists, BigQuery appends the\
                \ data to the table. WRITE_EMPTY: If the table already exists and\
                \ contains data, a 'duplicate' error is returned in the job result.\
                \ The default value is WRITE_EMPTY. Each action is atomic and only\
                \ occurs if BigQuery is able to complete the job successfully. Creation,\
                \ truncation and append actions occur as one atomic update upon job\
                \ completion."
              type: string
          type: object
        JobReference:
          id: JobReference
          properties:
            jobId:
              annotations:
                required:
                - bigquery.jobs.getQueryResults
              description: '[Required] The ID of the job. The ID must contain only
                letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-).
                The maximum length is 1,024 characters.'
              type: string
            location:
              description: The geographic location of the job. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location.
              type: string
            projectId:
              annotations:
                required:
                - bigquery.jobs.getQueryResults
              description: '[Required] The ID of the project containing this job.'
              type: string
          type: object
        JobStatistics:
          id: JobStatistics
          properties:
            completionRatio:
              description: '[TrustedTester] [Output-only] Job progress (0.0 -> 1.0)
                for LOAD and EXTRACT jobs.'
              format: double
              type: number
            creationTime:
              description: '[Output-only] Creation time of this job, in milliseconds
                since the epoch. This field will be present on all jobs.'
              format: int64
              type: string
            endTime:
              description: '[Output-only] End time of this job, in milliseconds since
                the epoch. This field will be present whenever a job is in the DONE
                state.'
              format: int64
              type: string
            extract:
              $ref: '#/schemas/JobStatistics4'
              description: '[Output-only] Statistics for an extract job.'
            load:
              $ref: '#/schemas/JobStatistics3'
              description: '[Output-only] Statistics for a load job.'
            numChildJobs:
              description: '[Output-only] Number of child jobs executed.'
              format: int64
              type: string
            parentJobId:
              description: '[Output-only] If this is a child job, the id of the parent.'
              type: string
            query:
              $ref: '#/schemas/JobStatistics2'
              description: '[Output-only] Statistics for a query job.'
            quotaDeferments:
              description: "[Output-only] Quotas which delayed this job's start time."
              items:
                type: string
              type: array
            reservationUsage:
              description: '[Output-only] Job resource usage breakdown by reservation.'
              items:
                properties:
                  name:
                    description: '[Output-only] Reservation name or "unreserved" for
                      on-demand resources usage.'
                    type: string
                  slotMs:
                    description: '[Output-only] Slot-milliseconds the job spent in
                      the given reservation.'
                    format: int64
                    type: string
                type: object
              type: array
            startTime:
              description: '[Output-only] Start time of this job, in milliseconds
                since the epoch. This field will be present when the job transitions
                from the PENDING state to either RUNNING or DONE.'
              format: int64
              type: string
            totalBytesProcessed:
              description: '[Output-only] [Deprecated] Use the bytes processed in
                the query statistics instead.'
              format: int64
              type: string
            totalSlotMs:
              description: '[Output-only] Slot-milliseconds for the job.'
              format: int64
              type: string
          type: object
        JobStatistics2:
          id: JobStatistics2
          properties:
            billingTier:
              description: '[Output-only] Billing tier for the job.'
              format: int32
              type: integer
            cacheHit:
              description: '[Output-only] Whether the query result was fetched from
                the query cache.'
              type: boolean
            ddlOperationPerformed:
              description: 'The DDL operation performed, possibly dependent on the
                pre-existence of the DDL target. Possible values (new values might
                be added in the future): "CREATE": The query created the DDL target.
                "SKIP": No-op. Example cases: the query is CREATE TABLE IF NOT EXISTS
                while the table already exists, or the query is DROP TABLE IF EXISTS
                while the table does not exist. "REPLACE": The query replaced the
                DDL target. Example case: the query is CREATE OR REPLACE TABLE, and
                the table already exists. "DROP": The query deleted the DDL target.'
              type: string
            ddlTargetRoutine:
              $ref: '#/schemas/RoutineReference'
              description: The DDL target routine. Present only for CREATE/DROP FUNCTION/PROCEDURE
                queries.
            ddlTargetTable:
              $ref: '#/schemas/TableReference'
              description: The DDL target table. Present only for CREATE/DROP TABLE/VIEW
                queries.
            estimatedBytesProcessed:
              description: '[Output-only] The original estimate of bytes processed
                for the job.'
              format: int64
              type: string
            modelTraining:
              $ref: '#/schemas/BigQueryModelTraining'
              description: '[Output-only, Beta] Information about create model query
                job progress.'
            modelTrainingCurrentIteration:
              description: '[Output-only, Beta] Deprecated; do not use.'
              format: int32
              type: integer
            modelTrainingExpectedTotalIteration:
              description: '[Output-only, Beta] Deprecated; do not use.'
              format: int64
              type: string
            numDmlAffectedRows:
              description: '[Output-only] The number of rows affected by a DML statement.
                Present only for DML statements INSERT, UPDATE or DELETE.'
              format: int64
              type: string
            queryPlan:
              description: '[Output-only] Describes execution plan for the query.'
              items:
                $ref: '#/schemas/ExplainQueryStage'
              type: array
            referencedTables:
              description: '[Output-only] Referenced tables for the job. Queries that
                reference more than 50 tables will not have a complete list.'
              items:
                $ref: '#/schemas/TableReference'
              type: array
            reservationUsage:
              description: '[Output-only] Job resource usage breakdown by reservation.'
              items:
                properties:
                  name:
                    description: '[Output-only] Reservation name or "unreserved" for
                      on-demand resources usage.'
                    type: string
                  slotMs:
                    description: '[Output-only] Slot-milliseconds the job spent in
                      the given reservation.'
                    format: int64
                    type: string
                type: object
              type: array
            schema:
              $ref: '#/schemas/TableSchema'
              description: '[Output-only] The schema of the results. Present only
                for successful dry run of non-legacy SQL queries.'
            statementType:
              description: 'The type of query statement, if valid. Possible values
                (new values might be added in the future): "SELECT": SELECT query.
                "INSERT": INSERT query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language.
                "UPDATE": UPDATE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language.
                "DELETE": DELETE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language.
                "MERGE": MERGE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language.
                "ALTER_TABLE": ALTER TABLE query. "ALTER_VIEW": ALTER VIEW query.
                "CREATE_FUNCTION": CREATE FUNCTION query. "CREATE_MODEL": CREATE [OR
                REPLACE] MODEL ... AS SELECT ... . "CREATE_PROCEDURE": CREATE PROCEDURE
                query. "CREATE_TABLE": CREATE [OR REPLACE] TABLE without AS SELECT.
                "CREATE_TABLE_AS_SELECT": CREATE [OR REPLACE] TABLE ... AS SELECT
                ... . "CREATE_VIEW": CREATE [OR REPLACE] VIEW ... AS SELECT ... .
                "DROP_FUNCTION" : DROP FUNCTION query. "DROP_PROCEDURE": DROP PROCEDURE
                query. "DROP_TABLE": DROP TABLE query. "DROP_VIEW": DROP VIEW query.'
              type: string
            timeline:
              description: '[Output-only] [Beta] Describes a timeline of job execution.'
              items:
                $ref: '#/schemas/QueryTimelineSample'
              type: array
            totalBytesBilled:
              description: '[Output-only] Total bytes billed for the job.'
              format: int64
              type: string
            totalBytesProcessed:
              description: '[Output-only] Total bytes processed for the job.'
              format: int64
              type: string
            totalBytesProcessedAccuracy:
              description: '[Output-only] For dry-run jobs, totalBytesProcessed is
                an estimate and this field specifies the accuracy of the estimate.
                Possible values can be: UNKNOWN: accuracy of the estimate is unknown.
                PRECISE: estimate is precise. LOWER_BOUND: estimate is lower bound
                of what the query would cost. UPPER_BOUND: estimate is upper bound
                of what the query would cost.'
              type: string
            totalPartitionsProcessed:
              description: '[Output-only] Total number of partitions processed from
                all partitioned tables referenced in the job.'
              format: int64
              type: string
            totalSlotMs:
              description: '[Output-only] Slot-milliseconds for the job.'
              format: int64
              type: string
            undeclaredQueryParameters:
              description: 'Standard SQL only: list of undeclared query parameters
                detected during a dry run validation.'
              items:
                $ref: '#/schemas/QueryParameter'
              type: array
          type: object
        JobStatistics3:
          id: JobStatistics3
          properties:
            badRecords:
              description: '[Output-only] The number of bad records encountered. Note
                that if the job has failed because of more bad records encountered
                than the maximum allowed in the load job configuration, then this
                number can be less than the total number of bad records present in
                the input data.'
              format: int64
              type: string
            inputFileBytes:
              description: '[Output-only] Number of bytes of source data in a load
                job.'
              format: int64
              type: string
            inputFiles:
              description: '[Output-only] Number of source files in a load job.'
              format: int64
              type: string
            outputBytes:
              description: '[Output-only] Size of the loaded data in bytes. Note that
                while a load job is in the running state, this value may change.'
              format: int64
              type: string
            outputRows:
              description: '[Output-only] Number of rows imported in a load job. Note
                that while an import job is in the running state, this value may change.'
              format: int64
              type: string
          type: object
        JobStatistics4:
          id: JobStatistics4
          properties:
            destinationUriFileCounts:
              description: "[Output-only] Number of files per destination URI or URI\
                \ pattern specified in the extract configuration. These values will\
                \ be in the same order as the URIs specified in the 'destinationUris'\
                \ field."
              items:
                format: int64
                type: string
              type: array
            inputBytes:
              description: '[Output-only] Number of user bytes extracted into the
                result. This is the byte count as computed by BigQuery for billing
                purposes.'
              format: int64
              type: string
          type: object
        JobStatus:
          id: JobStatus
          properties:
            errorResult:
              $ref: '#/schemas/ErrorProto'
              description: '[Output-only] Final error result of the job. If present,
                indicates that the job has completed and was unsuccessful.'
            errors:
              description: '[Output-only] The first errors encountered during the
                running of the job. The final message includes the number of errors
                that caused the process to stop. Errors here do not necessarily mean
                that the job has completed or was unsuccessful.'
              items:
                $ref: '#/schemas/ErrorProto'
              type: array
            state:
              description: '[Output-only] Running state of the job.'
              type: string
          type: object
        QueryParameter:
          id: QueryParameter
          properties:
            name:
              description: '[Optional] If unset, this is a positional parameter. Otherwise,
                should be unique within a query.'
              type: string
            parameterType:
              $ref: '#/schemas/QueryParameterType'
              description: '[Required] The type of this parameter.'
            parameterValue:
              $ref: '#/schemas/QueryParameterValue'
              description: '[Required] The value of this parameter.'
          type: object
        QueryParameterType:
          id: QueryParameterType
          properties:
            arrayType:
              $ref: '#/schemas/QueryParameterType'
              description: "[Optional] The type of the array's elements, if this is\
                \ an array."
            structTypes:
              description: '[Optional] The types of the fields of this struct, in
                order, if this is a struct.'
              items:
                properties:
                  description:
                    description: '[Optional] Human-oriented description of the field.'
                    type: string
                  name:
                    description: '[Optional] The name of this field.'
                    type: string
                  type:
                    $ref: '#/schemas/QueryParameterType'
                    description: '[Required] The type of this field.'
                type: object
              type: array
            type:
              description: '[Required] The top level type of this field.'
              type: string
          type: object
        QueryParameterValue:
          id: QueryParameterValue
          properties:
            arrayValues:
              description: '[Optional] The array values, if this is an array type.'
              items:
                $ref: '#/schemas/QueryParameterValue'
              type: array
            structValues:
              additionalProperties:
                $ref: '#/schemas/QueryParameterValue'
              description: "[Optional] The struct field values, in order of the struct\
                \ type's declaration."
              type: object
            value:
              description: '[Optional] The value of this value, if a simple scalar
                type.'
              type: string
          type: object
        QueryTimelineSample:
          id: QueryTimelineSample
          properties:
            activeUnits:
              description: Total number of units currently being processed by workers.
                This does not correspond directly to slot usage. This is the largest
                value observed since the last sample.
              format: int64
              type: string
            completedUnits:
              description: Total parallel units of work completed by this query.
              format: int64
              type: string
            elapsedMs:
              description: Milliseconds elapsed since the start of query execution.
              format: int64
              type: string
            pendingUnits:
              description: Total parallel units of work remaining for the active stages.
              format: int64
              type: string
            totalSlotMs:
              description: Cumulative slot-ms consumed by the query.
              format: int64
              type: string
          type: object
        RangePartitioning:
          id: RangePartitioning
          properties:
            field:
              description: '[TrustedTester] [Required] The table is partitioned by
                this field. The field must be a top-level NULLABLE/REQUIRED field.
                The only supported type is INTEGER/INT64.'
              type: string
            range:
              description: '[TrustedTester] [Required] Defines the ranges for range
                partitioning.'
              properties:
                end:
                  description: '[TrustedTester] [Required] The end of range partitioning,
                    exclusive.'
                  format: int64
                  type: string
                interval:
                  description: '[TrustedTester] [Required] The width of each interval.'
                  format: int64
                  type: string
                start:
                  description: '[TrustedTester] [Required] The start of range partitioning,
                    inclusive.'
                  format: int64
                  type: string
              type: object
          type: object
        RoutineReference:
          id: RoutineReference
          properties:
            datasetId:
              description: '[Required] The ID of the dataset containing this routine.'
              type: string
            projectId:
              description: '[Required] The ID of the project containing this routine.'
              type: string
            routineId:
              description: '[Required] The ID of the routine. The ID must contain
                only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                length is 256 characters.'
              type: string
          type: object
        TableFieldSchema:
          id: TableFieldSchema
          properties:
            categories:
              description: '[Optional] The categories attached to this field, used
                for field-level access control.'
              properties:
                names:
                  description: A list of category resource names. For example, "projects/1/taxonomies/2/categories/3".
                    At most 5 categories are allowed.
                  items:
                    type: string
                  type: array
              type: object
            description:
              description: '[Optional] The field description. The maximum length is
                1,024 characters.'
              type: string
            fields:
              description: '[Optional] Describes the nested schema fields if the type
                property is set to RECORD.'
              items:
                $ref: '#/schemas/TableFieldSchema'
              type: array
            mode:
              description: '[Optional] The field mode. Possible values include NULLABLE,
                REQUIRED and REPEATED. The default value is NULLABLE.'
              type: string
            name:
              description: '[Required] The field name. The name must contain only
                letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start
                with a letter or underscore. The maximum length is 128 characters.'
              type: string
            type:
              description: '[Required] The field data type. Possible values include
                STRING, BYTES, INTEGER, INT64 (same as INTEGER), FLOAT, FLOAT64 (same
                as FLOAT), BOOLEAN, BOOL (same as BOOLEAN), TIMESTAMP, DATE, TIME,
                DATETIME, RECORD (where RECORD indicates that the field contains a
                nested schema) or STRUCT (same as RECORD).'
              type: string
          type: object
        TableReference:
          id: TableReference
          properties:
            datasetId:
              annotations:
                required:
                - bigquery.tables.update
              description: '[Required] The ID of the dataset containing this table.'
              type: string
            projectId:
              annotations:
                required:
                - bigquery.tables.update
              description: '[Required] The ID of the project containing this table.'
              type: string
            tableId:
              annotations:
                required:
                - bigquery.tables.update
              description: '[Required] The ID of the table. The ID must contain only
                letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                length is 1,024 characters.'
              type: string
          type: object
        TableSchema:
          id: TableSchema
          properties:
            fields:
              description: Describes the fields in a table.
              items:
                $ref: '#/schemas/TableFieldSchema'
              type: array
          type: object
        TimePartitioning:
          id: TimePartitioning
          properties:
            expirationMs:
              description: '[Optional] Number of milliseconds for which to keep the
                storage for partitions in the table. The storage in a partition will
                have an expiration time of its partition time plus this value.'
              format: int64
              type: string
            field:
              description: "[Beta] [Optional] If not set, the table is partitioned\
                \ by pseudo column, referenced via either '_PARTITIONTIME' as TIMESTAMP\
                \ type, or '_PARTITIONDATE' as DATE type. If field is specified, the\
                \ table is instead partitioned by this field. The field must be a\
                \ top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or\
                \ REQUIRED."
              type: string
            requirePartitionFilter:
              type: boolean
            type:
              description: '[Required] The only type supported is DAY, which will
                generate one partition per day.'
              type: string
          type: object
        UserDefinedFunctionResource:
          id: UserDefinedFunctionResource
          properties:
            inlineCode:
              description: '[Pick one] An inline resource that contains code for a
                user-defined function (UDF). Providing a inline code resource is equivalent
                to providing a URI for a file containing the same code.'
              type: string
            resourceUri:
              description: '[Pick one] A code resource to load from a Google Cloud
                Storage URI (gs://bucket/path).'
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Job'
      methodName: get
      schemas:
        BigQueryModelTraining:
          id: BigQueryModelTraining
          properties:
            currentIteration:
              description: '[Output-only, Beta] Index of current ML training iteration.
                Updated during create model query job to show job progress.'
              format: int32
              type: integer
            expectedTotalIterations:
              description: '[Output-only, Beta] Expected number of iterations for
                the create model query job specified as num_iterations in the input
                query. The actual total number of iterations may be less than this
                number due to early stop.'
              format: int64
              type: string
          type: object
        BigtableColumn:
          id: BigtableColumn
          properties:
            encoding:
              description: "[Optional] The encoding of the values when the type is\
                \ not STRING. Acceptable encoding values are: TEXT - indicates values\
                \ are alphanumeric text strings. BINARY - indicates values are encoded\
                \ using HBase Bytes.toBytes family of functions. 'encoding' can also\
                \ be set at the column family level. However, the setting at this\
                \ level takes precedence if 'encoding' is set at both levels."
              type: string
            fieldName:
              description: '[Optional] If the qualifier is not a valid BigQuery field
                identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier
                must be provided as the column field name and is used as field name
                in queries.'
              type: string
            onlyReadLatest:
              description: "[Optional] If this is set, only the latest version of\
                \ value in this column are exposed. 'onlyReadLatest' can also be set\
                \ at the column family level. However, the setting at this level takes\
                \ precedence if 'onlyReadLatest' is set at both levels."
              type: boolean
            qualifierEncoded:
              description: '[Required] Qualifier of the column. Columns in the parent
                column family that has this exact qualifier are exposed as . field.
                If the qualifier is valid UTF-8 string, it can be specified in the
                qualifier_string field. Otherwise, a base-64 encoded value must be
                set to qualifier_encoded. The column field name is the same as the
                column qualifier. However, if the qualifier is not a valid BigQuery
                field identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid
                identifier must be provided as field_name.'
              format: byte
              type: string
            qualifierString:
              type: string
            type:
              description: "[Optional] The type to convert the value in cells of this\
                \ column. The values are expected to be encoded using HBase Bytes.toBytes\
                \ function when using the BINARY encoding value. Following BigQuery\
                \ types are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT\
                \ BOOLEAN Default type is BYTES. 'type' can also be set at the column\
                \ family level. However, the setting at this level takes precedence\
                \ if 'type' is set at both levels."
              type: string
          type: object
        BigtableColumnFamily:
          id: BigtableColumnFamily
          properties:
            columns:
              description: '[Optional] Lists of columns that should be exposed as
                individual fields as opposed to a list of (column name, value) pairs.
                All columns whose qualifier matches a qualifier in this list can be
                accessed as .. Other columns can be accessed as a list through .Column
                field.'
              items:
                $ref: '#/schemas/BigtableColumn'
              type: array
            encoding:
              description: "[Optional] The encoding of the values when the type is\
                \ not STRING. Acceptable encoding values are: TEXT - indicates values\
                \ are alphanumeric text strings. BINARY - indicates values are encoded\
                \ using HBase Bytes.toBytes family of functions. This can be overridden\
                \ for a specific column by listing that column in 'columns' and specifying\
                \ an encoding for it."
              type: string
            familyId:
              description: Identifier of the column family.
              type: string
            onlyReadLatest:
              description: "[Optional] If this is set only the latest version of value\
                \ are exposed for all columns in this column family. This can be overridden\
                \ for a specific column by listing that column in 'columns' and specifying\
                \ a different setting for that column."
              type: boolean
            type:
              description: "[Optional] The type to convert the value in cells of this\
                \ column family. The values are expected to be encoded using HBase\
                \ Bytes.toBytes function when using the BINARY encoding value. Following\
                \ BigQuery types are allowed (case-sensitive) - BYTES STRING INTEGER\
                \ FLOAT BOOLEAN Default type is BYTES. This can be overridden for\
                \ a specific column by listing that column in 'columns' and specifying\
                \ a type for it."
              type: string
          type: object
        BigtableOptions:
          id: BigtableOptions
          properties:
            columnFamilies:
              description: "[Optional] List of column families to expose in the table\
                \ schema along with their types. This list restricts the column families\
                \ that can be referenced in queries and specifies their value types.\
                \ You can use this list to do type conversions - see the 'type' field\
                \ for more details. If you leave this list empty, all column families\
                \ are present in the table schema and their values are read as BYTES.\
                \ During a query only the column families referenced in that query\
                \ are read from Bigtable."
              items:
                $ref: '#/schemas/BigtableColumnFamily'
              type: array
            ignoreUnspecifiedColumnFamilies:
              description: '[Optional] If field is true, then the column families
                that are not specified in columnFamilies list are not exposed in the
                table schema. Otherwise, they are read with BYTES type values. The
                default value is false.'
              type: boolean
            readRowkeyAsString:
              description: '[Optional] If field is true, then the rowkey column families
                will be read and converted to string. Otherwise they are read with
                BYTES type values and users need to manually cast them with CAST if
                necessary. The default value is false.'
              type: boolean
          type: object
        Clustering:
          id: Clustering
          properties:
            fields:
              description: '[Repeated] One or more fields on which data should be
                clustered. Only top-level, non-repeated, simple-type fields are supported.
                When you cluster a table using multiple columns, the order of columns
                you specify is important. The order of the specified columns determines
                the sort order of the data.'
              items:
                type: string
              type: array
          type: object
        CsvOptions:
          id: CsvOptions
          properties:
            allowJaggedRows:
              description: '[Optional] Indicates if BigQuery should accept rows that
                are missing trailing optional columns. If true, BigQuery treats missing
                trailing columns as null values. If false, records with missing trailing
                columns are treated as bad records, and if there are too many bad
                records, an invalid error is returned in the job result. The default
                value is false.'
              type: boolean
            allowQuotedNewlines:
              description: '[Optional] Indicates if BigQuery should allow quoted data
                sections that contain newline characters in a CSV file. The default
                value is false.'
              type: boolean
            encoding:
              description: '[Optional] The character encoding of the data. The supported
                values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery
                decodes the data after the raw, binary data has been split using the
                values of the quote and fieldDelimiter properties.'
              type: string
            fieldDelimiter:
              description: "[Optional] The separator for fields in a CSV file. BigQuery\
                \ converts the string to ISO-8859-1 encoding, and then uses the first\
                \ byte of the encoded string to split the data in its raw, binary\
                \ state. BigQuery also supports the escape sequence \"\\t\" to specify\
                \ a tab separator. The default value is a comma (',')."
              type: string
            quote:
              default: '"'
              description: "[Optional] The value that is used to quote data sections\
                \ in a CSV file. BigQuery converts the string to ISO-8859-1 encoding,\
                \ and then uses the first byte of the encoded string to split the\
                \ data in its raw, binary state. The default value is a double-quote\
                \ ('\"'). If your data does not contain quoted sections, set the property\
                \ value to an empty string. If your data contains quoted newline characters,\
                \ you must also set the allowQuotedNewlines property to true."
              pattern: .?
              type: string
            skipLeadingRows:
              description: '[Optional] The number of rows at the top of a CSV file
                that BigQuery will skip when reading the data. The default value is
                0. This property is useful if you have header rows in the file that
                should be skipped.'
              format: int64
              type: string
          type: object
        DatasetReference:
          id: DatasetReference
          properties:
            datasetId:
              annotations:
                required:
                - bigquery.datasets.update
              description: '[Required] A unique ID for this dataset, without the project
                name. The ID must contain only letters (a-z, A-Z), numbers (0-9),
                or underscores (_). The maximum length is 1,024 characters.'
              type: string
            projectId:
              annotations:
                required:
                - bigquery.datasets.update
              description: '[Optional] The ID of the project containing this dataset.'
              type: string
          type: object
        DestinationTableProperties:
          id: DestinationTableProperties
          properties:
            description:
              description: '[Optional] The description for the destination table.
                This will only be used if the destination table is newly created.
                If the table already exists and a value different than the current
                description is provided, the job will fail.'
              type: string
            friendlyName:
              description: '[Optional] The friendly name for the destination table.
                This will only be used if the destination table is newly created.
                If the table already exists and a value different than the current
                friendly name is provided, the job will fail.'
              type: string
            labels:
              additionalProperties:
                type: string
              description: '[Optional] The labels associated with this table. You
                can use these to organize and group your tables. This will only be
                used if the destination table is newly created. If the table already
                exists and labels are different than the current labels are provided,
                the job will fail.'
              type: object
          type: object
        EncryptionConfiguration:
          id: EncryptionConfiguration
          properties:
            kmsKeyName:
              description: '[Optional] Describes the Cloud KMS encryption key that
                will be used to protect destination BigQuery table. The BigQuery Service
                Account associated with your project requires access to this encryption
                key.'
              type: string
          type: object
        ErrorProto:
          id: ErrorProto
          properties:
            debugInfo:
              description: Debugging information. This property is internal to Google
                and should not be used.
              type: string
            location:
              description: Specifies where the error occurred, if present.
              type: string
            message:
              description: A human-readable description of the error.
              type: string
            reason:
              description: A short error code that summarizes the error.
              type: string
          type: object
        ExplainQueryStage:
          id: ExplainQueryStage
          properties:
            completedParallelInputs:
              description: Number of parallel input segments completed.
              format: int64
              type: string
            computeMsAvg:
              description: Milliseconds the average shard spent on CPU-bound tasks.
              format: int64
              type: string
            computeMsMax:
              description: Milliseconds the slowest shard spent on CPU-bound tasks.
              format: int64
              type: string
            computeRatioAvg:
              description: Relative amount of time the average shard spent on CPU-bound
                tasks.
              format: double
              type: number
            computeRatioMax:
              description: Relative amount of time the slowest shard spent on CPU-bound
                tasks.
              format: double
              type: number
            endMs:
              description: Stage end time represented as milliseconds since epoch.
              format: int64
              type: string
            id:
              description: Unique ID for stage within plan.
              format: int64
              type: string
            inputStages:
              description: IDs for stages that are inputs to this stage.
              items:
                format: int64
                type: string
              type: array
            name:
              description: Human-readable name for stage.
              type: string
            parallelInputs:
              description: Number of parallel input segments to be processed.
              format: int64
              type: string
            readMsAvg:
              description: Milliseconds the average shard spent reading input.
              format: int64
              type: string
            readMsMax:
              description: Milliseconds the slowest shard spent reading input.
              format: int64
              type: string
            readRatioAvg:
              description: Relative amount of time the average shard spent reading
                input.
              format: double
              type: number
            readRatioMax:
              description: Relative amount of time the slowest shard spent reading
                input.
              format: double
              type: number
            recordsRead:
              description: Number of records read into the stage.
              format: int64
              type: string
            recordsWritten:
              description: Number of records written by the stage.
              format: int64
              type: string
            shuffleOutputBytes:
              description: Total number of bytes written to shuffle.
              format: int64
              type: string
            shuffleOutputBytesSpilled:
              description: Total number of bytes written to shuffle and spilled to
                disk.
              format: int64
              type: string
            startMs:
              description: Stage start time represented as milliseconds since epoch.
              format: int64
              type: string
            status:
              description: Current status for the stage.
              type: string
            steps:
              description: List of operations within the stage in dependency order
                (approximately chronological).
              items:
                $ref: '#/schemas/ExplainQueryStep'
              type: array
            waitMsAvg:
              description: Milliseconds the average shard spent waiting to be scheduled.
              format: int64
              type: string
            waitMsMax:
              description: Milliseconds the slowest shard spent waiting to be scheduled.
              format: int64
              type: string
            waitRatioAvg:
              description: Relative amount of time the average shard spent waiting
                to be scheduled.
              format: double
              type: number
            waitRatioMax:
              description: Relative amount of time the slowest shard spent waiting
                to be scheduled.
              format: double
              type: number
            writeMsAvg:
              description: Milliseconds the average shard spent on writing output.
              format: int64
              type: string
            writeMsMax:
              description: Milliseconds the slowest shard spent on writing output.
              format: int64
              type: string
            writeRatioAvg:
              description: Relative amount of time the average shard spent on writing
                output.
              format: double
              type: number
            writeRatioMax:
              description: Relative amount of time the slowest shard spent on writing
                output.
              format: double
              type: number
          type: object
        ExplainQueryStep:
          id: ExplainQueryStep
          properties:
            kind:
              description: Machine-readable operation type.
              type: string
            substeps:
              description: Human-readable stage descriptions.
              items:
                type: string
              type: array
          type: object
        ExternalDataConfiguration:
          id: ExternalDataConfiguration
          properties:
            autodetect:
              description: Try to detect schema and format options automatically.
                Any option specified explicitly will be honored.
              type: boolean
            bigtableOptions:
              $ref: '#/schemas/BigtableOptions'
              description: '[Optional] Additional options if sourceFormat is set to
                BIGTABLE.'
            compression:
              description: '[Optional] The compression type of the data source. Possible
                values include GZIP and NONE. The default value is NONE. This setting
                is ignored for Google Cloud Bigtable, Google Cloud Datastore backups
                and Avro formats.'
              type: string
            csvOptions:
              $ref: '#/schemas/CsvOptions'
              description: Additional properties to set if sourceFormat is set to
                CSV.
            googleSheetsOptions:
              $ref: '#/schemas/GoogleSheetsOptions'
              description: '[Optional] Additional options if sourceFormat is set to
                GOOGLE_SHEETS.'
            hivePartitioningMode:
              description: '[Optional, Experimental] If hive partitioning is enabled,
                which mode to use. Two modes are supported: - AUTO: automatically
                infer partition key name(s) and type(s). - STRINGS: automatic infer
                partition key name(s). All types are strings. Not all storage formats
                support hive partitioning -- requesting hive partitioning on an unsupported
                format will lead to an error.'
              type: string
            ignoreUnknownValues:
              description: "[Optional] Indicates if BigQuery should allow extra values\
                \ that are not represented in the table schema. If true, the extra\
                \ values are ignored. If false, records with extra columns are treated\
                \ as bad records, and if there are too many bad records, an invalid\
                \ error is returned in the job result. The default value is false.\
                \ The sourceFormat property determines what BigQuery treats as an\
                \ extra value: CSV: Trailing columns JSON: Named values that don't\
                \ match any column names Google Cloud Bigtable: This setting is ignored.\
                \ Google Cloud Datastore backups: This setting is ignored. Avro: This\
                \ setting is ignored."
              type: boolean
            maxBadRecords:
              description: '[Optional] The maximum number of bad records that BigQuery
                can ignore when reading data. If the number of bad records exceeds
                this value, an invalid error is returned in the job result. This is
                only valid for CSV, JSON, and Google Sheets. The default value is
                0, which requires that all records are valid. This setting is ignored
                for Google Cloud Bigtable, Google Cloud Datastore backups and Avro
                formats.'
              format: int32
              type: integer
            schema:
              $ref: '#/schemas/TableSchema'
              description: '[Optional] The schema for the data. Schema is required
                for CSV and JSON formats. Schema is disallowed for Google Cloud Bigtable,
                Cloud Datastore backups, and Avro formats.'
            sourceFormat:
              description: '[Required] The data format. For CSV files, specify "CSV".
                For Google sheets, specify "GOOGLE_SHEETS". For newline-delimited
                JSON, specify "NEWLINE_DELIMITED_JSON". For Avro files, specify "AVRO".
                For Google Cloud Datastore backups, specify "DATASTORE_BACKUP". [Beta]
                For Google Cloud Bigtable, specify "BIGTABLE".'
              type: string
            sourceUris:
              description: "[Required] The fully-qualified URIs that point to your\
                \ data in Google Cloud. For Google Cloud Storage URIs: Each URI can\
                \ contain one '*' wildcard character and it must come after the 'bucket'\
                \ name. Size limits related to load jobs apply to external data sources.\
                \ For Google Cloud Bigtable URIs: Exactly one URI can be specified\
                \ and it has be a fully specified and valid HTTPS URL for a Google\
                \ Cloud Bigtable table. For Google Cloud Datastore backups, exactly\
                \ one URI can be specified. Also, the '*' wildcard character is not\
                \ allowed."
              items:
                type: string
              type: array
          type: object
        GoogleSheetsOptions:
          id: GoogleSheetsOptions
          properties:
            range:
              description: '[Beta] [Optional] Range of a sheet to query from. Only
                used when non-empty. Typical format: sheet_name!top_left_cell_id:bottom_right_cell_id
                For example: sheet1!A1:B20'
              type: string
            skipLeadingRows:
              description: '[Optional] The number of rows at the top of a sheet that
                BigQuery will skip when reading the data. The default value is 0.
                This property is useful if you have header rows that should be skipped.
                When autodetect is on, behavior is the following: * skipLeadingRows
                unspecified - Autodetect tries to detect headers in the first row.
                If they are not detected, the row is read as data. Otherwise data
                is read starting from the second row. * skipLeadingRows is 0 - Instructs
                autodetect that there are no headers and data should be read starting
                from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1
                rows and tries to detect headers in row N. If headers are not detected,
                row N is just skipped. Otherwise row N is used to extract column names
                for the detected schema.'
              format: int64
              type: string
          type: object
        Job:
          id: Job
          properties:
            configuration:
              $ref: '#/schemas/JobConfiguration'
              description: '[Required] Describes the job configuration.'
            etag:
              description: '[Output-only] A hash of this resource.'
              type: string
            id:
              description: '[Output-only] Opaque ID field of the job'
              type: string
            jobReference:
              $ref: '#/schemas/JobReference'
              description: '[Optional] Reference describing the unique-per-user name
                of the job.'
            kind:
              default: bigquery#job
              description: '[Output-only] The type of the resource.'
              type: string
            selfLink:
              description: '[Output-only] A URL that can be used to access this resource
                again.'
              type: string
            statistics:
              $ref: '#/schemas/JobStatistics'
              description: '[Output-only] Information about the job, including starting
                time and ending time of the job.'
            status:
              $ref: '#/schemas/JobStatus'
              description: '[Output-only] The status of this job. Examine this value
                when polling an asynchronous job to see if the job is complete.'
            user_email:
              description: '[Output-only] Email address of the user who ran the job.'
              type: string
          type: object
        JobConfiguration:
          id: JobConfiguration
          properties:
            copy:
              $ref: '#/schemas/JobConfigurationTableCopy'
              description: '[Pick one] Copies a table.'
            dryRun:
              description: "[Optional] If set, don't actually run this job. A valid\
                \ query will return a mostly empty response with some processing statistics,\
                \ while an invalid query will return the same error it would if it\
                \ wasn't a dry run. Behavior of non-query jobs is undefined."
              type: boolean
            extract:
              $ref: '#/schemas/JobConfigurationExtract'
              description: '[Pick one] Configures an extract job.'
            jobTimeoutMs:
              description: '[Optional] Job timeout in milliseconds. If this time limit
                is exceeded, BigQuery may attempt to terminate the job.'
              format: int64
              type: string
            jobType:
              description: '[Output-only] The type of the job. Can be QUERY, LOAD,
                EXTRACT, COPY or UNKNOWN.'
              type: string
            labels:
              additionalProperties:
                type: string
              description: The labels associated with this job. You can use these
                to organize and group your jobs. Label keys and values can be no longer
                than 63 characters, can only contain lowercase letters, numeric characters,
                underscores and dashes. International characters are allowed. Label
                values are optional. Label keys must start with a letter and each
                label in the list must have a different key.
              type: object
            load:
              $ref: '#/schemas/JobConfigurationLoad'
              description: '[Pick one] Configures a load job.'
            query:
              $ref: '#/schemas/JobConfigurationQuery'
              description: '[Pick one] Configures a query job.'
          type: object
        JobConfigurationExtract:
          id: JobConfigurationExtract
          properties:
            compression:
              description: '[Optional] The compression type to use for exported files.
                Possible values include GZIP, DEFLATE, SNAPPY, and NONE. The default
                value is NONE. DEFLATE and SNAPPY are only supported for Avro.'
              type: string
            destinationFormat:
              description: '[Optional] The exported file format. Possible values include
                CSV, NEWLINE_DELIMITED_JSON and AVRO. The default value is CSV. Tables
                with nested or repeated fields cannot be exported as CSV.'
              type: string
            destinationUri:
              description: '[Pick one] DEPRECATED: Use destinationUris instead, passing
                only one URI as necessary. The fully-qualified Google Cloud Storage
                URI where the extracted table should be written.'
              type: string
            destinationUris:
              description: '[Pick one] A list of fully-qualified Google Cloud Storage
                URIs where the extracted table should be written.'
              items:
                type: string
              type: array
            fieldDelimiter:
              description: "[Optional] Delimiter to use between fields in the exported\
                \ data. Default is ','"
              type: string
            printHeader:
              default: 'true'
              description: '[Optional] Whether to print out a header row in the results.
                Default is true.'
              type: boolean
            sourceTable:
              $ref: '#/schemas/TableReference'
              description: '[Required] A reference to the table being exported.'
          type: object
        JobConfigurationLoad:
          id: JobConfigurationLoad
          properties:
            allowJaggedRows:
              description: '[Optional] Accept rows that are missing trailing optional
                columns. The missing values are treated as nulls. If false, records
                with missing trailing columns are treated as bad records, and if there
                are too many bad records, an invalid error is returned in the job
                result. The default value is false. Only applicable to CSV, ignored
                for other formats.'
              type: boolean
            allowQuotedNewlines:
              description: Indicates if BigQuery should allow quoted data sections
                that contain newline characters in a CSV file. The default value is
                false.
              type: boolean
            autodetect:
              description: '[Optional] Indicates if we should automatically infer
                the options and schema for CSV and JSON sources.'
              type: boolean
            clustering:
              $ref: '#/schemas/Clustering'
              description: '[Beta] Clustering specification for the destination table.
                Must be specified with time-based partitioning, data in the table
                will be first partitioned and subsequently clustered.'
            createDisposition:
              description: "[Optional] Specifies whether the job is allowed to create\
                \ new tables. The following values are supported: CREATE_IF_NEEDED:\
                \ If the table does not exist, BigQuery creates the table. CREATE_NEVER:\
                \ The table must already exist. If it does not, a 'notFound' error\
                \ is returned in the job result. The default value is CREATE_IF_NEEDED.\
                \ Creation, truncation and append actions occur as one atomic update\
                \ upon job completion."
              type: string
            destinationEncryptionConfiguration:
              $ref: '#/schemas/EncryptionConfiguration'
              description: Custom encryption configuration (e.g., Cloud KMS keys).
            destinationTable:
              $ref: '#/schemas/TableReference'
              description: '[Required] The destination table to load the data into.'
            destinationTableProperties:
              $ref: '#/schemas/DestinationTableProperties'
              description: '[Beta] [Optional] Properties with which to create the
                destination table if it is new.'
            encoding:
              description: '[Optional] The character encoding of the data. The supported
                values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery
                decodes the data after the raw, binary data has been split using the
                values of the quote and fieldDelimiter properties.'
              type: string
            fieldDelimiter:
              description: "[Optional] The separator for fields in a CSV file. The\
                \ separator can be any ISO-8859-1 single-byte character. To use a\
                \ character in the range 128-255, you must encode the character as\
                \ UTF8. BigQuery converts the string to ISO-8859-1 encoding, and then\
                \ uses the first byte of the encoded string to split the data in its\
                \ raw, binary state. BigQuery also supports the escape sequence \"\
                \\t\" to specify a tab separator. The default value is a comma (',')."
              type: string
            hivePartitioningMode:
              description: '[Optional, Experimental] If hive partitioning is enabled,
                which mode to use. Two modes are supported: - AUTO: automatically
                infer partition key name(s) and type(s). - STRINGS: automatic infer
                partition key name(s). All types are strings. Not all storage formats
                support hive partitioning -- requesting hive partitioning on an unsupported
                format will lead to an error.'
              type: string
            ignoreUnknownValues:
              description: "[Optional] Indicates if BigQuery should allow extra values\
                \ that are not represented in the table schema. If true, the extra\
                \ values are ignored. If false, records with extra columns are treated\
                \ as bad records, and if there are too many bad records, an invalid\
                \ error is returned in the job result. The default value is false.\
                \ The sourceFormat property determines what BigQuery treats as an\
                \ extra value: CSV: Trailing columns JSON: Named values that don't\
                \ match any column names"
              type: boolean
            maxBadRecords:
              description: '[Optional] The maximum number of bad records that BigQuery
                can ignore when running the job. If the number of bad records exceeds
                this value, an invalid error is returned in the job result. This is
                only valid for CSV and JSON. The default value is 0, which requires
                that all records are valid.'
              format: int32
              type: integer
            nullMarker:
              description: '[Optional] Specifies a string that represents a null value
                in a CSV file. For example, if you specify "\N", BigQuery interprets
                "\N" as a null value when loading a CSV file. The default value is
                the empty string. If you set this property to a custom value, BigQuery
                throws an error if an empty string is present for all data types except
                for STRING and BYTE. For STRING and BYTE columns, BigQuery interprets
                the empty string as an empty value.'
              type: string
            projectionFields:
              description: If sourceFormat is set to "DATASTORE_BACKUP", indicates
                which entity properties to load into BigQuery from a Cloud Datastore
                backup. Property names are case sensitive and must be top-level properties.
                If no properties are specified, BigQuery loads all properties. If
                any named property isn't found in the Cloud Datastore backup, an invalid
                error is returned in the job result.
              items:
                type: string
              type: array
            quote:
              default: '"'
              description: "[Optional] The value that is used to quote data sections\
                \ in a CSV file. BigQuery converts the string to ISO-8859-1 encoding,\
                \ and then uses the first byte of the encoded string to split the\
                \ data in its raw, binary state. The default value is a double-quote\
                \ ('\"'). If your data does not contain quoted sections, set the property\
                \ value to an empty string. If your data contains quoted newline characters,\
                \ you must also set the allowQuotedNewlines property to true."
              pattern: .?
              type: string
            rangePartitioning:
              $ref: '#/schemas/RangePartitioning'
              description: '[TrustedTester] Range partitioning specification for this
                table. Only one of timePartitioning and rangePartitioning should be
                specified.'
            schema:
              $ref: '#/schemas/TableSchema'
              description: "[Optional] The schema for the destination table. The schema\
                \ can be omitted if the destination table already exists, or if you're\
                \ loading data from Google Cloud Datastore."
            schemaInline:
              description: '[Deprecated] The inline schema. For CSV schemas, specify
                as "Field1:Type1[,Field2:Type2]*". For example, "foo:STRING, bar:INTEGER,
                baz:FLOAT".'
              type: string
            schemaInlineFormat:
              description: '[Deprecated] The format of the schemaInline property.'
              type: string
            schemaUpdateOptions:
              description: 'Allows the schema of the destination table to be updated
                as a side effect of the load job if a schema is autodetected or supplied
                in the job configuration. Schema update options are supported in two
                cases: when writeDisposition is WRITE_APPEND; when writeDisposition
                is WRITE_TRUNCATE and the destination table is a partition of a table,
                specified by partition decorators. For normal tables, WRITE_TRUNCATE
                will always overwrite the schema. One or more of the following values
                are specified: ALLOW_FIELD_ADDITION: allow adding a nullable field
                to the schema. ALLOW_FIELD_RELAXATION: allow relaxing a required field
                in the original schema to nullable.'
              items:
                type: string
              type: array
            skipLeadingRows:
              description: '[Optional] The number of rows at the top of a CSV file
                that BigQuery will skip when loading the data. The default value is
                0. This property is useful if you have header rows in the file that
                should be skipped.'
              format: int32
              type: integer
            sourceFormat:
              description: '[Optional] The format of the data files. For CSV files,
                specify "CSV". For datastore backups, specify "DATASTORE_BACKUP".
                For newline-delimited JSON, specify "NEWLINE_DELIMITED_JSON". For
                Avro, specify "AVRO". For parquet, specify "PARQUET". For orc, specify
                "ORC". The default value is CSV.'
              type: string
            sourceUris:
              description: "[Required] The fully-qualified URIs that point to your\
                \ data in Google Cloud. For Google Cloud Storage URIs: Each URI can\
                \ contain one '*' wildcard character and it must come after the 'bucket'\
                \ name. Size limits related to load jobs apply to external data sources.\
                \ For Google Cloud Bigtable URIs: Exactly one URI can be specified\
                \ and it has be a fully specified and valid HTTPS URL for a Google\
                \ Cloud Bigtable table. For Google Cloud Datastore backups: Exactly\
                \ one URI can be specified. Also, the '*' wildcard character is not\
                \ allowed."
              items:
                type: string
              type: array
            timePartitioning:
              $ref: '#/schemas/TimePartitioning'
              description: Time-based partitioning specification for the destination
                table. Only one of timePartitioning and rangePartitioning should be
                specified.
            useAvroLogicalTypes:
              description: '[Optional] If sourceFormat is set to "AVRO", indicates
                whether to enable interpreting logical types into their corresponding
                types (ie. TIMESTAMP), instead of only using their raw types (ie.
                INTEGER).'
              type: boolean
            writeDisposition:
              description: "[Optional] Specifies the action that occurs if the destination\
                \ table already exists. The following values are supported: WRITE_TRUNCATE:\
                \ If the table already exists, BigQuery overwrites the table data.\
                \ WRITE_APPEND: If the table already exists, BigQuery appends the\
                \ data to the table. WRITE_EMPTY: If the table already exists and\
                \ contains data, a 'duplicate' error is returned in the job result.\
                \ The default value is WRITE_APPEND. Each action is atomic and only\
                \ occurs if BigQuery is able to complete the job successfully. Creation,\
                \ truncation and append actions occur as one atomic update upon job\
                \ completion."
              type: string
          type: object
        JobConfigurationQuery:
          id: JobConfigurationQuery
          properties:
            allowLargeResults:
              default: 'false'
              description: '[Optional] If true and query uses legacy SQL dialect,
                allows the query to produce arbitrarily large result tables at a slight
                cost in performance. Requires destinationTable to be set. For standard
                SQL queries, this flag is ignored and large results are always allowed.
                However, you must still set destinationTable when result size exceeds
                the allowed maximum response size.'
              type: boolean
            clustering:
              $ref: '#/schemas/Clustering'
              description: '[Beta] Clustering specification for the destination table.
                Must be specified with time-based partitioning, data in the table
                will be first partitioned and subsequently clustered.'
            createDisposition:
              description: "[Optional] Specifies whether the job is allowed to create\
                \ new tables. The following values are supported: CREATE_IF_NEEDED:\
                \ If the table does not exist, BigQuery creates the table. CREATE_NEVER:\
                \ The table must already exist. If it does not, a 'notFound' error\
                \ is returned in the job result. The default value is CREATE_IF_NEEDED.\
                \ Creation, truncation and append actions occur as one atomic update\
                \ upon job completion."
              type: string
            defaultDataset:
              $ref: '#/schemas/DatasetReference'
              description: '[Optional] Specifies the default dataset to use for unqualified
                table names in the query. Note that this does not alter behavior of
                unqualified dataset names.'
            destinationEncryptionConfiguration:
              $ref: '#/schemas/EncryptionConfiguration'
              description: Custom encryption configuration (e.g., Cloud KMS keys).
            destinationTable:
              $ref: '#/schemas/TableReference'
              description: '[Optional] Describes the table where the query results
                should be stored. If not present, a new table will be created to store
                the results. This property must be set for large results that exceed
                the maximum response size.'
            flattenResults:
              default: 'true'
              description: '[Optional] If true and query uses legacy SQL dialect,
                flattens all nested and repeated fields in the query results. allowLargeResults
                must be true if this is set to false. For standard SQL queries, this
                flag is ignored and results are never flattened.'
              type: boolean
            maximumBillingTier:
              default: '1'
              description: '[Optional] Limits the billing tier for this job. Queries
                that have resource usage beyond this tier will fail (without incurring
                a charge). If unspecified, this will be set to your project default.'
              format: int32
              type: integer
            maximumBytesBilled:
              description: '[Optional] Limits the bytes billed for this job. Queries
                that will have bytes billed beyond this limit will fail (without incurring
                a charge). If unspecified, this will be set to your project default.'
              format: int64
              type: string
            parameterMode:
              description: Standard SQL only. Set to POSITIONAL to use positional
                (?) query parameters or to NAMED to use named (@myparam) query parameters
                in this query.
              type: string
            preserveNulls:
              description: '[Deprecated] This property is deprecated.'
              type: boolean
            priority:
              description: '[Optional] Specifies a priority for the query. Possible
                values include INTERACTIVE and BATCH. The default value is INTERACTIVE.'
              type: string
            query:
              description: '[Required] SQL query text to execute. The useLegacySql
                field can be used to indicate whether the query uses legacy SQL or
                standard SQL.'
              type: string
            queryParameters:
              description: Query parameters for standard SQL queries.
              items:
                $ref: '#/schemas/QueryParameter'
              type: array
            rangePartitioning:
              $ref: '#/schemas/RangePartitioning'
              description: '[TrustedTester] Range partitioning specification for this
                table. Only one of timePartitioning and rangePartitioning should be
                specified.'
            schemaUpdateOptions:
              description: 'Allows the schema of the destination table to be updated
                as a side effect of the query job. Schema update options are supported
                in two cases: when writeDisposition is WRITE_APPEND; when writeDisposition
                is WRITE_TRUNCATE and the destination table is a partition of a table,
                specified by partition decorators. For normal tables, WRITE_TRUNCATE
                will always overwrite the schema. One or more of the following values
                are specified: ALLOW_FIELD_ADDITION: allow adding a nullable field
                to the schema. ALLOW_FIELD_RELAXATION: allow relaxing a required field
                in the original schema to nullable.'
              items:
                type: string
              type: array
            tableDefinitions:
              additionalProperties:
                $ref: '#/schemas/ExternalDataConfiguration'
              description: '[Optional] If querying an external data source outside
                of BigQuery, describes the data format, location and other properties
                of the data source. By defining these properties, the data source
                can then be queried as if it were a standard BigQuery table.'
              type: object
            timePartitioning:
              $ref: '#/schemas/TimePartitioning'
              description: Time-based partitioning specification for the destination
                table. Only one of timePartitioning and rangePartitioning should be
                specified.
            useLegacySql:
              default: 'true'
              description: "Specifies whether to use BigQuery's legacy SQL dialect\
                \ for this query. The default value is true. If set to false, the\
                \ query will use BigQuery's standard SQL: https://cloud.google.com/bigquery/sql-reference/\
                \ When useLegacySql is set to false, the value of flattenResults is\
                \ ignored; query will be run as if flattenResults is false."
              type: boolean
            useQueryCache:
              default: 'true'
              description: '[Optional] Whether to look for the result in the query
                cache. The query cache is a best-effort cache that will be flushed
                whenever tables in the query are modified. Moreover, the query cache
                is only available when a query does not have a destination table specified.
                The default value is true.'
              type: boolean
            userDefinedFunctionResources:
              description: Describes user-defined function resources used in the query.
              items:
                $ref: '#/schemas/UserDefinedFunctionResource'
              type: array
            writeDisposition:
              description: "[Optional] Specifies the action that occurs if the destination\
                \ table already exists. The following values are supported: WRITE_TRUNCATE:\
                \ If the table already exists, BigQuery overwrites the table data\
                \ and uses the schema from the query result. WRITE_APPEND: If the\
                \ table already exists, BigQuery appends the data to the table. WRITE_EMPTY:\
                \ If the table already exists and contains data, a 'duplicate' error\
                \ is returned in the job result. The default value is WRITE_EMPTY.\
                \ Each action is atomic and only occurs if BigQuery is able to complete\
                \ the job successfully. Creation, truncation and append actions occur\
                \ as one atomic update upon job completion."
              type: string
          type: object
        JobConfigurationTableCopy:
          id: JobConfigurationTableCopy
          properties:
            createDisposition:
              description: "[Optional] Specifies whether the job is allowed to create\
                \ new tables. The following values are supported: CREATE_IF_NEEDED:\
                \ If the table does not exist, BigQuery creates the table. CREATE_NEVER:\
                \ The table must already exist. If it does not, a 'notFound' error\
                \ is returned in the job result. The default value is CREATE_IF_NEEDED.\
                \ Creation, truncation and append actions occur as one atomic update\
                \ upon job completion."
              type: string
            destinationEncryptionConfiguration:
              $ref: '#/schemas/EncryptionConfiguration'
              description: Custom encryption configuration (e.g., Cloud KMS keys).
            destinationTable:
              $ref: '#/schemas/TableReference'
              description: '[Required] The destination table'
            sourceTable:
              $ref: '#/schemas/TableReference'
              description: '[Pick one] Source table to copy.'
            sourceTables:
              description: '[Pick one] Source tables to copy.'
              items:
                $ref: '#/schemas/TableReference'
              type: array
            writeDisposition:
              description: "[Optional] Specifies the action that occurs if the destination\
                \ table already exists. The following values are supported: WRITE_TRUNCATE:\
                \ If the table already exists, BigQuery overwrites the table data.\
                \ WRITE_APPEND: If the table already exists, BigQuery appends the\
                \ data to the table. WRITE_EMPTY: If the table already exists and\
                \ contains data, a 'duplicate' error is returned in the job result.\
                \ The default value is WRITE_EMPTY. Each action is atomic and only\
                \ occurs if BigQuery is able to complete the job successfully. Creation,\
                \ truncation and append actions occur as one atomic update upon job\
                \ completion."
              type: string
          type: object
        JobReference:
          id: JobReference
          properties:
            jobId:
              annotations:
                required:
                - bigquery.jobs.getQueryResults
              description: '[Required] The ID of the job. The ID must contain only
                letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-).
                The maximum length is 1,024 characters.'
              type: string
            location:
              description: The geographic location of the job. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location.
              type: string
            projectId:
              annotations:
                required:
                - bigquery.jobs.getQueryResults
              description: '[Required] The ID of the project containing this job.'
              type: string
          type: object
        JobStatistics:
          id: JobStatistics
          properties:
            completionRatio:
              description: '[TrustedTester] [Output-only] Job progress (0.0 -> 1.0)
                for LOAD and EXTRACT jobs.'
              format: double
              type: number
            creationTime:
              description: '[Output-only] Creation time of this job, in milliseconds
                since the epoch. This field will be present on all jobs.'
              format: int64
              type: string
            endTime:
              description: '[Output-only] End time of this job, in milliseconds since
                the epoch. This field will be present whenever a job is in the DONE
                state.'
              format: int64
              type: string
            extract:
              $ref: '#/schemas/JobStatistics4'
              description: '[Output-only] Statistics for an extract job.'
            load:
              $ref: '#/schemas/JobStatistics3'
              description: '[Output-only] Statistics for a load job.'
            numChildJobs:
              description: '[Output-only] Number of child jobs executed.'
              format: int64
              type: string
            parentJobId:
              description: '[Output-only] If this is a child job, the id of the parent.'
              type: string
            query:
              $ref: '#/schemas/JobStatistics2'
              description: '[Output-only] Statistics for a query job.'
            quotaDeferments:
              description: "[Output-only] Quotas which delayed this job's start time."
              items:
                type: string
              type: array
            reservationUsage:
              description: '[Output-only] Job resource usage breakdown by reservation.'
              items:
                properties:
                  name:
                    description: '[Output-only] Reservation name or "unreserved" for
                      on-demand resources usage.'
                    type: string
                  slotMs:
                    description: '[Output-only] Slot-milliseconds the job spent in
                      the given reservation.'
                    format: int64
                    type: string
                type: object
              type: array
            startTime:
              description: '[Output-only] Start time of this job, in milliseconds
                since the epoch. This field will be present when the job transitions
                from the PENDING state to either RUNNING or DONE.'
              format: int64
              type: string
            totalBytesProcessed:
              description: '[Output-only] [Deprecated] Use the bytes processed in
                the query statistics instead.'
              format: int64
              type: string
            totalSlotMs:
              description: '[Output-only] Slot-milliseconds for the job.'
              format: int64
              type: string
          type: object
        JobStatistics2:
          id: JobStatistics2
          properties:
            billingTier:
              description: '[Output-only] Billing tier for the job.'
              format: int32
              type: integer
            cacheHit:
              description: '[Output-only] Whether the query result was fetched from
                the query cache.'
              type: boolean
            ddlOperationPerformed:
              description: 'The DDL operation performed, possibly dependent on the
                pre-existence of the DDL target. Possible values (new values might
                be added in the future): "CREATE": The query created the DDL target.
                "SKIP": No-op. Example cases: the query is CREATE TABLE IF NOT EXISTS
                while the table already exists, or the query is DROP TABLE IF EXISTS
                while the table does not exist. "REPLACE": The query replaced the
                DDL target. Example case: the query is CREATE OR REPLACE TABLE, and
                the table already exists. "DROP": The query deleted the DDL target.'
              type: string
            ddlTargetRoutine:
              $ref: '#/schemas/RoutineReference'
              description: The DDL target routine. Present only for CREATE/DROP FUNCTION/PROCEDURE
                queries.
            ddlTargetTable:
              $ref: '#/schemas/TableReference'
              description: The DDL target table. Present only for CREATE/DROP TABLE/VIEW
                queries.
            estimatedBytesProcessed:
              description: '[Output-only] The original estimate of bytes processed
                for the job.'
              format: int64
              type: string
            modelTraining:
              $ref: '#/schemas/BigQueryModelTraining'
              description: '[Output-only, Beta] Information about create model query
                job progress.'
            modelTrainingCurrentIteration:
              description: '[Output-only, Beta] Deprecated; do not use.'
              format: int32
              type: integer
            modelTrainingExpectedTotalIteration:
              description: '[Output-only, Beta] Deprecated; do not use.'
              format: int64
              type: string
            numDmlAffectedRows:
              description: '[Output-only] The number of rows affected by a DML statement.
                Present only for DML statements INSERT, UPDATE or DELETE.'
              format: int64
              type: string
            queryPlan:
              description: '[Output-only] Describes execution plan for the query.'
              items:
                $ref: '#/schemas/ExplainQueryStage'
              type: array
            referencedTables:
              description: '[Output-only] Referenced tables for the job. Queries that
                reference more than 50 tables will not have a complete list.'
              items:
                $ref: '#/schemas/TableReference'
              type: array
            reservationUsage:
              description: '[Output-only] Job resource usage breakdown by reservation.'
              items:
                properties:
                  name:
                    description: '[Output-only] Reservation name or "unreserved" for
                      on-demand resources usage.'
                    type: string
                  slotMs:
                    description: '[Output-only] Slot-milliseconds the job spent in
                      the given reservation.'
                    format: int64
                    type: string
                type: object
              type: array
            schema:
              $ref: '#/schemas/TableSchema'
              description: '[Output-only] The schema of the results. Present only
                for successful dry run of non-legacy SQL queries.'
            statementType:
              description: 'The type of query statement, if valid. Possible values
                (new values might be added in the future): "SELECT": SELECT query.
                "INSERT": INSERT query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language.
                "UPDATE": UPDATE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language.
                "DELETE": DELETE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language.
                "MERGE": MERGE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language.
                "ALTER_TABLE": ALTER TABLE query. "ALTER_VIEW": ALTER VIEW query.
                "CREATE_FUNCTION": CREATE FUNCTION query. "CREATE_MODEL": CREATE [OR
                REPLACE] MODEL ... AS SELECT ... . "CREATE_PROCEDURE": CREATE PROCEDURE
                query. "CREATE_TABLE": CREATE [OR REPLACE] TABLE without AS SELECT.
                "CREATE_TABLE_AS_SELECT": CREATE [OR REPLACE] TABLE ... AS SELECT
                ... . "CREATE_VIEW": CREATE [OR REPLACE] VIEW ... AS SELECT ... .
                "DROP_FUNCTION" : DROP FUNCTION query. "DROP_PROCEDURE": DROP PROCEDURE
                query. "DROP_TABLE": DROP TABLE query. "DROP_VIEW": DROP VIEW query.'
              type: string
            timeline:
              description: '[Output-only] [Beta] Describes a timeline of job execution.'
              items:
                $ref: '#/schemas/QueryTimelineSample'
              type: array
            totalBytesBilled:
              description: '[Output-only] Total bytes billed for the job.'
              format: int64
              type: string
            totalBytesProcessed:
              description: '[Output-only] Total bytes processed for the job.'
              format: int64
              type: string
            totalBytesProcessedAccuracy:
              description: '[Output-only] For dry-run jobs, totalBytesProcessed is
                an estimate and this field specifies the accuracy of the estimate.
                Possible values can be: UNKNOWN: accuracy of the estimate is unknown.
                PRECISE: estimate is precise. LOWER_BOUND: estimate is lower bound
                of what the query would cost. UPPER_BOUND: estimate is upper bound
                of what the query would cost.'
              type: string
            totalPartitionsProcessed:
              description: '[Output-only] Total number of partitions processed from
                all partitioned tables referenced in the job.'
              format: int64
              type: string
            totalSlotMs:
              description: '[Output-only] Slot-milliseconds for the job.'
              format: int64
              type: string
            undeclaredQueryParameters:
              description: 'Standard SQL only: list of undeclared query parameters
                detected during a dry run validation.'
              items:
                $ref: '#/schemas/QueryParameter'
              type: array
          type: object
        JobStatistics3:
          id: JobStatistics3
          properties:
            badRecords:
              description: '[Output-only] The number of bad records encountered. Note
                that if the job has failed because of more bad records encountered
                than the maximum allowed in the load job configuration, then this
                number can be less than the total number of bad records present in
                the input data.'
              format: int64
              type: string
            inputFileBytes:
              description: '[Output-only] Number of bytes of source data in a load
                job.'
              format: int64
              type: string
            inputFiles:
              description: '[Output-only] Number of source files in a load job.'
              format: int64
              type: string
            outputBytes:
              description: '[Output-only] Size of the loaded data in bytes. Note that
                while a load job is in the running state, this value may change.'
              format: int64
              type: string
            outputRows:
              description: '[Output-only] Number of rows imported in a load job. Note
                that while an import job is in the running state, this value may change.'
              format: int64
              type: string
          type: object
        JobStatistics4:
          id: JobStatistics4
          properties:
            destinationUriFileCounts:
              description: "[Output-only] Number of files per destination URI or URI\
                \ pattern specified in the extract configuration. These values will\
                \ be in the same order as the URIs specified in the 'destinationUris'\
                \ field."
              items:
                format: int64
                type: string
              type: array
            inputBytes:
              description: '[Output-only] Number of user bytes extracted into the
                result. This is the byte count as computed by BigQuery for billing
                purposes.'
              format: int64
              type: string
          type: object
        JobStatus:
          id: JobStatus
          properties:
            errorResult:
              $ref: '#/schemas/ErrorProto'
              description: '[Output-only] Final error result of the job. If present,
                indicates that the job has completed and was unsuccessful.'
            errors:
              description: '[Output-only] The first errors encountered during the
                running of the job. The final message includes the number of errors
                that caused the process to stop. Errors here do not necessarily mean
                that the job has completed or was unsuccessful.'
              items:
                $ref: '#/schemas/ErrorProto'
              type: array
            state:
              description: '[Output-only] Running state of the job.'
              type: string
          type: object
        QueryParameter:
          id: QueryParameter
          properties:
            name:
              description: '[Optional] If unset, this is a positional parameter. Otherwise,
                should be unique within a query.'
              type: string
            parameterType:
              $ref: '#/schemas/QueryParameterType'
              description: '[Required] The type of this parameter.'
            parameterValue:
              $ref: '#/schemas/QueryParameterValue'
              description: '[Required] The value of this parameter.'
          type: object
        QueryParameterType:
          id: QueryParameterType
          properties:
            arrayType:
              $ref: '#/schemas/QueryParameterType'
              description: "[Optional] The type of the array's elements, if this is\
                \ an array."
            structTypes:
              description: '[Optional] The types of the fields of this struct, in
                order, if this is a struct.'
              items:
                properties:
                  description:
                    description: '[Optional] Human-oriented description of the field.'
                    type: string
                  name:
                    description: '[Optional] The name of this field.'
                    type: string
                  type:
                    $ref: '#/schemas/QueryParameterType'
                    description: '[Required] The type of this field.'
                type: object
              type: array
            type:
              description: '[Required] The top level type of this field.'
              type: string
          type: object
        QueryParameterValue:
          id: QueryParameterValue
          properties:
            arrayValues:
              description: '[Optional] The array values, if this is an array type.'
              items:
                $ref: '#/schemas/QueryParameterValue'
              type: array
            structValues:
              additionalProperties:
                $ref: '#/schemas/QueryParameterValue'
              description: "[Optional] The struct field values, in order of the struct\
                \ type's declaration."
              type: object
            value:
              description: '[Optional] The value of this value, if a simple scalar
                type.'
              type: string
          type: object
        QueryTimelineSample:
          id: QueryTimelineSample
          properties:
            activeUnits:
              description: Total number of units currently being processed by workers.
                This does not correspond directly to slot usage. This is the largest
                value observed since the last sample.
              format: int64
              type: string
            completedUnits:
              description: Total parallel units of work completed by this query.
              format: int64
              type: string
            elapsedMs:
              description: Milliseconds elapsed since the start of query execution.
              format: int64
              type: string
            pendingUnits:
              description: Total parallel units of work remaining for the active stages.
              format: int64
              type: string
            totalSlotMs:
              description: Cumulative slot-ms consumed by the query.
              format: int64
              type: string
          type: object
        RangePartitioning:
          id: RangePartitioning
          properties:
            field:
              description: '[TrustedTester] [Required] The table is partitioned by
                this field. The field must be a top-level NULLABLE/REQUIRED field.
                The only supported type is INTEGER/INT64.'
              type: string
            range:
              description: '[TrustedTester] [Required] Defines the ranges for range
                partitioning.'
              properties:
                end:
                  description: '[TrustedTester] [Required] The end of range partitioning,
                    exclusive.'
                  format: int64
                  type: string
                interval:
                  description: '[TrustedTester] [Required] The width of each interval.'
                  format: int64
                  type: string
                start:
                  description: '[TrustedTester] [Required] The start of range partitioning,
                    inclusive.'
                  format: int64
                  type: string
              type: object
          type: object
        RoutineReference:
          id: RoutineReference
          properties:
            datasetId:
              description: '[Required] The ID of the dataset containing this routine.'
              type: string
            projectId:
              description: '[Required] The ID of the project containing this routine.'
              type: string
            routineId:
              description: '[Required] The ID of the routine. The ID must contain
                only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                length is 256 characters.'
              type: string
          type: object
        TableFieldSchema:
          id: TableFieldSchema
          properties:
            categories:
              description: '[Optional] The categories attached to this field, used
                for field-level access control.'
              properties:
                names:
                  description: A list of category resource names. For example, "projects/1/taxonomies/2/categories/3".
                    At most 5 categories are allowed.
                  items:
                    type: string
                  type: array
              type: object
            description:
              description: '[Optional] The field description. The maximum length is
                1,024 characters.'
              type: string
            fields:
              description: '[Optional] Describes the nested schema fields if the type
                property is set to RECORD.'
              items:
                $ref: '#/schemas/TableFieldSchema'
              type: array
            mode:
              description: '[Optional] The field mode. Possible values include NULLABLE,
                REQUIRED and REPEATED. The default value is NULLABLE.'
              type: string
            name:
              description: '[Required] The field name. The name must contain only
                letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start
                with a letter or underscore. The maximum length is 128 characters.'
              type: string
            type:
              description: '[Required] The field data type. Possible values include
                STRING, BYTES, INTEGER, INT64 (same as INTEGER), FLOAT, FLOAT64 (same
                as FLOAT), BOOLEAN, BOOL (same as BOOLEAN), TIMESTAMP, DATE, TIME,
                DATETIME, RECORD (where RECORD indicates that the field contains a
                nested schema) or STRUCT (same as RECORD).'
              type: string
          type: object
        TableReference:
          id: TableReference
          properties:
            datasetId:
              annotations:
                required:
                - bigquery.tables.update
              description: '[Required] The ID of the dataset containing this table.'
              type: string
            projectId:
              annotations:
                required:
                - bigquery.tables.update
              description: '[Required] The ID of the project containing this table.'
              type: string
            tableId:
              annotations:
                required:
                - bigquery.tables.update
              description: '[Required] The ID of the table. The ID must contain only
                letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                length is 1,024 characters.'
              type: string
          type: object
        TableSchema:
          id: TableSchema
          properties:
            fields:
              description: Describes the fields in a table.
              items:
                $ref: '#/schemas/TableFieldSchema'
              type: array
          type: object
        TimePartitioning:
          id: TimePartitioning
          properties:
            expirationMs:
              description: '[Optional] Number of milliseconds for which to keep the
                storage for partitions in the table. The storage in a partition will
                have an expiration time of its partition time plus this value.'
              format: int64
              type: string
            field:
              description: "[Beta] [Optional] If not set, the table is partitioned\
                \ by pseudo column, referenced via either '_PARTITIONTIME' as TIMESTAMP\
                \ type, or '_PARTITIONDATE' as DATE type. If field is specified, the\
                \ table is instead partitioned by this field. The field must be a\
                \ top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or\
                \ REQUIRED."
              type: string
            requirePartitionFilter:
              type: boolean
            type:
              description: '[Required] The only type supported is DAY, which will
                generate one partition per day.'
              type: string
          type: object
        UserDefinedFunctionResource:
          id: UserDefinedFunctionResource
          properties:
            inlineCode:
              description: '[Pick one] An inline resource that contains code for a
                user-defined function (UDF). Providing a inline code resource is equivalent
                to providing a URI for a file containing the same code.'
              type: string
            resourceUri:
              description: '[Pick one] A code resource to load from a Google Cloud
                Storage URI (gs://bucket/path).'
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/bigquery-v2/types/jobs?alt=json
  title: BigQuery API
