type_info:
  documentationLink: https://cloud.google.com/logging/docs/
  kind: deploymentmanager#typeInfo
  name: projects.metrics
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          bucketOptions:
            $ref: '#/schemas/BucketOptions'
            description: Optional. The bucket_options are required when the logs-based
              metric is using a DISTRIBUTION value type and it describes the bucket
              boundaries used to create a histogram of the extracted values.
          description:
            description: Optional. A description of this metric, which is used in
              documentation. The maximum length of the description is 8000 characters.
            type: string
          filter:
            description: |-
              Required. An advanced logs filter which is used to match log entries. Example:
              "resource.type=gae_app AND severity>=ERROR"
              The maximum length of the filter is 20000 characters.
            type: string
          labelExtractors:
            additionalProperties:
              type: string
            description: Optional. A map from a label key string to an extractor expression
              which is used to extract data from a log entry field and assign as the
              label value. Each label key specified in the LabelDescriptor must have
              an associated extractor expression in this map. The syntax of the extractor
              expression is the same as for the value_extractor field.The extracted
              value is converted to the type defined in the label descriptor. If the
              either the extraction or the type conversion fails, the label will have
              a default value. The default value for a string label is an empty string,
              for an integer label its 0, and for a boolean label its false.Note that
              there are upper bounds on the maximum number of labels and the number
              of active time series that are allowed in a project.
            type: object
          metricDescriptor:
            $ref: '#/schemas/MetricDescriptor'
            description: Optional. The metric descriptor associated with the logs-based
              metric. If unspecified, it uses a default metric descriptor with a DELTA
              metric kind, INT64 value type, with no labels and a unit of "1". Such
              a metric counts the number of log entries matching the filter expression.The
              name, type, and description fields in the metric_descriptor are output
              only, and is constructed using the name and description field in the
              LogMetric.To create a logs-based metric that records a distribution
              of log values, a DELTA metric kind with a DISTRIBUTION value type must
              be used along with a value_extractor expression in the LogMetric.Each
              label in the metric descriptor must have a matching label name as the
              key and an extractor expression as the value in the label_extractors
              map.The metric_kind and value_type fields in the metric_descriptor cannot
              be updated once initially configured. New labels can be added in the
              metric_descriptor, but existing labels cannot be modified except for
              their description.
          name:
            description: "Required. The client-assigned metric identifier. Examples:\
              \ \"error_count\", \"nginx/requests\".Metric identifiers are limited\
              \ to 100 characters and can include only the following characters: A-Z,\
              \ a-z, 0-9, and the special characters _-.,+!*',()%/. The forward-slash\
              \ character (/) denotes a hierarchy of name pieces, and it cannot be\
              \ the first character of the name.The metric identifier in this field\
              \ must not be URL-encoded (https://en.wikipedia.org/wiki/Percent-encoding).\
              \ However, when the metric identifier appears as the [METRIC_ID] part\
              \ of a metric_name API parameter, then the metric identifier must be\
              \ URL-encoded. Example: \"projects/my-project/metrics/nginx%2Frequests\"\
              ."
            type: string
          parent:
            description: |-
              The resource name of the project in which to create the metric:
              "projects/[PROJECT_ID]"
              The new metric must be provided in the request.
            location: path
            pattern: ^projects/[^/]+$
            required: true
            type: string
          valueExtractor:
            description: 'Optional. A value_extractor is required when using a distribution
              logs-based metric to extract the values to record from a log entry.
              Two functions are supported for value extraction: EXTRACT(field) or
              REGEXP_EXTRACT(field, regex). The argument are:  1. field: The name
              of the log entry field from which the value is to be  extracted.  2.
              regex: A regular expression using the Google RE2 syntax  (https://github.com/google/re2/wiki/Syntax)
              with a single capture  group to extract data from the specified log
              entry field. The value  of the field is converted to a string before
              applying the regex.  It is an error to specify a regex that does not
              include exactly one  capture group.The result of the extraction must
              be convertible to a double type, as the distribution always records
              double values. If either the extraction or the conversion to double
              fails, then those values are not recorded in the distribution.Example:
              REGEXP_EXTRACT(jsonPayload.request, ".*quantity=(\d+).*")'
            type: string
          version:
            description: Deprecated. The API version that created or updated this
              metric. The v2 format is used by default and cannot be changed.
            enum:
            - V2
            - V1
            enumDescriptions:
            - Logging API v2.
            - Logging API v1.
            type: string
        type: object
      methodName: create
      schemas:
        BucketOptions:
          description: 'BucketOptions describes the bucket boundaries used to create
            a histogram for the distribution. The buckets can be in a linear sequence,
            an exponential sequence, or each bucket can be specified explicitly. BucketOptions
            does not include the number of values in each bucket.A bucket has an inclusive
            lower bound and exclusive upper bound for the values that are counted
            for that bucket. The upper bound of a bucket must be strictly greater
            than the lower bound. The sequence of N buckets for a distribution consists
            of an underflow bucket (number 0), zero or more finite buckets (number
            1 through N - 2) and an overflow bucket (number N - 1). The buckets are
            contiguous: the lower bound of bucket i (i > 0) is the same as the upper
            bound of bucket i - 1. The buckets span the whole range of finite values:
            lower bound of the underflow bucket is -infinity and the upper bound of
            the overflow bucket is +infinity. The finite buckets are so-called because
            both bounds are finite.'
          id: BucketOptions
          properties:
            explicitBuckets:
              $ref: '#/schemas/Explicit'
              description: The explicit buckets.
            exponentialBuckets:
              $ref: '#/schemas/Exponential'
              description: The exponential buckets.
            linearBuckets:
              $ref: '#/schemas/Linear'
              description: The linear bucket.
          type: object
        Explicit:
          description: 'Specifies a set of buckets with arbitrary widths.There are
            size(bounds) + 1 (= N) buckets. Bucket i has the following boundaries:Upper
            bound (0 <= i < N-1): boundsi  Lower bound (1 <= i < N); boundsi - 1The
            bounds field must contain at least one element. If bounds has only one
            element, then there are no finite buckets, and that single element is
            the common boundary of the overflow and underflow buckets.'
          id: Explicit
          properties:
            bounds:
              description: The values must be monotonically increasing.
              items:
                format: double
                type: number
              type: array
          type: object
        Exponential:
          description: 'Specifies an exponential sequence of buckets that have a width
            that is proportional to the value of the lower bound. Each bucket represents
            a constant relative uncertainty on a specific value in the bucket.There
            are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper
            bound (0 <= i < N-1): scale * (growth_factor ^ i).  Lower bound (1 <=
            i < N): scale * (growth_factor ^ (i - 1)).'
          id: Exponential
          properties:
            growthFactor:
              description: Must be greater than 1.
              format: double
              type: number
            numFiniteBuckets:
              description: Must be greater than 0.
              format: int32
              type: integer
            scale:
              description: Must be greater than 0.
              format: double
              type: number
          type: object
        LabelDescriptor:
          description: A description of a label.
          id: LabelDescriptor
          properties:
            description:
              description: A human-readable description for the label.
              type: string
            key:
              description: The label key.
              type: string
            valueType:
              description: The type of data that can be assigned to the label.
              enum:
              - STRING
              - BOOL
              - INT64
              enumDescriptions:
              - A variable-length string. This is the default.
              - Boolean; true or false.
              - A 64-bit signed integer.
              type: string
          type: object
        Linear:
          description: 'Specifies a linear sequence of buckets that all have the same
            width (except overflow and underflow). Each bucket represents a constant
            absolute uncertainty on the specific value in the bucket.There are num_finite_buckets
            + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0
            <= i < N-1): offset + (width * i).  Lower bound (1 <= i < N): offset +
            (width * (i - 1)).'
          id: Linear
          properties:
            numFiniteBuckets:
              description: Must be greater than 0.
              format: int32
              type: integer
            offset:
              description: Lower bound of the first bucket.
              format: double
              type: number
            width:
              description: Must be greater than 0.
              format: double
              type: number
          type: object
        LogMetric:
          description: Describes a logs-based metric. The value of the metric is the
            number of log entries that match a logs filter in a given time interval.Logs-based
            metric can also be used to extract values from logs and create a a distribution
            of the values. The distribution records the statistics of the extracted
            values along with an optional histogram of the values as specified by
            the bucket options.
          id: LogMetric
          properties:
            bucketOptions:
              $ref: '#/schemas/BucketOptions'
              description: Optional. The bucket_options are required when the logs-based
                metric is using a DISTRIBUTION value type and it describes the bucket
                boundaries used to create a histogram of the extracted values.
            description:
              description: Optional. A description of this metric, which is used in
                documentation. The maximum length of the description is 8000 characters.
              type: string
            filter:
              description: |-
                Required. An advanced logs filter which is used to match log entries. Example:
                "resource.type=gae_app AND severity>=ERROR"
                The maximum length of the filter is 20000 characters.
              type: string
            labelExtractors:
              additionalProperties:
                type: string
              description: Optional. A map from a label key string to an extractor
                expression which is used to extract data from a log entry field and
                assign as the label value. Each label key specified in the LabelDescriptor
                must have an associated extractor expression in this map. The syntax
                of the extractor expression is the same as for the value_extractor
                field.The extracted value is converted to the type defined in the
                label descriptor. If the either the extraction or the type conversion
                fails, the label will have a default value. The default value for
                a string label is an empty string, for an integer label its 0, and
                for a boolean label its false.Note that there are upper bounds on
                the maximum number of labels and the number of active time series
                that are allowed in a project.
              type: object
            metricDescriptor:
              $ref: '#/schemas/MetricDescriptor'
              description: Optional. The metric descriptor associated with the logs-based
                metric. If unspecified, it uses a default metric descriptor with a
                DELTA metric kind, INT64 value type, with no labels and a unit of
                "1". Such a metric counts the number of log entries matching the filter
                expression.The name, type, and description fields in the metric_descriptor
                are output only, and is constructed using the name and description
                field in the LogMetric.To create a logs-based metric that records
                a distribution of log values, a DELTA metric kind with a DISTRIBUTION
                value type must be used along with a value_extractor expression in
                the LogMetric.Each label in the metric descriptor must have a matching
                label name as the key and an extractor expression as the value in
                the label_extractors map.The metric_kind and value_type fields in
                the metric_descriptor cannot be updated once initially configured.
                New labels can be added in the metric_descriptor, but existing labels
                cannot be modified except for their description.
            name:
              description: "Required. The client-assigned metric identifier. Examples:\
                \ \"error_count\", \"nginx/requests\".Metric identifiers are limited\
                \ to 100 characters and can include only the following characters:\
                \ A-Z, a-z, 0-9, and the special characters _-.,+!*',()%/. The forward-slash\
                \ character (/) denotes a hierarchy of name pieces, and it cannot\
                \ be the first character of the name.The metric identifier in this\
                \ field must not be URL-encoded (https://en.wikipedia.org/wiki/Percent-encoding).\
                \ However, when the metric identifier appears as the [METRIC_ID] part\
                \ of a metric_name API parameter, then the metric identifier must\
                \ be URL-encoded. Example: \"projects/my-project/metrics/nginx%2Frequests\"\
                ."
              type: string
            valueExtractor:
              description: 'Optional. A value_extractor is required when using a distribution
                logs-based metric to extract the values to record from a log entry.
                Two functions are supported for value extraction: EXTRACT(field) or
                REGEXP_EXTRACT(field, regex). The argument are:  1. field: The name
                of the log entry field from which the value is to be  extracted.  2.
                regex: A regular expression using the Google RE2 syntax  (https://github.com/google/re2/wiki/Syntax)
                with a single capture  group to extract data from the specified log
                entry field. The value  of the field is converted to a string before
                applying the regex.  It is an error to specify a regex that does not
                include exactly one  capture group.The result of the extraction must
                be convertible to a double type, as the distribution always records
                double values. If either the extraction or the conversion to double
                fails, then those values are not recorded in the distribution.Example:
                REGEXP_EXTRACT(jsonPayload.request, ".*quantity=(\d+).*")'
              type: string
            version:
              description: Deprecated. The API version that created or updated this
                metric. The v2 format is used by default and cannot be changed.
              enum:
              - V2
              - V1
              enumDescriptions:
              - Logging API v2.
              - Logging API v1.
              type: string
          type: object
        MetricDescriptor:
          description: Defines a metric type and its schema. Once a metric descriptor
            is created, deleting or altering it stops data collection and makes the
            metric type's existing data unusable.
          id: MetricDescriptor
          properties:
            description:
              description: A detailed description of the metric, which can be used
                in documentation.
              type: string
            displayName:
              description: A concise name for the metric, which can be displayed in
                user interfaces. Use sentence case without an ending period, for example
                "Request count". This field is optional but it is recommended to be
                set for any metrics associated with user-visible concepts, such as
                Quota.
              type: string
            labels:
              description: The set of labels that can be used to describe a specific
                instance of this metric type. For example, the appengine.googleapis.com/http/server/response_latencies
                metric type has a label for the HTTP response code, response_code,
                so you can look at latencies for successful responses or just for
                responses that failed.
              items:
                $ref: '#/schemas/LabelDescriptor'
              type: array
            launchStage:
              description: Optional. The launch stage of the metric definition.
              enum:
              - LAUNCH_STAGE_UNSPECIFIED
              - EARLY_ACCESS
              - ALPHA
              - BETA
              - GA
              - DEPRECATED
              enumDescriptions:
              - Do not use this default value.
              - Early Access features are limited to a closed group of testers. To
                use these features, you must sign up in advance and sign a Trusted
                Tester agreement (which includes confidentiality provisions). These
                features may be unstable, changed in backward-incompatible ways, and
                are not guaranteed to be released.
              - "Alpha is a limited availability test for releases before they are\
                \ cleared for widespread use. By Alpha, all significant design issues\
                \ are resolved and we are in the process of verifying functionality.\
                \ Alpha customers need to apply for access, agree to applicable terms,\
                \ and have their projects whitelisted. Alpha releases don\u2019t have\
                \ to be feature complete, no SLAs are provided, and there are no technical\
                \ support obligations, but they will be far enough along that customers\
                \ can actually use them in test environments or for limited-use tests\
                \ -- just like they would in normal production cases."
              - Beta is the point at which we are ready to open a release for any
                customer to use. There are no SLA or technical support obligations
                in a Beta release. Products will be complete from a feature perspective,
                but may have some open outstanding issues. Beta releases are suitable
                for limited production use cases.
              - GA features are open to all developers and are considered stable and
                fully qualified for production use.
              - "Deprecated features are scheduled to be shut down and removed. For\
                \ more information, see the \u201CDeprecation Policy\u201D section\
                \ of our Terms of Service (https://cloud.google.com/terms/) and the\
                \ Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation)\
                \ documentation."
              type: string
            metadata:
              $ref: '#/schemas/MetricDescriptorMetadata'
              description: Optional. Metadata which can be used to guide usage of
                the metric.
            metricKind:
              description: Whether the metric records instantaneous values, changes
                to a value, etc. Some combinations of metric_kind and value_type might
                not be supported.
              enum:
              - METRIC_KIND_UNSPECIFIED
              - GAUGE
              - DELTA
              - CUMULATIVE
              enumDescriptions:
              - Do not use this default value.
              - An instantaneous measurement of a value.
              - The change in a value during a time interval.
              - A value accumulated over a time interval. Cumulative measurements
                in a time series should have the same start time and increasing end
                times, until an event resets the cumulative value to zero and sets
                a new start time for the following points.
              type: string
            name:
              description: The resource name of the metric descriptor.
              type: string
            type:
              description: |
                The metric type, including its DNS name prefix. The type is not URL-encoded. All user-defined metric types have the DNS name custom.googleapis.com or external.googleapis.com. Metric types should use a natural hierarchical grouping. For example:
                "custom.googleapis.com/invoice/paid/amount"
                "external.googleapis.com/prometheus/up"
                "appengine.googleapis.com/http/server/response_latencies"
              type: string
            unit:
              description: |-
                The unit in which the metric value is reported. It is only applicable if the value_type is INT64, DOUBLE, or DISTRIBUTION. The supported units are a subset of The Unified Code for Units of Measure (http://unitsofmeasure.org/ucum.html) standard:Basic units (UNIT)
                bit bit
                By byte
                s second
                min minute
                h hour
                d dayPrefixes (PREFIX)
                k kilo (10**3)
                M mega (10**6)
                G giga (10**9)
                T tera (10**12)
                P peta (10**15)
                E exa (10**18)
                Z zetta (10**21)
                Y yotta (10**24)
                m milli (10**-3)
                u micro (10**-6)
                n nano (10**-9)
                p pico (10**-12)
                f femto (10**-15)
                a atto (10**-18)
                z zepto (10**-21)
                y yocto (10**-24)
                Ki kibi (2**10)
                Mi mebi (2**20)
                Gi gibi (2**30)
                Ti tebi (2**40)GrammarThe grammar also includes these connectors:
                / division (as an infix operator, e.g. 1/s).
                . multiplication (as an infix operator, e.g. GBy.d)The grammar for a unit is as follows:
                Expression = Component { "." Component } { "/" Component } ;

                Component = ( [ PREFIX ] UNIT | "%" ) [ Annotation ]
                          | Annotation
                          | "1"
                          ;

                Annotation = "{" NAME "}" ;
                Notes:
                Annotation is just a comment if it follows a UNIT and is  equivalent to 1 if it is used alone. For examples,  {requests}/s == 1/s, By{transmitted}/s == By/s.
                NAME is a sequence of non-blank printable ASCII characters not  containing '{' or '}'.
                1 represents dimensionless value 1, such as in 1/s.
                % represents dimensionless value 1/100, and annotates values giving  a percentage.
              type: string
            valueType:
              description: Whether the measurement is an integer, a floating-point
                number, etc. Some combinations of metric_kind and value_type might
                not be supported.
              enum:
              - VALUE_TYPE_UNSPECIFIED
              - BOOL
              - INT64
              - DOUBLE
              - STRING
              - DISTRIBUTION
              - MONEY
              enumDescriptions:
              - Do not use this default value.
              - The value is a boolean. This value type can be used only if the metric
                kind is GAUGE.
              - The value is a signed 64-bit integer.
              - The value is a double precision floating point number.
              - The value is a text string. This value type can be used only if the
                metric kind is GAUGE.
              - The value is a Distribution.
              - The value is money.
              type: string
          type: object
        MetricDescriptorMetadata:
          description: Additional annotations that can be used to guide the usage
            of a metric.
          id: MetricDescriptorMetadata
          properties:
            ingestDelay:
              description: The delay of data points caused by ingestion. Data points
                older than this age are guaranteed to be ingested and available to
                be read, excluding data loss due to errors.
              format: google-duration
              type: string
            launchStage:
              description: Deprecated. Please use the MetricDescriptor.launch_stage
                instead. The launch stage of the metric definition.
              enum:
              - LAUNCH_STAGE_UNSPECIFIED
              - EARLY_ACCESS
              - ALPHA
              - BETA
              - GA
              - DEPRECATED
              enumDescriptions:
              - Do not use this default value.
              - Early Access features are limited to a closed group of testers. To
                use these features, you must sign up in advance and sign a Trusted
                Tester agreement (which includes confidentiality provisions). These
                features may be unstable, changed in backward-incompatible ways, and
                are not guaranteed to be released.
              - "Alpha is a limited availability test for releases before they are\
                \ cleared for widespread use. By Alpha, all significant design issues\
                \ are resolved and we are in the process of verifying functionality.\
                \ Alpha customers need to apply for access, agree to applicable terms,\
                \ and have their projects whitelisted. Alpha releases don\u2019t have\
                \ to be feature complete, no SLAs are provided, and there are no technical\
                \ support obligations, but they will be far enough along that customers\
                \ can actually use them in test environments or for limited-use tests\
                \ -- just like they would in normal production cases."
              - Beta is the point at which we are ready to open a release for any
                customer to use. There are no SLA or technical support obligations
                in a Beta release. Products will be complete from a feature perspective,
                but may have some open outstanding issues. Beta releases are suitable
                for limited production use cases.
              - GA features are open to all developers and are considered stable and
                fully qualified for production use.
              - "Deprecated features are scheduled to be shut down and removed. For\
                \ more information, see the \u201CDeprecation Policy\u201D section\
                \ of our Terms of Service (https://cloud.google.com/terms/) and the\
                \ Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation)\
                \ documentation."
              type: string
            samplePeriod:
              description: The sampling period of metric data points. For metrics
                which are written periodically, consecutive data points are stored
                at this time interval, excluding data loss due to errors. Metrics
                with a higher granularity have a smaller sampling period.
              format: google-duration
              type: string
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/LogMetric'
      methodName: get
      schemas:
        BucketOptions:
          description: 'BucketOptions describes the bucket boundaries used to create
            a histogram for the distribution. The buckets can be in a linear sequence,
            an exponential sequence, or each bucket can be specified explicitly. BucketOptions
            does not include the number of values in each bucket.A bucket has an inclusive
            lower bound and exclusive upper bound for the values that are counted
            for that bucket. The upper bound of a bucket must be strictly greater
            than the lower bound. The sequence of N buckets for a distribution consists
            of an underflow bucket (number 0), zero or more finite buckets (number
            1 through N - 2) and an overflow bucket (number N - 1). The buckets are
            contiguous: the lower bound of bucket i (i > 0) is the same as the upper
            bound of bucket i - 1. The buckets span the whole range of finite values:
            lower bound of the underflow bucket is -infinity and the upper bound of
            the overflow bucket is +infinity. The finite buckets are so-called because
            both bounds are finite.'
          id: BucketOptions
          properties:
            explicitBuckets:
              $ref: '#/schemas/Explicit'
              description: The explicit buckets.
            exponentialBuckets:
              $ref: '#/schemas/Exponential'
              description: The exponential buckets.
            linearBuckets:
              $ref: '#/schemas/Linear'
              description: The linear bucket.
          type: object
        Explicit:
          description: 'Specifies a set of buckets with arbitrary widths.There are
            size(bounds) + 1 (= N) buckets. Bucket i has the following boundaries:Upper
            bound (0 <= i < N-1): boundsi  Lower bound (1 <= i < N); boundsi - 1The
            bounds field must contain at least one element. If bounds has only one
            element, then there are no finite buckets, and that single element is
            the common boundary of the overflow and underflow buckets.'
          id: Explicit
          properties:
            bounds:
              description: The values must be monotonically increasing.
              items:
                format: double
                type: number
              type: array
          type: object
        Exponential:
          description: 'Specifies an exponential sequence of buckets that have a width
            that is proportional to the value of the lower bound. Each bucket represents
            a constant relative uncertainty on a specific value in the bucket.There
            are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper
            bound (0 <= i < N-1): scale * (growth_factor ^ i).  Lower bound (1 <=
            i < N): scale * (growth_factor ^ (i - 1)).'
          id: Exponential
          properties:
            growthFactor:
              description: Must be greater than 1.
              format: double
              type: number
            numFiniteBuckets:
              description: Must be greater than 0.
              format: int32
              type: integer
            scale:
              description: Must be greater than 0.
              format: double
              type: number
          type: object
        LabelDescriptor:
          description: A description of a label.
          id: LabelDescriptor
          properties:
            description:
              description: A human-readable description for the label.
              type: string
            key:
              description: The label key.
              type: string
            valueType:
              description: The type of data that can be assigned to the label.
              enum:
              - STRING
              - BOOL
              - INT64
              enumDescriptions:
              - A variable-length string. This is the default.
              - Boolean; true or false.
              - A 64-bit signed integer.
              type: string
          type: object
        Linear:
          description: 'Specifies a linear sequence of buckets that all have the same
            width (except overflow and underflow). Each bucket represents a constant
            absolute uncertainty on the specific value in the bucket.There are num_finite_buckets
            + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0
            <= i < N-1): offset + (width * i).  Lower bound (1 <= i < N): offset +
            (width * (i - 1)).'
          id: Linear
          properties:
            numFiniteBuckets:
              description: Must be greater than 0.
              format: int32
              type: integer
            offset:
              description: Lower bound of the first bucket.
              format: double
              type: number
            width:
              description: Must be greater than 0.
              format: double
              type: number
          type: object
        LogMetric:
          description: Describes a logs-based metric. The value of the metric is the
            number of log entries that match a logs filter in a given time interval.Logs-based
            metric can also be used to extract values from logs and create a a distribution
            of the values. The distribution records the statistics of the extracted
            values along with an optional histogram of the values as specified by
            the bucket options.
          id: LogMetric
          properties:
            bucketOptions:
              $ref: '#/schemas/BucketOptions'
              description: Optional. The bucket_options are required when the logs-based
                metric is using a DISTRIBUTION value type and it describes the bucket
                boundaries used to create a histogram of the extracted values.
            createTime:
              description: Output only. The creation timestamp of the metric.This
                field may not be present for older metrics.
              format: google-datetime
              type: string
            description:
              description: Optional. A description of this metric, which is used in
                documentation. The maximum length of the description is 8000 characters.
              type: string
            filter:
              description: |-
                Required. An advanced logs filter which is used to match log entries. Example:
                "resource.type=gae_app AND severity>=ERROR"
                The maximum length of the filter is 20000 characters.
              type: string
            labelExtractors:
              additionalProperties:
                type: string
              description: Optional. A map from a label key string to an extractor
                expression which is used to extract data from a log entry field and
                assign as the label value. Each label key specified in the LabelDescriptor
                must have an associated extractor expression in this map. The syntax
                of the extractor expression is the same as for the value_extractor
                field.The extracted value is converted to the type defined in the
                label descriptor. If the either the extraction or the type conversion
                fails, the label will have a default value. The default value for
                a string label is an empty string, for an integer label its 0, and
                for a boolean label its false.Note that there are upper bounds on
                the maximum number of labels and the number of active time series
                that are allowed in a project.
              type: object
            metricDescriptor:
              $ref: '#/schemas/MetricDescriptor'
              description: Optional. The metric descriptor associated with the logs-based
                metric. If unspecified, it uses a default metric descriptor with a
                DELTA metric kind, INT64 value type, with no labels and a unit of
                "1". Such a metric counts the number of log entries matching the filter
                expression.The name, type, and description fields in the metric_descriptor
                are output only, and is constructed using the name and description
                field in the LogMetric.To create a logs-based metric that records
                a distribution of log values, a DELTA metric kind with a DISTRIBUTION
                value type must be used along with a value_extractor expression in
                the LogMetric.Each label in the metric descriptor must have a matching
                label name as the key and an extractor expression as the value in
                the label_extractors map.The metric_kind and value_type fields in
                the metric_descriptor cannot be updated once initially configured.
                New labels can be added in the metric_descriptor, but existing labels
                cannot be modified except for their description.
            name:
              description: "Required. The client-assigned metric identifier. Examples:\
                \ \"error_count\", \"nginx/requests\".Metric identifiers are limited\
                \ to 100 characters and can include only the following characters:\
                \ A-Z, a-z, 0-9, and the special characters _-.,+!*',()%/. The forward-slash\
                \ character (/) denotes a hierarchy of name pieces, and it cannot\
                \ be the first character of the name.The metric identifier in this\
                \ field must not be URL-encoded (https://en.wikipedia.org/wiki/Percent-encoding).\
                \ However, when the metric identifier appears as the [METRIC_ID] part\
                \ of a metric_name API parameter, then the metric identifier must\
                \ be URL-encoded. Example: \"projects/my-project/metrics/nginx%2Frequests\"\
                ."
              type: string
            updateTime:
              description: Output only. The last update timestamp of the metric.This
                field may not be present for older metrics.
              format: google-datetime
              type: string
            valueExtractor:
              description: 'Optional. A value_extractor is required when using a distribution
                logs-based metric to extract the values to record from a log entry.
                Two functions are supported for value extraction: EXTRACT(field) or
                REGEXP_EXTRACT(field, regex). The argument are:  1. field: The name
                of the log entry field from which the value is to be  extracted.  2.
                regex: A regular expression using the Google RE2 syntax  (https://github.com/google/re2/wiki/Syntax)
                with a single capture  group to extract data from the specified log
                entry field. The value  of the field is converted to a string before
                applying the regex.  It is an error to specify a regex that does not
                include exactly one  capture group.The result of the extraction must
                be convertible to a double type, as the distribution always records
                double values. If either the extraction or the conversion to double
                fails, then those values are not recorded in the distribution.Example:
                REGEXP_EXTRACT(jsonPayload.request, ".*quantity=(\d+).*")'
              type: string
            version:
              description: Deprecated. The API version that created or updated this
                metric. The v2 format is used by default and cannot be changed.
              enum:
              - V2
              - V1
              enumDescriptions:
              - Logging API v2.
              - Logging API v1.
              type: string
          type: object
        MetricDescriptor:
          description: Defines a metric type and its schema. Once a metric descriptor
            is created, deleting or altering it stops data collection and makes the
            metric type's existing data unusable.
          id: MetricDescriptor
          properties:
            description:
              description: A detailed description of the metric, which can be used
                in documentation.
              type: string
            displayName:
              description: A concise name for the metric, which can be displayed in
                user interfaces. Use sentence case without an ending period, for example
                "Request count". This field is optional but it is recommended to be
                set for any metrics associated with user-visible concepts, such as
                Quota.
              type: string
            labels:
              description: The set of labels that can be used to describe a specific
                instance of this metric type. For example, the appengine.googleapis.com/http/server/response_latencies
                metric type has a label for the HTTP response code, response_code,
                so you can look at latencies for successful responses or just for
                responses that failed.
              items:
                $ref: '#/schemas/LabelDescriptor'
              type: array
            launchStage:
              description: Optional. The launch stage of the metric definition.
              enum:
              - LAUNCH_STAGE_UNSPECIFIED
              - EARLY_ACCESS
              - ALPHA
              - BETA
              - GA
              - DEPRECATED
              enumDescriptions:
              - Do not use this default value.
              - Early Access features are limited to a closed group of testers. To
                use these features, you must sign up in advance and sign a Trusted
                Tester agreement (which includes confidentiality provisions). These
                features may be unstable, changed in backward-incompatible ways, and
                are not guaranteed to be released.
              - "Alpha is a limited availability test for releases before they are\
                \ cleared for widespread use. By Alpha, all significant design issues\
                \ are resolved and we are in the process of verifying functionality.\
                \ Alpha customers need to apply for access, agree to applicable terms,\
                \ and have their projects whitelisted. Alpha releases don\u2019t have\
                \ to be feature complete, no SLAs are provided, and there are no technical\
                \ support obligations, but they will be far enough along that customers\
                \ can actually use them in test environments or for limited-use tests\
                \ -- just like they would in normal production cases."
              - Beta is the point at which we are ready to open a release for any
                customer to use. There are no SLA or technical support obligations
                in a Beta release. Products will be complete from a feature perspective,
                but may have some open outstanding issues. Beta releases are suitable
                for limited production use cases.
              - GA features are open to all developers and are considered stable and
                fully qualified for production use.
              - "Deprecated features are scheduled to be shut down and removed. For\
                \ more information, see the \u201CDeprecation Policy\u201D section\
                \ of our Terms of Service (https://cloud.google.com/terms/) and the\
                \ Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation)\
                \ documentation."
              type: string
            metadata:
              $ref: '#/schemas/MetricDescriptorMetadata'
              description: Optional. Metadata which can be used to guide usage of
                the metric.
            metricKind:
              description: Whether the metric records instantaneous values, changes
                to a value, etc. Some combinations of metric_kind and value_type might
                not be supported.
              enum:
              - METRIC_KIND_UNSPECIFIED
              - GAUGE
              - DELTA
              - CUMULATIVE
              enumDescriptions:
              - Do not use this default value.
              - An instantaneous measurement of a value.
              - The change in a value during a time interval.
              - A value accumulated over a time interval. Cumulative measurements
                in a time series should have the same start time and increasing end
                times, until an event resets the cumulative value to zero and sets
                a new start time for the following points.
              type: string
            name:
              description: The resource name of the metric descriptor.
              type: string
            type:
              description: |
                The metric type, including its DNS name prefix. The type is not URL-encoded. All user-defined metric types have the DNS name custom.googleapis.com or external.googleapis.com. Metric types should use a natural hierarchical grouping. For example:
                "custom.googleapis.com/invoice/paid/amount"
                "external.googleapis.com/prometheus/up"
                "appengine.googleapis.com/http/server/response_latencies"
              type: string
            unit:
              description: |-
                The unit in which the metric value is reported. It is only applicable if the value_type is INT64, DOUBLE, or DISTRIBUTION. The supported units are a subset of The Unified Code for Units of Measure (http://unitsofmeasure.org/ucum.html) standard:Basic units (UNIT)
                bit bit
                By byte
                s second
                min minute
                h hour
                d dayPrefixes (PREFIX)
                k kilo (10**3)
                M mega (10**6)
                G giga (10**9)
                T tera (10**12)
                P peta (10**15)
                E exa (10**18)
                Z zetta (10**21)
                Y yotta (10**24)
                m milli (10**-3)
                u micro (10**-6)
                n nano (10**-9)
                p pico (10**-12)
                f femto (10**-15)
                a atto (10**-18)
                z zepto (10**-21)
                y yocto (10**-24)
                Ki kibi (2**10)
                Mi mebi (2**20)
                Gi gibi (2**30)
                Ti tebi (2**40)GrammarThe grammar also includes these connectors:
                / division (as an infix operator, e.g. 1/s).
                . multiplication (as an infix operator, e.g. GBy.d)The grammar for a unit is as follows:
                Expression = Component { "." Component } { "/" Component } ;

                Component = ( [ PREFIX ] UNIT | "%" ) [ Annotation ]
                          | Annotation
                          | "1"
                          ;

                Annotation = "{" NAME "}" ;
                Notes:
                Annotation is just a comment if it follows a UNIT and is  equivalent to 1 if it is used alone. For examples,  {requests}/s == 1/s, By{transmitted}/s == By/s.
                NAME is a sequence of non-blank printable ASCII characters not  containing '{' or '}'.
                1 represents dimensionless value 1, such as in 1/s.
                % represents dimensionless value 1/100, and annotates values giving  a percentage.
              type: string
            valueType:
              description: Whether the measurement is an integer, a floating-point
                number, etc. Some combinations of metric_kind and value_type might
                not be supported.
              enum:
              - VALUE_TYPE_UNSPECIFIED
              - BOOL
              - INT64
              - DOUBLE
              - STRING
              - DISTRIBUTION
              - MONEY
              enumDescriptions:
              - Do not use this default value.
              - The value is a boolean. This value type can be used only if the metric
                kind is GAUGE.
              - The value is a signed 64-bit integer.
              - The value is a double precision floating point number.
              - The value is a text string. This value type can be used only if the
                metric kind is GAUGE.
              - The value is a Distribution.
              - The value is money.
              type: string
          type: object
        MetricDescriptorMetadata:
          description: Additional annotations that can be used to guide the usage
            of a metric.
          id: MetricDescriptorMetadata
          properties:
            ingestDelay:
              description: The delay of data points caused by ingestion. Data points
                older than this age are guaranteed to be ingested and available to
                be read, excluding data loss due to errors.
              format: google-duration
              type: string
            launchStage:
              description: Deprecated. Please use the MetricDescriptor.launch_stage
                instead. The launch stage of the metric definition.
              enum:
              - LAUNCH_STAGE_UNSPECIFIED
              - EARLY_ACCESS
              - ALPHA
              - BETA
              - GA
              - DEPRECATED
              enumDescriptions:
              - Do not use this default value.
              - Early Access features are limited to a closed group of testers. To
                use these features, you must sign up in advance and sign a Trusted
                Tester agreement (which includes confidentiality provisions). These
                features may be unstable, changed in backward-incompatible ways, and
                are not guaranteed to be released.
              - "Alpha is a limited availability test for releases before they are\
                \ cleared for widespread use. By Alpha, all significant design issues\
                \ are resolved and we are in the process of verifying functionality.\
                \ Alpha customers need to apply for access, agree to applicable terms,\
                \ and have their projects whitelisted. Alpha releases don\u2019t have\
                \ to be feature complete, no SLAs are provided, and there are no technical\
                \ support obligations, but they will be far enough along that customers\
                \ can actually use them in test environments or for limited-use tests\
                \ -- just like they would in normal production cases."
              - Beta is the point at which we are ready to open a release for any
                customer to use. There are no SLA or technical support obligations
                in a Beta release. Products will be complete from a feature perspective,
                but may have some open outstanding issues. Beta releases are suitable
                for limited production use cases.
              - GA features are open to all developers and are considered stable and
                fully qualified for production use.
              - "Deprecated features are scheduled to be shut down and removed. For\
                \ more information, see the \u201CDeprecation Policy\u201D section\
                \ of our Terms of Service (https://cloud.google.com/terms/) and the\
                \ Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation)\
                \ documentation."
              type: string
            samplePeriod:
              description: The sampling period of metric data points. For metrics
                which are written periodically, consecutive data points are stored
                at this time interval, excluding data loss due to errors. Metrics
                with a higher granularity have a smaller sampling period.
              format: google-duration
              type: string
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/logging-v2/types/projects.metrics?alt=json
  title: Stackdriver Logging API
