type_info:
  documentationLink: https://cloud.google.com/dataproc/
  kind: deploymentmanager#typeInfo
  name: projects.regions.clusters
  schema:
    input:
      $schema: http://json-schema.org/draft-03/schema#
      create:
        properties:
          clusterName:
            description: Required. The cluster name. Cluster names within a project
              must be unique. Names of deleted clusters can be reused.
            type: string
          config:
            $ref: '#/schemas/ClusterConfig'
            description: Required. The cluster config. Note that Cloud Dataproc may
              set default values, and values may change when clusters are updated.
          labels:
            additionalProperties:
              type: string
            description: Optional. The labels to associate with this cluster. Label
              keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).
              Label values may be empty, but, if present, must contain 1 to 63 characters,
              and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).
              No more than 32 labels can be associated with a cluster.
            type: object
          metrics:
            $ref: '#/schemas/ClusterMetrics'
            description: 'Contains cluster daemon metrics such as HDFS and YARN stats.Beta
              Feature: This report is available for testing purposes only. It may
              be changed before final release.'
          region:
            description: Required. The Cloud Dataproc region in which to handle the
              request.
            location: path
            required: true
            type: string
          requestId:
            description: Optional. A unique id used to identify the request. If the
              server receives two CreateClusterRequest requests with the same id,
              then the second request will be ignored and the first google.longrunning.Operation
              created and stored in the backend is returned.It is recommended to always
              set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The
              id must contain only letters (a-z, A-Z), numbers (0-9), underscores
              (_), and hyphens (-). The maximum length is 40 characters.
            location: query
            type: string
        type: object
      methodName: create
      schemas:
        AcceleratorConfig:
          description: Specifies the type and number of accelerator cards attached
            to the instances of an instance. See GPUs on Compute Engine.
          id: AcceleratorConfig
          properties:
            acceleratorCount:
              description: The number of the accelerator cards of this type exposed
                to this instance.
              format: int32
              type: integer
            acceleratorTypeUri:
              description: |-
                Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes.Examples:
                https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80
                projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80
                nvidia-tesla-k80Auto Zone Exception: If you are using the Cloud Dataproc Auto Zone Placement feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
              type: string
          type: object
        Cluster:
          description: Describes the identifying information, config, and status of
            a cluster of Compute Engine instances.
          id: Cluster
          properties:
            clusterName:
              description: Required. The cluster name. Cluster names within a project
                must be unique. Names of deleted clusters can be reused.
              type: string
            config:
              $ref: '#/schemas/ClusterConfig'
              description: Required. The cluster config. Note that Cloud Dataproc
                may set default values, and values may change when clusters are updated.
            labels:
              additionalProperties:
                type: string
              description: Optional. The labels to associate with this cluster. Label
                keys must contain 1 to 63 characters, and must conform to RFC 1035
                (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty,
                but, if present, must contain 1 to 63 characters, and must conform
                to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32
                labels can be associated with a cluster.
              type: object
            metrics:
              $ref: '#/schemas/ClusterMetrics'
              description: 'Contains cluster daemon metrics such as HDFS and YARN
                stats.Beta Feature: This report is available for testing purposes
                only. It may be changed before final release.'
            projectId:
              description: Required. The Google Cloud Platform project ID that the
                cluster belongs to.
              type: string
          type: object
        ClusterConfig:
          description: The cluster config.
          id: ClusterConfig
          properties:
            configBucket:
              description: Optional. A Google Cloud Storage bucket used to stage job
                dependencies, config files, and job driver console output. If you
                do not specify a staging bucket, Cloud Dataproc will determine a Cloud
                Storage location (US, ASIA, or EU) for your cluster's staging bucket
                according to the Google Compute Engine zone where your cluster is
                deployed, and then create and manage this project-level, per-location
                bucket (see Cloud Dataproc staging bucket).
              type: string
            encryptionConfig:
              $ref: '#/schemas/EncryptionConfig'
              description: Optional. Encryption settings for the cluster.
            gceClusterConfig:
              $ref: '#/schemas/GceClusterConfig'
              description: Optional. The shared Compute Engine config settings for
                all instances in a cluster.
            initializationActions:
              description: |
                Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget):
                ROLE=$(curl -H Metadata-Flavor:Google
                http://metadata/computeMetadata/v1/instance/attributes/dataproc-role)
                if [[ "${ROLE}" == 'Master' ]]; then
                  ... master specific actions ...
                else
                  ... worker specific actions ...
                fi
              items:
                $ref: '#/schemas/NodeInitializationAction'
              type: array
            lifecycleConfig:
              $ref: '#/schemas/LifecycleConfig'
              description: Optional. Lifecycle setting for the cluster.
            masterConfig:
              $ref: '#/schemas/InstanceGroupConfig'
              description: Optional. The Compute Engine config settings for the master
                instance in a cluster.
            secondaryWorkerConfig:
              $ref: '#/schemas/InstanceGroupConfig'
              description: Optional. The Compute Engine config settings for additional
                worker instances in a cluster.
            securityConfig:
              $ref: '#/schemas/SecurityConfig'
              description: Optional. Security settings for the cluster.
            softwareConfig:
              $ref: '#/schemas/SoftwareConfig'
              description: Optional. The config settings for software inside the cluster.
            workerConfig:
              $ref: '#/schemas/InstanceGroupConfig'
              description: Optional. The Compute Engine config settings for worker
                instances in a cluster.
          type: object
        ClusterMetrics:
          description: 'Contains cluster daemon metrics, such as HDFS and YARN stats.Beta
            Feature: This report is available for testing purposes only. It may be
            changed before final release.'
          id: ClusterMetrics
          properties:
            hdfsMetrics:
              additionalProperties:
                format: int64
                type: string
              description: The HDFS metrics.
              type: object
            yarnMetrics:
              additionalProperties:
                format: int64
                type: string
              description: The YARN metrics.
              type: object
          type: object
        ClusterStatus:
          description: The status of a cluster and its instances.
          id: ClusterStatus
          properties: {}
          type: object
        DiskConfig:
          description: Specifies the config of disk options for a group of VM instances.
          id: DiskConfig
          properties:
            bootDiskSizeGb:
              description: Optional. Size in GB of the boot disk (default is 500GB).
              format: int32
              type: integer
            bootDiskType:
              description: 'Optional. Type of the boot disk (default is "pd-standard").
                Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard"
                (Persistent Disk Hard Disk Drive).'
              type: string
            numLocalSsds:
              description: Optional. Number of attached SSDs, from 0 to 4 (default
                is 0). If SSDs are not attached, the boot disk is used to store runtime
                logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html)
                data. If one or more SSDs are attached, this runtime bulk data is
                spread across them, and the boot disk contains only basic config and
                installed binaries.
              format: int32
              type: integer
          type: object
        EncryptionConfig:
          description: Encryption settings for the cluster.
          id: EncryptionConfig
          properties:
            gcePdKmsKeyName:
              description: Optional. The Cloud KMS key name to use for PD disk encryption
                for all instances in the cluster.
              type: string
          type: object
        GceClusterConfig:
          description: Common config settings for resources of Compute Engine cluster
            instances, applicable to all instances in the cluster.
          id: GceClusterConfig
          properties:
            internalIpOnly:
              description: Optional. If true, all instances in the cluster will only
                have internal IP addresses. By default, clusters are not restricted
                to internal IP addresses, and will have ephemeral external IP addresses
                assigned to each instance. This internal_ip_only restriction can only
                be enabled for subnetwork enabled networks, and all off-cluster dependencies
                must be configured to be accessible without external IP addresses.
              type: boolean
            metadata:
              additionalProperties:
                type: string
              description: The Compute Engine metadata entries to add to all instances
                (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
              type: object
            networkUri:
              description: |-
                Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks for more information).A full URL, partial URI, or short name are valid. Examples:
                https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default
                projects/[project_id]/regions/global/default
                default
              type: string
            serviceAccount:
              description: |-
                Optional. The service account of the instances. Defaults to the default Compute Engine service account. Custom service accounts need permissions equivalent to the following IAM roles:
                roles/logging.logWriter
                roles/storage.objectAdmin(see https://cloud.google.com/compute/docs/access/service-accounts#custom_service_accounts for more information). Example: [account_id]@[project_id].iam.gserviceaccount.com
              type: string
            serviceAccountScopes:
              description: |-
                Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included:
                https://www.googleapis.com/auth/cloud.useraccounts.readonly
                https://www.googleapis.com/auth/devstorage.read_write
                https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided:
                https://www.googleapis.com/auth/bigquery
                https://www.googleapis.com/auth/bigtable.admin.table
                https://www.googleapis.com/auth/bigtable.data
                https://www.googleapis.com/auth/devstorage.full_control
              items:
                type: string
              type: array
            subnetworkUri:
              description: |-
                Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples:
                https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0
                projects/[project_id]/regions/us-east1/subnetworks/sub0
                sub0
              type: string
            tags:
              description: The Compute Engine tags to add to all instances (see Tagging
                instances).
              items:
                type: string
              type: array
            zoneUri:
              description: |-
                Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Cloud Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples:
                https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]
                projects/[project_id]/zones/[zone]
                us-central1-f
              type: string
          type: object
        InstanceGroupConfig:
          description: Optional. The config settings for Compute Engine resources
            in an instance group, such as a master or worker group.
          id: InstanceGroupConfig
          properties:
            accelerators:
              description: Optional. The Compute Engine accelerator configuration
                for these instances.
              items:
                $ref: '#/schemas/AcceleratorConfig'
              type: array
            diskConfig:
              $ref: '#/schemas/DiskConfig'
              description: Optional. Disk option config settings.
            imageUri:
              description: Optional. The Compute Engine image resource used for cluster
                instances. It can be specified or may be inferred from SoftwareConfig.image_version.
              type: string
            isPreemptible:
              description: Optional. Specifies that this instance group contains preemptible
                instances.
              type: boolean
            machineTypeUri:
              description: |-
                Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples:
                https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2
                projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2
                n1-standard-2Auto Zone Exception: If you are using the Cloud Dataproc Auto Zone Placement feature, you must use the short name of the machine type resource, for example, n1-standard-2.
              type: string
            numInstances:
              description: Optional. The number of VM instances in the instance group.
                For master instance groups, must be set to 1.
              format: int32
              type: integer
          type: object
        KerberosConfig:
          description: Specifies Kerberos related configuration.
          id: KerberosConfig
          properties:
            crossRealmTrustAdminServer:
              description: Optional. The admin server (IP or hostname) for the remote
                trusted realm in a cross realm trust relationship.
              type: string
            crossRealmTrustKdc:
              description: Optional. The KDC (IP or hostname) for the remote trusted
                realm in a cross realm trust relationship.
              type: string
            crossRealmTrustRealm:
              description: Optional. The remote realm the Dataproc on-cluster KDC
                will trust, should the user enable cross realm trust.
              type: string
            crossRealmTrustSharedPasswordUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the shared password between the on-cluster Kerberos realm
                and the remote trusted realm, in a cross realm trust relationship.
              type: string
            enableKerberos:
              description: Optional. Flag to indicate whether to Kerberize the cluster.
              type: boolean
            kdcDbKeyUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the master key of the KDC database.
              type: string
            keyPasswordUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the password to the user provided key. For the self-signed
                certificate, this password is generated by Dataproc.
              type: string
            keystorePasswordUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the password to the user provided keystore. For the self-signed
                certificate, this password is generated by Dataproc.
              type: string
            keystoreUri:
              description: Optional. The Cloud Storage URI of the keystore file used
                for SSL encryption. If not provided, Dataproc will provide a self-signed
                certificate.
              type: string
            kmsKeyUri:
              description: Required. The uri of the KMS key used to encrypt various
                sensitive files.
              type: string
            rootPrincipalPasswordUri:
              description: Required. The Cloud Storage URI of a KMS encrypted file
                containing the root principal password.
              type: string
            tgtLifetimeHours:
              description: Optional. The lifetime of the ticket granting ticket, in
                hours. If not specified, or user specifies 0, then default value 10
                will be used.
              format: int32
              type: integer
            truststorePasswordUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the password to the user provided truststore. For the self-signed
                certificate, this password is generated by Dataproc.
              type: string
            truststoreUri:
              description: Optional. The Cloud Storage URI of the truststore file
                used for SSL encryption. If not provided, Dataproc will provide a
                self-signed certificate.
              type: string
          type: object
        LifecycleConfig:
          description: Specifies the cluster auto-delete schedule configuration.
          id: LifecycleConfig
          properties:
            autoDeleteTime:
              description: Optional. The time when cluster will be auto-deleted.
              format: google-datetime
              type: string
            autoDeleteTtl:
              description: 'Optional. The lifetime duration of cluster. The cluster
                will be auto-deleted at the end of this period. Valid range: 10m,
                14d.Example: "1d", to delete the cluster 1 day after its creation..'
              format: google-duration
              type: string
            idleDeleteTtl:
              description: 'Optional. The duration to keep the cluster alive while
                idling. Passing this threshold will cause the cluster to be deleted.
                Valid range: 10m, 14d.Example: "10m", the minimum value, to delete
                the cluster when it has had no jobs running for 10 minutes.'
              format: google-duration
              type: string
          type: object
        ManagedGroupConfig:
          description: Specifies the resources used to actively manage an instance
            group.
          id: ManagedGroupConfig
          properties: {}
          type: object
        NodeInitializationAction:
          description: Specifies an executable to run on a fully configured node and
            a timeout period for executable completion.
          id: NodeInitializationAction
          properties:
            executableFile:
              description: Required. Cloud Storage URI of executable file.
              type: string
            executionTimeout:
              description: Optional. Amount of time executable has to complete. Default
                is 10 minutes. Cluster creation fails with an explanatory error message
                (the name of the executable that caused the error and the exceeded
                timeout period) if the executable is not completed at end of the timeout
                period.
              format: google-duration
              type: string
          type: object
        SecurityConfig:
          description: Security related configuration, including Kerberos.
          id: SecurityConfig
          properties:
            kerberosConfig:
              $ref: '#/schemas/KerberosConfig'
              description: Kerberos related configuration.
          type: object
        SoftwareConfig:
          description: Specifies the selection and config of software inside the cluster.
          id: SoftwareConfig
          properties:
            imageVersion:
              description: Optional. The version of software inside the cluster. It
                must be one of the supported Cloud Dataproc Versions, such as "1.2"
                (including a subminor version, such as "1.2.29"), or the "preview"
                version. If unspecified, it defaults to the latest Debian version.
              type: string
            optionalComponents:
              description: The set of optional components to activate on the cluster.
              enumDescriptions:
              - Unspecified component.
              - The Anaconda python distribution.
              - The Hive Web HCatalog (the REST service for accessing HCatalog).
              - The Jupyter Notebook.
              - The Zeppelin notebook.
              items:
                enum:
                - COMPONENT_UNSPECIFIED
                - ANACONDA
                - HIVE_WEBHCAT
                - JUPYTER
                - ZEPPELIN
                type: string
              type: array
            properties:
              additionalProperties:
                type: string
              description: |-
                Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings:
                capacity-scheduler: capacity-scheduler.xml
                core: core-site.xml
                distcp: distcp-default.xml
                hdfs: hdfs-site.xml
                hive: hive-site.xml
                mapred: mapred-site.xml
                pig: pig.properties
                spark: spark-defaults.conf
                yarn: yarn-site.xmlFor more information, see Cluster properties.
              type: object
          type: object
    output:
      $schema: http://json-schema.org/draft-03/schema#
      mainSchema:
        $ref: '#/schemas/Cluster'
      methodName: get
      schemas:
        AcceleratorConfig:
          description: Specifies the type and number of accelerator cards attached
            to the instances of an instance. See GPUs on Compute Engine.
          id: AcceleratorConfig
          properties:
            acceleratorCount:
              description: The number of the accelerator cards of this type exposed
                to this instance.
              format: int32
              type: integer
            acceleratorTypeUri:
              description: |-
                Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes.Examples:
                https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80
                projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80
                nvidia-tesla-k80Auto Zone Exception: If you are using the Cloud Dataproc Auto Zone Placement feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
              type: string
          type: object
        Cluster:
          description: Describes the identifying information, config, and status of
            a cluster of Compute Engine instances.
          id: Cluster
          properties:
            clusterName:
              description: Required. The cluster name. Cluster names within a project
                must be unique. Names of deleted clusters can be reused.
              type: string
            clusterUuid:
              description: Output only. A cluster UUID (Unique Universal Identifier).
                Cloud Dataproc generates this value when it creates the cluster.
              type: string
            config:
              $ref: '#/schemas/ClusterConfig'
              description: Required. The cluster config. Note that Cloud Dataproc
                may set default values, and values may change when clusters are updated.
            labels:
              additionalProperties:
                type: string
              description: Optional. The labels to associate with this cluster. Label
                keys must contain 1 to 63 characters, and must conform to RFC 1035
                (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty,
                but, if present, must contain 1 to 63 characters, and must conform
                to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32
                labels can be associated with a cluster.
              type: object
            metrics:
              $ref: '#/schemas/ClusterMetrics'
              description: 'Contains cluster daemon metrics such as HDFS and YARN
                stats.Beta Feature: This report is available for testing purposes
                only. It may be changed before final release.'
            projectId:
              description: Required. The Google Cloud Platform project ID that the
                cluster belongs to.
              type: string
            status:
              $ref: '#/schemas/ClusterStatus'
              description: Output only. Cluster status.
            statusHistory:
              description: Output only. The previous cluster status.
              items:
                $ref: '#/schemas/ClusterStatus'
              type: array
          type: object
        ClusterConfig:
          description: The cluster config.
          id: ClusterConfig
          properties:
            configBucket:
              description: Optional. A Google Cloud Storage bucket used to stage job
                dependencies, config files, and job driver console output. If you
                do not specify a staging bucket, Cloud Dataproc will determine a Cloud
                Storage location (US, ASIA, or EU) for your cluster's staging bucket
                according to the Google Compute Engine zone where your cluster is
                deployed, and then create and manage this project-level, per-location
                bucket (see Cloud Dataproc staging bucket).
              type: string
            encryptionConfig:
              $ref: '#/schemas/EncryptionConfig'
              description: Optional. Encryption settings for the cluster.
            gceClusterConfig:
              $ref: '#/schemas/GceClusterConfig'
              description: Optional. The shared Compute Engine config settings for
                all instances in a cluster.
            initializationActions:
              description: |
                Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget):
                ROLE=$(curl -H Metadata-Flavor:Google
                http://metadata/computeMetadata/v1/instance/attributes/dataproc-role)
                if [[ "${ROLE}" == 'Master' ]]; then
                  ... master specific actions ...
                else
                  ... worker specific actions ...
                fi
              items:
                $ref: '#/schemas/NodeInitializationAction'
              type: array
            lifecycleConfig:
              $ref: '#/schemas/LifecycleConfig'
              description: Optional. Lifecycle setting for the cluster.
            masterConfig:
              $ref: '#/schemas/InstanceGroupConfig'
              description: Optional. The Compute Engine config settings for the master
                instance in a cluster.
            secondaryWorkerConfig:
              $ref: '#/schemas/InstanceGroupConfig'
              description: Optional. The Compute Engine config settings for additional
                worker instances in a cluster.
            securityConfig:
              $ref: '#/schemas/SecurityConfig'
              description: Optional. Security settings for the cluster.
            softwareConfig:
              $ref: '#/schemas/SoftwareConfig'
              description: Optional. The config settings for software inside the cluster.
            workerConfig:
              $ref: '#/schemas/InstanceGroupConfig'
              description: Optional. The Compute Engine config settings for worker
                instances in a cluster.
          type: object
        ClusterMetrics:
          description: 'Contains cluster daemon metrics, such as HDFS and YARN stats.Beta
            Feature: This report is available for testing purposes only. It may be
            changed before final release.'
          id: ClusterMetrics
          properties:
            hdfsMetrics:
              additionalProperties:
                format: int64
                type: string
              description: The HDFS metrics.
              type: object
            yarnMetrics:
              additionalProperties:
                format: int64
                type: string
              description: The YARN metrics.
              type: object
          type: object
        ClusterStatus:
          description: The status of a cluster and its instances.
          id: ClusterStatus
          properties:
            detail:
              description: Output only. Optional details of cluster's state.
              type: string
            state:
              description: Output only. The cluster's state.
              enum:
              - UNKNOWN
              - CREATING
              - RUNNING
              - ERROR
              - DELETING
              - UPDATING
              enumDescriptions:
              - The cluster state is unknown.
              - The cluster is being created and set up. It is not ready for use.
              - The cluster is currently running and healthy. It is ready for use.
              - The cluster encountered an error. It is not ready for use.
              - The cluster is being deleted. It cannot be used.
              - The cluster is being updated. It continues to accept and process jobs.
              type: string
            stateStartTime:
              description: Output only. Time when this state was entered.
              format: google-datetime
              type: string
            substate:
              description: Output only. Additional state information that includes
                status reported by the agent.
              enum:
              - UNSPECIFIED
              - UNHEALTHY
              - STALE_STATUS
              enumDescriptions:
              - The cluster substate is unknown.
              - The cluster is known to be in an unhealthy state (for example, critical
                daemons are not running or HDFS capacity is exhausted).Applies to
                RUNNING state.
              - The agent-reported status is out of date (may occur if Cloud Dataproc
                loses communication with Agent).Applies to RUNNING state.
              type: string
          type: object
        DiskConfig:
          description: Specifies the config of disk options for a group of VM instances.
          id: DiskConfig
          properties:
            bootDiskSizeGb:
              description: Optional. Size in GB of the boot disk (default is 500GB).
              format: int32
              type: integer
            bootDiskType:
              description: 'Optional. Type of the boot disk (default is "pd-standard").
                Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard"
                (Persistent Disk Hard Disk Drive).'
              type: string
            numLocalSsds:
              description: Optional. Number of attached SSDs, from 0 to 4 (default
                is 0). If SSDs are not attached, the boot disk is used to store runtime
                logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html)
                data. If one or more SSDs are attached, this runtime bulk data is
                spread across them, and the boot disk contains only basic config and
                installed binaries.
              format: int32
              type: integer
          type: object
        EncryptionConfig:
          description: Encryption settings for the cluster.
          id: EncryptionConfig
          properties:
            gcePdKmsKeyName:
              description: Optional. The Cloud KMS key name to use for PD disk encryption
                for all instances in the cluster.
              type: string
          type: object
        GceClusterConfig:
          description: Common config settings for resources of Compute Engine cluster
            instances, applicable to all instances in the cluster.
          id: GceClusterConfig
          properties:
            internalIpOnly:
              description: Optional. If true, all instances in the cluster will only
                have internal IP addresses. By default, clusters are not restricted
                to internal IP addresses, and will have ephemeral external IP addresses
                assigned to each instance. This internal_ip_only restriction can only
                be enabled for subnetwork enabled networks, and all off-cluster dependencies
                must be configured to be accessible without external IP addresses.
              type: boolean
            metadata:
              additionalProperties:
                type: string
              description: The Compute Engine metadata entries to add to all instances
                (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
              type: object
            networkUri:
              description: |-
                Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks for more information).A full URL, partial URI, or short name are valid. Examples:
                https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default
                projects/[project_id]/regions/global/default
                default
              type: string
            serviceAccount:
              description: |-
                Optional. The service account of the instances. Defaults to the default Compute Engine service account. Custom service accounts need permissions equivalent to the following IAM roles:
                roles/logging.logWriter
                roles/storage.objectAdmin(see https://cloud.google.com/compute/docs/access/service-accounts#custom_service_accounts for more information). Example: [account_id]@[project_id].iam.gserviceaccount.com
              type: string
            serviceAccountScopes:
              description: |-
                Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included:
                https://www.googleapis.com/auth/cloud.useraccounts.readonly
                https://www.googleapis.com/auth/devstorage.read_write
                https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided:
                https://www.googleapis.com/auth/bigquery
                https://www.googleapis.com/auth/bigtable.admin.table
                https://www.googleapis.com/auth/bigtable.data
                https://www.googleapis.com/auth/devstorage.full_control
              items:
                type: string
              type: array
            subnetworkUri:
              description: |-
                Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples:
                https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0
                projects/[project_id]/regions/us-east1/subnetworks/sub0
                sub0
              type: string
            tags:
              description: The Compute Engine tags to add to all instances (see Tagging
                instances).
              items:
                type: string
              type: array
            zoneUri:
              description: |-
                Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Cloud Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples:
                https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]
                projects/[project_id]/zones/[zone]
                us-central1-f
              type: string
          type: object
        InstanceGroupConfig:
          description: Optional. The config settings for Compute Engine resources
            in an instance group, such as a master or worker group.
          id: InstanceGroupConfig
          properties:
            accelerators:
              description: Optional. The Compute Engine accelerator configuration
                for these instances.
              items:
                $ref: '#/schemas/AcceleratorConfig'
              type: array
            diskConfig:
              $ref: '#/schemas/DiskConfig'
              description: Optional. Disk option config settings.
            imageUri:
              description: Optional. The Compute Engine image resource used for cluster
                instances. It can be specified or may be inferred from SoftwareConfig.image_version.
              type: string
            instanceNames:
              description: Output only. The list of instance names. Cloud Dataproc
                derives the names from cluster_name, num_instances, and the instance
                group.
              items:
                type: string
              type: array
            isPreemptible:
              description: Optional. Specifies that this instance group contains preemptible
                instances.
              type: boolean
            machineTypeUri:
              description: |-
                Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples:
                https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2
                projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2
                n1-standard-2Auto Zone Exception: If you are using the Cloud Dataproc Auto Zone Placement feature, you must use the short name of the machine type resource, for example, n1-standard-2.
              type: string
            managedGroupConfig:
              $ref: '#/schemas/ManagedGroupConfig'
              description: Output only. The config for Compute Engine Instance Group
                Manager that manages this group. This is only used for preemptible
                instance groups.
            numInstances:
              description: Optional. The number of VM instances in the instance group.
                For master instance groups, must be set to 1.
              format: int32
              type: integer
          type: object
        KerberosConfig:
          description: Specifies Kerberos related configuration.
          id: KerberosConfig
          properties:
            crossRealmTrustAdminServer:
              description: Optional. The admin server (IP or hostname) for the remote
                trusted realm in a cross realm trust relationship.
              type: string
            crossRealmTrustKdc:
              description: Optional. The KDC (IP or hostname) for the remote trusted
                realm in a cross realm trust relationship.
              type: string
            crossRealmTrustRealm:
              description: Optional. The remote realm the Dataproc on-cluster KDC
                will trust, should the user enable cross realm trust.
              type: string
            crossRealmTrustSharedPasswordUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the shared password between the on-cluster Kerberos realm
                and the remote trusted realm, in a cross realm trust relationship.
              type: string
            enableKerberos:
              description: Optional. Flag to indicate whether to Kerberize the cluster.
              type: boolean
            kdcDbKeyUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the master key of the KDC database.
              type: string
            keyPasswordUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the password to the user provided key. For the self-signed
                certificate, this password is generated by Dataproc.
              type: string
            keystorePasswordUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the password to the user provided keystore. For the self-signed
                certificate, this password is generated by Dataproc.
              type: string
            keystoreUri:
              description: Optional. The Cloud Storage URI of the keystore file used
                for SSL encryption. If not provided, Dataproc will provide a self-signed
                certificate.
              type: string
            kmsKeyUri:
              description: Required. The uri of the KMS key used to encrypt various
                sensitive files.
              type: string
            rootPrincipalPasswordUri:
              description: Required. The Cloud Storage URI of a KMS encrypted file
                containing the root principal password.
              type: string
            tgtLifetimeHours:
              description: Optional. The lifetime of the ticket granting ticket, in
                hours. If not specified, or user specifies 0, then default value 10
                will be used.
              format: int32
              type: integer
            truststorePasswordUri:
              description: Optional. The Cloud Storage URI of a KMS encrypted file
                containing the password to the user provided truststore. For the self-signed
                certificate, this password is generated by Dataproc.
              type: string
            truststoreUri:
              description: Optional. The Cloud Storage URI of the truststore file
                used for SSL encryption. If not provided, Dataproc will provide a
                self-signed certificate.
              type: string
          type: object
        LifecycleConfig:
          description: Specifies the cluster auto-delete schedule configuration.
          id: LifecycleConfig
          properties:
            autoDeleteTime:
              description: Optional. The time when cluster will be auto-deleted.
              format: google-datetime
              type: string
            autoDeleteTtl:
              description: 'Optional. The lifetime duration of cluster. The cluster
                will be auto-deleted at the end of this period. Valid range: 10m,
                14d.Example: "1d", to delete the cluster 1 day after its creation..'
              format: google-duration
              type: string
            idleDeleteTtl:
              description: 'Optional. The duration to keep the cluster alive while
                idling. Passing this threshold will cause the cluster to be deleted.
                Valid range: 10m, 14d.Example: "10m", the minimum value, to delete
                the cluster when it has had no jobs running for 10 minutes.'
              format: google-duration
              type: string
            idleStartTime:
              description: Output only. The time when cluster became idle (most recent
                job finished) and became eligible for deletion due to idleness.
              format: google-datetime
              type: string
          type: object
        ManagedGroupConfig:
          description: Specifies the resources used to actively manage an instance
            group.
          id: ManagedGroupConfig
          properties:
            instanceGroupManagerName:
              description: Output only. The name of the Instance Group Manager for
                this group.
              type: string
            instanceTemplateName:
              description: Output only. The name of the Instance Template used for
                the Managed Instance Group.
              type: string
          type: object
        NodeInitializationAction:
          description: Specifies an executable to run on a fully configured node and
            a timeout period for executable completion.
          id: NodeInitializationAction
          properties:
            executableFile:
              description: Required. Cloud Storage URI of executable file.
              type: string
            executionTimeout:
              description: Optional. Amount of time executable has to complete. Default
                is 10 minutes. Cluster creation fails with an explanatory error message
                (the name of the executable that caused the error and the exceeded
                timeout period) if the executable is not completed at end of the timeout
                period.
              format: google-duration
              type: string
          type: object
        SecurityConfig:
          description: Security related configuration, including Kerberos.
          id: SecurityConfig
          properties:
            kerberosConfig:
              $ref: '#/schemas/KerberosConfig'
              description: Kerberos related configuration.
          type: object
        SoftwareConfig:
          description: Specifies the selection and config of software inside the cluster.
          id: SoftwareConfig
          properties:
            imageVersion:
              description: Optional. The version of software inside the cluster. It
                must be one of the supported Cloud Dataproc Versions, such as "1.2"
                (including a subminor version, such as "1.2.29"), or the "preview"
                version. If unspecified, it defaults to the latest Debian version.
              type: string
            optionalComponents:
              description: The set of optional components to activate on the cluster.
              enumDescriptions:
              - Unspecified component.
              - The Anaconda python distribution.
              - The Hive Web HCatalog (the REST service for accessing HCatalog).
              - The Jupyter Notebook.
              - The Zeppelin notebook.
              items:
                enum:
                - COMPONENT_UNSPECIFIED
                - ANACONDA
                - HIVE_WEBHCAT
                - JUPYTER
                - ZEPPELIN
                type: string
              type: array
            properties:
              additionalProperties:
                type: string
              description: |-
                Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings:
                capacity-scheduler: capacity-scheduler.xml
                core: core-site.xml
                distcp: distcp-default.xml
                hdfs: hdfs-site.xml
                hive: hive-site.xml
                mapred: mapred-site.xml
                pig: pig.properties
                spark: spark-defaults.conf
                yarn: yarn-site.xmlFor more information, see Cluster properties.
              type: object
          type: object
  selfLink: https://www.googleapis.com/deploymentmanager/v2beta/projects/gcp-types/global/typeProviders/dataproc-v1/types/projects.regions.clusters?alt=json
  title: Cloud Dataproc API
